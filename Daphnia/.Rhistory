cite(vegan)
library(vegan)
cite("vegan")
?cite
citation("vegan")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
## trying again to get diff eqs correct
devtools::install_github("parksw3/boms")
## install
devtools::install_github("parksw3/fitode")
## install
devtools::install_github("parksw3/fitode")
install.packages("glmmTMB")
library(glmmTMB)
install.packages("TMB", type = "Source")
install.packages("TMB", type = "source")
install.packages("TMB", type = "Source")
library(glmmTMB)
install.packages("glmmTMB")
library(glmmTMB)
library(lme4)
install.packages("lme4")
library(lme4)
install.packages("lme4")
library(lme4)
## simulate data
#devtools::install_github("parksw3/fitode")
library(fitode)
cammonium = (1-9.4235e-01)
chl_nh4_mod3 <- odemodel(
name = "algal_nit",
model = list(
pred_nh4 ~ -a*pred_chl*(pred_nh4/(k+pred_nh4))+r*death*pred_chl-cammonium,
pred_chl ~ a*pred_chl*(pred_nh4/(k+pred_nh4)) - death*pred_chl
),
observation = list(
nh4 ~ dlnorm(meanlog = log(pred_nh4), sdlog = 0.05),
chl ~ dlnorm(meanlog = log(pred_chl), sdlog = 0.01)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("a","k", "r","death", "pred_nh40", "pred_chl0")
)
start3 <- c(a = 0.03,
k = .03,
r = 1,
death = 0.02,
pred_nh40= 15,
pred_chl0 = 40
)
s3 <-  simulate(chl_nh4_mod3,nsim = 5, parms= start3, times = seq(1,40),
solver.opts=list(method="rk4", hini=0.1))
plot(s3$times, s3$chl)
plot(s3$times, s3$nh4)
fit3 <- fitode(
chl_nh4_mod3,
data = s3,
start=start3,
tcol = "times",
solver.opts=list(method="rk4", hini=0.1)
)
coef(fit3)
st <- expand.grid(
a = seq(0.01,0.5,0.04),
k = seq(0.01,0.5,0.04),
r = seq(0.01,1,0.08),
death = seq(0.001,0.05,0.004),
pred_nh40 = 15,
pred_chl0 = 40
)
temp <- data.frame (
a =  0,
k = 0,
r = 0,
death = 0,
pred_nh40 = 15,
pred_chl0 = 40,
lowa = 0,
lowk = 0,
lowr = 0,
lowdeath = 0,
lownh4 = 0,
lowchl = 0,
higha = 0,
highk = 0,
highr = 0,
highdeath = 0,
highnh4 = 0,
highchl = 0,
loglik = 0,
ttime  = 0
)
for(i in 1:nrow(st)) {
newstart <- with(st[i,],
list(
a =  a,
k = k,
r=r,
death = death,
pred_nh40 = pred_nh40,
pred_chl0 = pred_chl0
))
x <- system.time({
tempm <- try((fitode(chl_nh4_mod3, data= s3, start = newstart, tcol = "times",
solver.opts = list(method="rk4", hini=0.1))),silent = TRUE)
if (class(tempm) == "try-error") {
temp[i,] <- "NA"
} else {
temp[i,1:6] <- coef(tempm)
temp[i,7:12] <- confint(tempm)[,2]
temp[i,13:18] <- confint(tempm)[,3]
temp$loglik[i] <- logLik(tempm)
}})
temp$ttime[i] <- x[[3]]
print(i/nrow(st))
}
dat <- temp %>% filter(a != "NA")
library(tidyverse)
dat <- temp %>% filter(a != "NA")
nrow(temp) ## 300
nrow(dat)  ## 18
dat
write.csv(dat, file = "filtered_sim.csv")
write.csv(temp, file = "unfiltered_sim.csv")
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(fitdistrplus)
lit <- read.csv("literature_extraction.csv")
surv <- lit %>% dplyr::select("Replicates","daphnia_survival","range") %>% drop_na(daphnia_survival)
## subtract average number of days to large size (based on my experiment- because I need this to be a prior for survival after growth to adult)
surv$survival <- surv$daphnia_survival- 4.8
d<-fitdistr(surv$survival, "normal")
p <- ggplot(surv) +
geom_histogram(aes(x = survival, y = ..density..),
binwidth = 1, fill = "grey", color = "black")
p
p <- ggplot(surv) +
geom_histogram(aes(x = survival, y = ..density..),
binwidth = 2, fill = "grey", color = "black")
p
dlfun <- function(x) {
with(as.list(d$estimate), dlnorm(x, meanlog, sdlog))
}
p + stat_function(fun=dlfun, color="red")
dnfun <- function(x) {
with(as.list(d$estimate), dnorm(x, mean, sd))
}
p + stat_function(fun=dnfun, color="red")
setwd("~/GitHub/Species-Traits/Daphnia")
library(tidyverse)
source("../transfer_functions.R")
source("..chl_adj.R")
source("../chl_adj.R")
daph <- read.csv("daphnia_lifetime.csv")
daph <- daph %>%
filter(adult_only=="N")
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph_fec <- daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summarize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg)) %>%
mutate(daily_fec = life_fec / time_adult)
daph_fec_adj <- daph_fec %>%
mutate(cell = chl_adj(chl = chl))
setwd("~/GitHub/Species-Traits")
lit <- read.csv("literature_extraction.csv")
fec_lit <- lit %>% dplyr::select(c("daphnia_reproduction", "sd_repro", "units_reproduction", "Replicates","algal_conc" ,"Authors")) %>%
filter(daphnia_reproduction != "NA")
fec_lit
setwd("~/GitHub/Species-Traits/Daphnia")
write.csv(fec_lit, file = "fec_lit.csv")
5*10^5
10^8
1e+07/60
fec_lit$cell <- c(NA,1e+09, NA, NA, 1e+08,5e+05, 166666.7, NA, 5e+05, NA,NA, NA)
str(daph_fec)
400/60
40*5
200/60
setwd("~/GitHub/Species-Traits")
knitr::opts_chunk$set(echo = TRUE)
library(deSolve)
library(here)
source("pop_curves.R")
knitr::opts_chunk$set(echo = TRUE)
library(deSolve)
library(here)
state <- c(
ammonium = 10,
daph_j = 0,
daph_a = 20,
algae  = 20
)
param <- read.csv(here("RDS_compiled/parameters_no_cerio.csv"))
parameters <- c(
alpha = 0.2339,    #mg N/(ug chl*day)
kappa = 0.639,  # 0.2153469,    #mg N
e =  12,               #ug chl/mgN
death1 = 2.4,         # 1/day
fa = median(param$a_feed_m),       # ug chl/(daphniaA*day)
fj = median(param$j_feed_m),       # ug chl/(daphniaj*day)
rho = 0.0785709,                    # mg N/ chl
camm = 1- median(param$amm_param_b),     # 1/day
xa = median(param$a_exc_m),       # mg N/ (daphniaA*day)
xj= median(param$j_exc_m),        # mg N/ (daphniaJ*day)
g1 =median(param$growth_a),        # daphniaD/(daphniaJ*day)
g2=median(param$growth_b),         # ug chl
#g1 = 1/4.8,
death2 = 1/median(param$death_b),   # 1/day
b1 = median(param$fec_a),       # daphniaJ/(daphniaD*day)
b2 = median(param$fec_b),        # ug chl
death3 = 1/median(param$death_b)  # 1/day
)
full_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# ammonium is added from release by both juvenile and adult daphnia  and lost through algal update and nitritfication
dammonium <- -(alpha*ammonium)/(kappa+ammonium)*algae + rho*death1*algae - camm*ammonium + daph_a*xa + daph_j*xa/10
#juvenile daphia are added by density dependent (large daphnia) birth
ddaph_j <- daph_a*(b1*algae)/(b2+algae) - daph_j*death3*10
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- - daph_a*death3 +(g1*algae)/(g2+algae)  #+daph_j*g1
# algae is added from growth based on uptake of ammonium
dalgae <- (alpha*ammonium)/(kappa+ammonium)*algae*e - death1*algae- daph_a*fa - daph_j*fj
# return the rate of change
list(c(dammonium, ddaph_j,ddaph_a,dalgae))
})
}
out_med <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters)
predmed <- as.data.frame(out_med)
predmed$quantile <- "med"
source("treatments.R")
source("pop_curves.R")
adult <- popA %>% filter(treatment == 3) %>% group_by(TankNum,ExptDay) %>%
summarize(pop_mean = mean(count)*(mean(Liters)/.01)) %>% dplyr::select(TankNum, ExptDay, pop_mean)
names(adult) <- c("TankNum", "time","daph_a")
juv <- popJ %>% filter(treatment == 3) %>% group_by(TankNum,ExptDay) %>%
summarize(pop_mean = mean(count)*(mean(Liters)/.01))
names(juv) <- c("TankNum","time","daph_j")
ad_graph <- ggplot(predmed, aes(time,daph_a)) + geom_line(linetype = "solid")+
#geom_line(data= predup, linetype = "dotdash") + geom_line(data=pred, linetype ="dotdash")+
theme_bw()+ geom_point(data = adult,aes(time,daph_a) )+
ylab("Adult Daphnia")+xlab("Days")+
theme(axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 32),
strip.text = element_text(size = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank())
ad_graph
juv_graph <- ggplot(predmed, aes(time,daph_j)) + geom_line(linetype = "solid")+
#geom_line(data= predup, linetype = "dotdash") + geom_line(data=pred, linetype ="dotdash")+
theme_bw()+ geom_point(data = juv,aes(time,daph_j) )+
ylab("Adult Daphnia")+xlab("Days")+
theme(axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 32),
strip.text = element_text(size = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank())
juv_graph
setwd("~/GitHub/Species-Traits/Daphnia")
library(tidyverse)
source("../transfer_functions.R")
source("../chl_adj.R")
daph <- read.csv("daphnia_lifetime.csv")
daph <- daph %>%
filter(adult_only=="N")
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph_fec <- daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summarize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg)) %>%
mutate(daily_fec = life_fec / time_adult)
daph_fec_adj <- daph_fec %>%
mutate(cell = chl_adj(chl = chl))
str(daph_fec_adj)
daph_fec_adj$se <- 0
## data from literature
fec_lit <- read.csv("fec_lit.csv")
fec_lit$cell <- c(NA,1e+09, NA, NA, 1e+08,5e+05, 166666.7, NA, 5e+05, NA,NA, NA)
fec_lit
fec_lit$se <- fec_lit$sd_repro/sqrt(fec_lit$Replicates)
fec_lit$life_fec <- fec_lit$daphnia_reproduction
fec_lit <- fec_lit %>% filter(!is.na(cell))
fec_lit
## fit with weights by se
library(brms)
?priors
?prior
str(daph_fec_adj)
## data from literature
fec_lit <- read.csv("fec_lit.csv")
fec_lit$cell <- c(NA,1e+09, NA, NA, 1e+08,5e+05, 166666.7, NA, 5e+05, NA,NA, NA)
fec_lit$daily_fec <- fec_lit$daphnia_reproduction
fec_lit <- fec_lit %>% filter(!is.na(cell))
ndat <- daph_fec_adj %>% select("cell","se","daily_fec")
ndat1 <- fec_lit %>% select("cell", "se", "daily_fec")
fec_lit$se <- fec_lit$sd_repro/sqrt(fec_lit$Replicates)
fec_lit$daily_fec <- fec_lit$daphnia_reproduction
fec_lit <- fec_lit %>% filter(!is.na(cell))
ndat1 <- fec_lit %>% select("cell", "se", "daily_fec")
rbind(ndat, ndat1)
fec_lit$Rep <- NA
ndat <- daph_fec_adj %>% select("cell","se","daily_fec")
fec_lit$rep <- NA
ndat1 <- fec_lit %>% select("cell", "se", "daily_fec", "rep")
rbind(ndat, ndat1)
p <- rbind(ndat, ndat1)
head(p)
str(ndat)
str(ndat1)
fec_lit$rep <- as.factor(rep("A", nrow(fec_lit)))
ndat1 <- fec_lit %>% select("cell", "se", "daily_fec", "rep")
p <- rbind(ndat, ndat1)
p
head(p)
p <- rbind(as.matrix(ndat), as.matrix(ndat1))
head(p)
str(p)
p <- as.data.frame(rbind(as.matrix(ndat), as.matrix(ndat1)))
head(p)
ff <- brm(daily_fec|weights(se) ~  alpha * cell / (cell + beta), data = p, family = lognormal(),
control = list(adapt_delta = 0.95),  prior = c(
prior(normal(0.0, 1000), nlpar = "alpha"),
prior(normal(0.0, 1000), nlpar = "beta")
)
)
ff <- brm(bf(daily_fec|weights(se) ~  alpha * cell / (cell + beta), data = p, family = lognormal(),
control = list(adapt_delta = 0.95),  prior = c(
prior(normal(0.0, 1000), nlpar = "alpha"),
prior(normal(0.0, 1000), nlpar = "beta")
)
))
head(daph_fec_adj)
nrow(daph_fec_adj)
