install.packages("tidyverse")
library(tidyverse)
install.packages("lme4")
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
install.packages("callr")
install.packages("processx")
setwd("C:/Users/Jo/OneDrive/Documents/GitHub/Species-Traits/RDS_compiled")
setwd("C:/Users/Jo/OneDrive/Documents/GitHub/Species-Traits")
library(deSolve)
library(here)
state <- c(
ammonium = 10,
daph_j = 0,
daph_a = 20,
algae  = 20
)
param <- read.csv(here("RDS_compiled/parameters_no_cerio.csv"))
parameters <- c(
alpha = 0.5983917,    #mg N/(ug chl*day)
kappa = 1.3,  # 0.2153469,    #mg N
e =  12,               #ug chl/mgN
death1 = 7,         # 1/day
fa = median(param$a_feed_m),       # ug chl/(daphniaA*day)
fj = median(param$j_feed_m),       # ug chl/(daphniaj*day)
rho = 0.0785709,                    # mg N/ chl
camm = 1- median(param$amm_param_b),     # 1/day
xa = median(param$a_exc_m),       # mg N/ (daphniaA*day)
xj= median(param$j_exc_m),        # mg N/ (daphniaJ*day)
g1 =median(param$growth_a),        # daphniaD/(daphniaJ*day)
g2=median(param$growth_b),         # ug chl
#g1 = 1/4.8,
death2 = 1/median(param$death_b),   # 1/day
b1 = median(param$fec_a),       # daphniaJ/(daphniaD*day)
b2 = median(param$fec_b),        # ug chl
death3 = 1/median(param$death_b)  # 1/day
)
full_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# ammonium is added from release by both juvenile and adult daphnia  and lost through algal update and nitritfication
dammonium <- -(alpha*ammonium)/(kappa+ammonium)*algae + rho*death1*algae - camm*ammonium + daph_a*xa + daph_j*xa/10
#juvenile daphia are added by density dependent (large daphnia) birth
ddaph_j <- daph_a*(b1*algae)/(b2+algae) - daph_j*death3*10
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- - daph_a*death3 +(g1*algae)/(g2+algae)  #+daph_j*g1
# algae is added from growth based on uptake of ammonium
dalgae <- (alpha*ammonium)/(kappa+ammonium)*algae*e - death1*algae- daph_a*fa - daph_j*fj
# return the rate of change
list(c(dammonium, ddaph_j,ddaph_a,dalgae))
})
}
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters, maxsteps = 1e6)
plot(out)
out_med <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters)
plot(out_med)
lit <- read.csv("literature_extraction.csv")
fec_lit <- lit %>% dplyr::select(c("daphnia_reproduction", "sd_repro", "units_reproduction", "Replicates")) %>%
filter(daphnia_reproduction != "NA")
library(tidyverse)
library(fitdistrplus)
fec_lit <- lit %>% dplyr::select(c("daphnia_reproduction", "sd_repro", "units_reproduction", "Replicates")) %>%
filter(daphnia_reproduction != "NA")
q <- fitdist(fec_lit$daphnia_reproduction, "lnorm")
y <- seq(0,10, length = 100)
c <- dlnorm(y, meanlog = q$estimate[1], sdlog = q$estimate[2])
df<- data.frame(
y = y,
daphnia_reproduction = c
)
p <- ggplot(fec_lit) +
geom_histogram(aes(x = daphnia_reproduction, y = ..density..),
binwidth = .5, fill = "grey", color = "black")+
scale_x_continuous(limits=c(0,10))
## compute the function on the fly
dlfun <- function(x) {
with(as.list(q$estimate), dlnorm(x, meanlog, sdlog))
}
p + stat_function(fun=dlfun, color="red")
q
setwd("C:/Users/Jo/OneDrive/Documents/GitHub/Species-Traits/Daphnia")
source("../transfer_functions.R")
daph <- read.csv("daphnia_lifetime.csv")
daph <- daph %>%
filter(adult_only=="N")
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph_fec <- daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summarize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg)) %>%
mutate(daily_fec = life_fec / time_adult)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
daph_fec_r <- daph_fec %>% select(rep, chl, daily_fec)
daph_fec_r$rep <- seq(1,70)
daph_fec_r <- data.frame(daph_fec_r)
daph_fec_list <- list(
"N" = 70,
"chl" = daph_fec_r$chl,
"daily_fec" = daph_fec_r$daily_fec
)
daph_fec_r <- daph_fec %>% dplyr::select(rep, chl, daily_fec)
daph_fec_r$rep <- seq(1,70)
daph_fec_r <- data.frame(daph_fec_r)
daph_fec_list <- list(
"N" = 70,
"chl" = daph_fec_r$chl,
"daily_fec" = daph_fec_r$daily_fec
)
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
saveRDS(fit, file = "fec_stan_prior.rds")
library(shinystan)
launch_shinystan(fit)
t <- rstan::extract(fit,permuted = FALSE)
fit_sum <- summary(fit)
print(names(fit_sum))
print(fit_sum$summary)
fit_sum_param <- fit_sum$summary[c(1:4),]
fit_sum_param
param
parameters
hist(rlnorm(1000,1.3, 0.58),breaks = 50)
hist(rlnorm(1000,1.3, 0.8),breaks = 50)
hist(rlnorm(1000,1.3, 0.2),breaks = 50)
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
launch_shinystan(fit)
t <- rstan::extract(fit,permuted = FALSE)
fit_sum <- summary(fit)
fit_sum_param <- fit_sum$summary[c(1:4),]
fit_sum_param
plot(out)
