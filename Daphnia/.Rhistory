cite(vegan)
library(vegan)
cite("vegan")
?cite
citation("vegan")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
setwd("~/GitHub/Species-Traits/Daphnia")
library(tidyverse)
daph <- read.csv("daphnia_lifetime.csv")
daph <- daph %>%
filter(adult_only=="N")
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph_fec <- daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summarize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg)) %>%
mutate(daily_fec = life_fec / time_adult)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
daph_fec_r <- daph_fec %>% select(rep, chl, daily_fec)
daph_fec_r$rep <- seq(1,70)
daph_fec_r <- data.frame(daph_fec_r)
daph_fec_list <- list(
"N" = 70,
"chl" = daph_fec_r$chl,
"daily_fec" = daph_fec_r$daily_fec
)
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
fit_sum <- summary(fit)
print(names(fit_sum))
print(fit_summary$summary)
print(fit_sum$summary)
fit_sum_param <- fit_sum[c(1:4),]
str(fit_sum)
fit_sum_param <- fit_sum$summary[c(1:4),]
fit_sum_param
# saturating function for nutrient release where K is independent state variable
sat_fun <- function(a,b,k) {
a * k / (k + b)
}
str(fit_sum_param)
newdat <- sat_fun(a = fit_sum_param[1,6], b= fit_sum_param[2,6], k = seq(0,75,1))
str(newdat)
newdat <- data.frame( fec = sat_fun(a = fit_sum_param[1,6], b= fit_sum_param[2,6], k = seq(0,75,1)),
chl = seq(0,75))
ggplot(daph_fec_r, aes(chl, daily_fec)) + geom_point()
newdat <- data.frame( daily_fec = sat_fun(a = fit_sum_param[1,6], b= fit_sum_param[2,6], k = seq(0,75,1)),
chl = seq(0,75))
ggplot(daph_fec_r, aes(chl, daily_fec)) + geom_point() + geom_line(data = newdat, aes(chl, daily_fec, color = "blue"))
ggplot(daph_fec_r, aes(chl, daily_fec)) + geom_point() + geom_line(data = newdat, aes(chl, daily_fec), color = "blue")
Y_mean <- extract(fit, "Y_mean")
Y_mean_cred <- apply(Y_mean$Y_mean, 2, quantile, c(0.05, 0.95))
Y_mean_mean <- apply(Y_mean$Y_mean, 2, mean)
Y_mean_mean
Y_mean_cred
plot(daph_fec_r$daily_fec ~ daph_fec_r$chl, xlab="chl", ylab="fec", main="Non-linear fecundity")
lines(daph_fec_r$chl, Y_mean_mean)
a_pred <- rnorm(100, fit_sum_param[1,1], fit_sum_param[1,3])
b_pred <- rnorm(100, fit_sum_param[2,1], fit_sum_param[2,3])
?apply
newdat <- data.frame(chl = seq(0,75))
apply(newdat,2,sat_fun,a=a_pred,b=b_pred)
apply(newdat,1,sat_fun,a=a_pred,b=b_pred)
pred_out <- apply(newdat,1,sat_fun,a=a_pred,b=b_pred)
pred_sum <- apply(pred_out, 2, quantile(0.025,0.50,0.975))
pred_sum <- apply(pred_out, 2, FUN = function (x) quantile(x, c(0.025,0.50,0.975)))
pred_sum
with(daph_fec_r, plot(chl, daily_fec))
lines(seq(0,75), pred_sum[1,])
lines(seq(0,75), pred_sum[2,])
lines(seq(0,75), pred_sum[3,])
a_pred <- rnorm(1000, fit_sum_param[1,1], fit_sum_param[1,3])
b_pred <- rnorm(1000, fit_sum_param[2,1], fit_sum_param[2,3])
newdat <- data.frame(chl = seq(0,75))
pred_out <- apply(newdat,1,sat_fun,a=a_pred,b=b_pred)
pred_sum <- apply(pred_out, 2, FUN = function (x) quantile(x, c(0.025,0.50,0.975)))
with(daph_fec_r, plot(chl, daily_fec))
lines(seq(0,75), pred_sum[1,])
lines(seq(0,75), pred_sum[2,])
lines(seq(0,75), pred_sum[3,])
summary(fit)
fit_sum_param
hist(b_pred, breaks = 100)
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
daph_fec_list <- list(
"N" = 70,
"chl" = daph_fec_r$chl,
"daily_fec" = daph_fec_r$daily_fec
, "pred_chl" = seq(1,75,1)
)
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
daph_fec_list <- list(
"N" = 70,
"chl" = daph_fec_r$chl,
"daily_fec" = daph_fec_r$daily_fec
, "pred_chl" = seq(1,75,1)
)
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
fit
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
daph_fec_list <- list(
"N" = 70,
"chl" = daph_fec_r$chl,
"daily_fec" = daph_fec_r$daily_fec
)
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
fit_sum <- summary(fit)
print(names(fit_sum))
print(fit_sum$summary)
fit_sum_param <- fit_sum$summary[c(1:4),]
fit_sum_param <- fit_sum$summary[c(1:4),]
fit_sum_param
tidybayes::add_fitted_draws
tidy_pred <- tidybayes::add_fitted_draws(fit, newdata = data.frame(chl = seq(1,75)))
Y_mean <- extract(fit, "Y_mean")
Y_mean_mean <- apply(Y_mean$Y_mean, 2, mean)
Y_mean_mean
Y_mean_cred
plot(daph_fec_r$daily_fec ~ daph_fec_r$chl, xlab="chl", ylab="fec", main="Non-linear fecundity")
daph_fec_r$chl
lines(daph_fec_r$chl, Y_mean_mean)
Y_mean_dat <- data.frame(
chl = rep(daph_fec_r$chl,3)
, fec = Y_mean_mean
, fec_low  = Y_mean_cred[1, ]
, fec_high = Y_mean_cred[2, ]
)
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
