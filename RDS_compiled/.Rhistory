cite(vegan)
library(vegan)
cite("vegan")
?cite
citation("vegan")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
setwd("~/GitHub/Species-Traits/RDS_compiled")
## read in all RDS and make dataframe with all parameters for ODE
library(rstan)
library(tidyverse)
library(brms)
growth <- readRDS("growth.rds") ## 853 divergent transitions but mixing looks good ??
adult_death <- readRDS("adult_death.rds") ##
adult_feed <- readRDS("adult_feeding.rds") ##
adult_exc <- readRDS("adult_exc.RDS") ##
juv_feed <- readRDS("juv_feeding.RDS") ##
juv_exc <- readRDS("juv_exec.RDS") ##
fec <- readRDS("fec_stan.rds")  ##
cerioPop <- readRDS("cerio_pop.rds") ##
cerio_feed <- readRDS()
amm_loss <- readRDS("ammonium.rds") ##
growth_param <- rstan::extract(growth,permuted = FALSE)  ## saturating
a_death_param <- rstan::extract(adult_death,permuted = FALSE) ## exponential
a_feed_param <- rstan::extract(adult_feed,permuted = FALSE) ## linear
a_exc_param <- rstan::extract(adult_exc,permuted = FALSE)  ## linear
j_feed_param <- rstan::extract(juv_feed,permuted = FALSE)  ## linear
j_exc_param <- rstan::extract(juv_exc,permuted = FALSE)  ## linear
amm_param <- posterior_samples(amm_loss) ## intercept only -- constant loss
amm_param_b <- amm_param %>% select(b_Intercept)
param <- data.frame(
growth_a <- exp(rbind(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1])),
growth_b <- exp(rbind(growth_param[,1,2] , growth_param[,2,2], growth_param[,3,2], growth_param[,4,2])),
death_b <- rbind(a_death_param[,1,1],a_death_param[,2,1],a_death_param[,3,1],a_death_param[,4,1]) ,
a_feed_m <- rbind(a_feed_param[,1,1],a_feed_param[,2,1],a_feed_param[,3,1],a_feed_param[,4,1]),
a_feed_b <- rbind(a_feed_param[,1,2] , a_feed_param[,2,2], a_feed_param[,3,2], a_feed_param[,4,2]),
a_exc_m <- rbind(a_exc_param[,1,1],a_exc_param[,2,1],a_exc_param[,3,1],a_exc_param[,4,1]),
a_exc_b <- rbind(a_exc_param[,1,2] ,a_exc_param[,2,2], a_exc_param[,3,2], a_exc_param[,4,2]),
j_feed_m <- rbind(j_feed_param[,1,1],j_feed_param[,2,1],j_feed_param[,3,1],j_feed_param[,4,1]),
j_feed_b <- rbind(j_feed_param[,1,2] , j_feed_param[,2,2], j_feed_param[,3,2], j_feed_param[,4,2]),
j_exc_m <- rbind(j_exc_param[,1,1],j_exc_param[,2,1],j_exc_param[,3,1],j_exc_param[,4,1]),
j_exc_b <- rbind(j_exc_param[,1,2] ,j_exc_param[,2,2], j_exc_param[,3,2], j_exc_param[,4,2]),
amm_param_b <- amm_param_b[,1]
)
write.csv(param, file = "parameters_no_cerio.csv")
params <- read.csv("parameters_no_cerio.csv")
head(params)
dims(params)
str(params)
str(param)
setwd("~/GitHub/Species-Traits/RDS_compiled")
growth_param <- rstan::extract(growth,permuted = FALSE)  ## saturating
a_death_param <- rstan::extract(adult_death,permuted = FALSE) ## exponential
a_feed_param <- rstan::extract(adult_feed,permuted = FALSE) ## linear
a_exc_param <- rstan::extract(adult_exc,permuted = FALSE)  ## linear
j_feed_param <- rstan::extract(juv_feed,permuted = FALSE)  ## linear
j_exc_param <- rstan::extract(juv_exc,permuted = FALSE)  ## linear
amm_param <- posterior_samples(amm_loss) ## intercept only -- constant loss
amm_param_b <- amm_param %>% select(b_Intercept)
param <- data.frame(
growth_a = exp(rbind(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1])),
growth_b = exp(rbind(growth_param[,1,2] , growth_param[,2,2], growth_param[,3,2], growth_param[,4,2])),
death_b = rbind(a_death_param[,1,1],a_death_param[,2,1],a_death_param[,3,1],a_death_param[,4,1]) ,
a_feed_m = rbind(a_feed_param[,1,1],a_feed_param[,2,1],a_feed_param[,3,1],a_feed_param[,4,1]),
a_feed_b = rbind(a_feed_param[,1,2] , a_feed_param[,2,2], a_feed_param[,3,2], a_feed_param[,4,2]),
a_exc_m = rbind(a_exc_param[,1,1],a_exc_param[,2,1],a_exc_param[,3,1],a_exc_param[,4,1]),
a_exc_b = rbind(a_exc_param[,1,2] ,a_exc_param[,2,2], a_exc_param[,3,2], a_exc_param[,4,2]),
j_feed_m = rbind(j_feed_param[,1,1],j_feed_param[,2,1],j_feed_param[,3,1],j_feed_param[,4,1]),
j_feed_b = rbind(j_feed_param[,1,2] , j_feed_param[,2,2], j_feed_param[,3,2], j_feed_param[,4,2]),
j_exc_m = rbind(j_exc_param[,1,1],j_exc_param[,2,1],j_exc_param[,3,1],j_exc_param[,4,1]),
j_exc_b = rbind(j_exc_param[,1,2] ,j_exc_param[,2,2], j_exc_param[,3,2], j_exc_param[,4,2]),
amm_param_b = amm_param_b[,1]
)
str(param)
param <- as.data.frame(
growth_a = exp(rbind(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1])),
growth_b = exp(rbind(growth_param[,1,2] , growth_param[,2,2], growth_param[,3,2], growth_param[,4,2])),
death_b = rbind(a_death_param[,1,1],a_death_param[,2,1],a_death_param[,3,1],a_death_param[,4,1]) ,
a_feed_m = rbind(a_feed_param[,1,1],a_feed_param[,2,1],a_feed_param[,3,1],a_feed_param[,4,1]),
a_feed_b = rbind(a_feed_param[,1,2] , a_feed_param[,2,2], a_feed_param[,3,2], a_feed_param[,4,2]),
a_exc_m = rbind(a_exc_param[,1,1],a_exc_param[,2,1],a_exc_param[,3,1],a_exc_param[,4,1]),
a_exc_b = rbind(a_exc_param[,1,2] ,a_exc_param[,2,2], a_exc_param[,3,2], a_exc_param[,4,2]),
j_feed_m = rbind(j_feed_param[,1,1],j_feed_param[,2,1],j_feed_param[,3,1],j_feed_param[,4,1]),
j_feed_b = rbind(j_feed_param[,1,2] , j_feed_param[,2,2], j_feed_param[,3,2], j_feed_param[,4,2]),
j_exc_m = rbind(j_exc_param[,1,1],j_exc_param[,2,1],j_exc_param[,3,1],j_exc_param[,4,1]),
j_exc_b = rbind(j_exc_param[,1,2] ,j_exc_param[,2,2], j_exc_param[,3,2], j_exc_param[,4,2]),
amm_param_b = amm_param_b[,1]
)
growth_a = exp(rbind(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1]))
growth_a
str(growth_a)
?rbind
growth_a[,1]
growth_a = exp(rbind(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1]))[,1]
str(growth_a)
param <- as.data.frame(
growth_a = exp(rbind(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1]))[,1],
growth_b = exp(rbind(growth_param[,1,2] , growth_param[,2,2], growth_param[,3,2], growth_param[,4,2]))[,1],
death_b = rbind(a_death_param[,1,1],a_death_param[,2,1],a_death_param[,3,1],a_death_param[,4,1])[,1] ,
a_feed_m = rbind(a_feed_param[,1,1],a_feed_param[,2,1],a_feed_param[,3,1],a_feed_param[,4,1])[,1],
a_feed_b = rbind(a_feed_param[,1,2] , a_feed_param[,2,2], a_feed_param[,3,2], a_feed_param[,4,2])[,1],
a_exc_m = rbind(a_exc_param[,1,1],a_exc_param[,2,1],a_exc_param[,3,1],a_exc_param[,4,1])[,1],
a_exc_b = rbind(a_exc_param[,1,2] ,a_exc_param[,2,2], a_exc_param[,3,2], a_exc_param[,4,2])[,1],
j_feed_m = rbind(j_feed_param[,1,1],j_feed_param[,2,1],j_feed_param[,3,1],j_feed_param[,4,1])[,1],
j_feed_b = rbind(j_feed_param[,1,2] , j_feed_param[,2,2], j_feed_param[,3,2], j_feed_param[,4,2])[,1],
j_exc_m = rbind(j_exc_param[,1,1],j_exc_param[,2,1],j_exc_param[,3,1],j_exc_param[,4,1])[,1],
j_exc_b = rbind(j_exc_param[,1,2] ,j_exc_param[,2,2], j_exc_param[,3,2], j_exc_param[,4,2])[,1],
amm_param_b = amm_param_b[,1]
)
growth_a
growth_a = exp(rbind(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1]))
str(growth_a)
str(growth_param[,1,1])
growth_a = exp(c(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1]))
str(growth_a)
<
param <- data.frame(
growth_a = exp(c(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1])),
growth_b = exp(c(growth_param[,1,2] , growth_param[,2,2], growth_param[,3,2], growth_param[,4,2])),
death_b = c(a_death_param[,1,1],a_death_param[,2,1],a_death_param[,3,1],a_death_param[,4,1]) ,
a_feed_m = c(a_feed_param[,1,1],a_feed_param[,2,1],a_feed_param[,3,1],a_feed_param[,4,1]),
a_feed_b = c(a_feed_param[,1,2] , a_feed_param[,2,2], a_feed_param[,3,2], a_feed_param[,4,2]),
a_exc_m = c(a_exc_param[,1,1],a_exc_param[,2,1],a_exc_param[,3,1],a_exc_param[,4,1]),
a_exc_b = c(a_exc_param[,1,2] ,a_exc_param[,2,2], a_exc_param[,3,2], a_exc_param[,4,2]),
j_feed_m = c(j_feed_param[,1,1],j_feed_param[,2,1],j_feed_param[,3,1],j_feed_param[,4,1]),
j_feed_b = c(j_feed_param[,1,2] , j_feed_param[,2,2], j_feed_param[,3,2], j_feed_param[,4,2]),
j_exc_m = c(j_exc_param[,1,1],j_exc_param[,2,1],j_exc_param[,3,1],j_exc_param[,4,1]),
j_exc_b = c(j_exc_param[,1,2] ,j_exc_param[,2,2], j_exc_param[,3,2], j_exc_param[,4,2]),
amm_param_b = amm_param_b[,1]
)
param <- data.frame(
growth_a = exp(c(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1])),
growth_b = exp(c(growth_param[,1,2] , growth_param[,2,2], growth_param[,3,2], growth_param[,4,2])),
death_b = c(a_death_param[,1,1],a_death_param[,2,1],a_death_param[,3,1],a_death_param[,4,1]) ,
a_feed_m = c(a_feed_param[,1,1],a_feed_param[,2,1],a_feed_param[,3,1],a_feed_param[,4,1]),
a_feed_b = c(a_feed_param[,1,2] , a_feed_param[,2,2], a_feed_param[,3,2], a_feed_param[,4,2]),
a_exc_m = c(a_exc_param[,1,1],a_exc_param[,2,1],a_exc_param[,3,1],a_exc_param[,4,1]),
a_exc_b = c(a_exc_param[,1,2] ,a_exc_param[,2,2], a_exc_param[,3,2], a_exc_param[,4,2]),
j_feed_m = c(j_feed_param[,1,1],j_feed_param[,2,1],j_feed_param[,3,1],j_feed_param[,4,1]),
j_feed_b = c(j_feed_param[,1,2] , j_feed_param[,2,2], j_feed_param[,3,2], j_feed_param[,4,2]),
j_exc_m = c(j_exc_param[,1,1],j_exc_param[,2,1],j_exc_param[,3,1],j_exc_param[,4,1]),
j_exc_b = c(j_exc_param[,1,2] ,j_exc_param[,2,2], j_exc_param[,3,2], j_exc_param[,4,2])#,
# amm_param_b = amm_param_b[,1]
)
lenght(amm_param_b)
nrow(amm_param_b)
param <- data.frame(
growth_a = exp(c(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1]))[1:4000],
growth_b = exp(c(growth_param[,1,2] , growth_param[,2,2], growth_param[,3,2], growth_param[,4,2]))[1:4000],
death_b = c(a_death_param[,1,1],a_death_param[,2,1],a_death_param[,3,1],a_death_param[,4,1])[1:4000] ,
a_feed_m = c(a_feed_param[,1,1],a_feed_param[,2,1],a_feed_param[,3,1],a_feed_param[,4,1])[1:4000],
a_feed_b = c(a_feed_param[,1,2] , a_feed_param[,2,2], a_feed_param[,3,2], a_feed_param[,4,2])[1:4000],
a_exc_m = c(a_exc_param[,1,1],a_exc_param[,2,1],a_exc_param[,3,1],a_exc_param[,4,1])[1:4000],
a_exc_b = c(a_exc_param[,1,2] ,a_exc_param[,2,2], a_exc_param[,3,2], a_exc_param[,4,2])[1:4000],
j_feed_m = c(j_feed_param[,1,1],j_feed_param[,2,1],j_feed_param[,3,1],j_feed_param[,4,1])[1:4000],
j_feed_b = c(j_feed_param[,1,2] , j_feed_param[,2,2], j_feed_param[,3,2], j_feed_param[,4,2])[1:4000],
j_exc_m = c(j_exc_param[,1,1],j_exc_param[,2,1],j_exc_param[,3,1],j_exc_param[,4,1])[1:4000],
j_exc_b = c(j_exc_param[,1,2] ,j_exc_param[,2,2], j_exc_param[,3,2], j_exc_param[,4,2])[1:4000],
amm_param_b = amm_param_b[,1]
)
write.csv(param, file = "parameters_no_cerio.csv")
params <- read.csv("parameters_no_cerio.csv")
head(params)
fec_param <- rstan::extract(fec,permuted = FALSE) ## saturating
param <- data.frame(
growth_a = exp(c(growth_param[,1,1],growth_param[,2,1], growth_param[,3,1], growth_param[,4,1]))[1:4000],
growth_b = exp(c(growth_param[,1,2] , growth_param[,2,2], growth_param[,3,2], growth_param[,4,2]))[1:4000],
death_b = c(a_death_param[,1,1],a_death_param[,2,1],a_death_param[,3,1],a_death_param[,4,1])[1:4000] ,
a_feed_m = c(a_feed_param[,1,1],a_feed_param[,2,1],a_feed_param[,3,1],a_feed_param[,4,1])[1:4000],
a_feed_b = c(a_feed_param[,1,2] , a_feed_param[,2,2], a_feed_param[,3,2], a_feed_param[,4,2])[1:4000],
a_exc_m = c(a_exc_param[,1,1],a_exc_param[,2,1],a_exc_param[,3,1],a_exc_param[,4,1])[1:4000],
a_exc_b = c(a_exc_param[,1,2] ,a_exc_param[,2,2], a_exc_param[,3,2], a_exc_param[,4,2])[1:4000],
j_feed_m = c(j_feed_param[,1,1],j_feed_param[,2,1],j_feed_param[,3,1],j_feed_param[,4,1])[1:4000],
j_feed_b = c(j_feed_param[,1,2] , j_feed_param[,2,2], j_feed_param[,3,2], j_feed_param[,4,2])[1:4000],
j_exc_m = c(j_exc_param[,1,1],j_exc_param[,2,1],j_exc_param[,3,1],j_exc_param[,4,1])[1:4000],
j_exc_b = c(j_exc_param[,1,2] ,j_exc_param[,2,2], j_exc_param[,3,2], j_exc_param[,4,2])[1:4000],
amm_param_b = amm_param_b[,1],
fec_a = c(fec_param[,1,1],fec_param[,2,1],fec_param[,3,1],fec_param[,4,1])[1:4000],
fec_b = c(fec_param[,1,2] ,fec_param[,2,2], fec_param[,3,2], fec_param[,4,2])[1:4000]
)
write.csv(param, file = "parameters_no_cerio.csv")
params <- read.csv("parameters_no_cerio.csv")
head(params)
source("../transfer_functions.R")
params <- read.csv("parameters_no_cerio.csv")
parameters <- c(
alpha = 4.186771e-03, beta = 3.440294e+01,
death1 = 1.207084e-02, death2 = 8.096918e-04,
gamma = 4.260914e-02  , omega = 3.674442e+01,
a_exc_m = median(params$a_exc_m), j_exc_m = median(params$j_exc_m),
amm_param_b = median(params$amm_param_b), fec_a = median(params$fec_a),
fec_b = median(params$fec_b), death_j = 1/100, growth_a = median(params$growth_a),
growth_b = median(params$growth_b), death_b = median(params$death_b),
a_feed_m = median(params$a_feed_m), j_feed_m = median(params$j_feed_m),
)
parameters <- c(
alpha = 4.186771e-03, beta = 3.440294e+01,
death1 = 1.207084e-02, death2 = 8.096918e-04,
gamma = 4.260914e-02  , omega = 3.674442e+01,
a_exc_m = median(params$a_exc_m), j_exc_m = median(params$j_exc_m),
amm_param_b = median(params$amm_param_b), fec_a = median(params$fec_a),
fec_b = median(params$fec_b), death_j = 1/100, growth_a = median(params$growth_a),
growth_b = median(params$growth_b), death_b = median(params$death_b),
a_feed_m = median(params$a_feed_m), j_feed_m = median(params$j_feed_m)
)
daphnia_only <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
dammonium <- daph_a*a_exc_m + daph_j*j_exc_m-
dalgae*dammonium*alpha*omega/(omega+dammonium) + gamma *(death1*dalgae + death2*(dalgae^2))-amm_param_b
#juvenile daphia are added by density dependent (large daphnia) birth
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - death_j
#loss through death and growth -where they reach a certain threshold size
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- sat_fun(growth_a,growth_b,dalgae)*daph_j- daph_a*(1/death_b)  ## is this right?? Days is in the original
# algae is added from growth based on uptake of ammonium and nitrate #need to add contanst to mm
dalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)
# algae is lost from being eaten by each of the 3 zooplankon
-daph_a*a_feed_m*dalgae -daph_a*j_feed_m*dalgae
# return the rate of change
list(c(dammonium, ddaph_j,ddaph_a,dalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
state <- c(pred_nh4 = 6,
pred_juv = 0,
pred_daph = 20,
pred_chl = 50
)
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
out <- ode(y = state, times = seq(0,100,0.1), func = daphnia_only, parms = parameters)
daphnia_only <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
dammonium <- daph_a*a_exc_m + daph_j*j_exc_m-
dalgae*dammonium*alpha*omega/(omega+dammonium) + gamma *(death1*dalgae + death2*(dalgae^2))-amm_param_b
#juvenile daphia are added by density dependent (large daphnia) birth
daph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - death_j
#loss through death and growth -where they reach a certain threshold size
#daphnia adults are added from growth by juveniles and are lost from death
daph_a <- sat_fun(growth_a,growth_b,dalgae)*daph_j- daph_a*(1/death_b)  ## is this right?? Days is in the original
# algae is added from growth based on uptake of ammonium and nitrate #need to add contanst to mm
dalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)
# algae is lost from being eaten by each of the 3 zooplankon
-daph_a*a_feed_m*dalgae -daph_a*j_feed_m*dalgae
# return the rate of change
list(c(dammonium, ddaph_j,ddaph_a,dalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,100,0.1), func = daphnia_only, parms = parameters)
state <- c(dammonium = 6,
daph_j = 0,
daph_a = 20,
dalgae = 50
)
daphnia_only <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*a_exc_m + daph_j*j_exc_m-
dalgae*dammonium*alpha*omega/(omega+dammonium) + gamma *(death1*dalgae + death2*(dalgae^2))-amm_param_b
#juvenile daphia are added by density dependent (large daphnia) birth
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - death_j
#loss through death and growth -where they reach a certain threshold size
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- sat_fun(growth_a,growth_b,dalgae)*daph_j- daph_a*(1/death_b)  ## is this right?? Days is in the original
# algae is added from growth based on uptake of ammonium and nitrate #need to add contanst to mm
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)
# algae is lost from being eaten by each of the 3 zooplankon
-daph_a*a_feed_m*dalgae -daph_a*j_feed_m*dalgae
# return the rate of change
list(c(dammonium, ddaph_j,ddaph_a,dalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,100,0.1), func = daphnia_only, parms = parameters)
plot(out)
