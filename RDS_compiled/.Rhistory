)
s3 <-  simulate(chl_nh4_mod3,nsim = 5, parms= start3, times = seq(1,40),
solver.opts=list(method="rk4", hini=0.1))
plot(s3$times, s3$chl)
plot(s3$times, s3$nh4)
fit3 <- fitode(
chl_nh4_mod3,
data = s3,
start=start3,
tcol = "times",
solver.opts=list(method="rk4", hini=0.1)
)
coef(fit3)
st <- expand.grid(
a = seq(0.01,0.5,0.04),
k = seq(0.01,0.5,0.04),
r = seq(0.01,1,0.08),
death = seq(0.001,0.05,0.004),
pred_nh40 = 15,
pred_chl0 = 40
)
temp <- data.frame (
a =  0,
k = 0,
r = 0,
death = 0,
pred_nh40 = 15,
pred_chl0 = 40,
lowa = 0,
lowk = 0,
lowr = 0,
lowdeath = 0,
lownh4 = 0,
lowchl = 0,
higha = 0,
highk = 0,
highr = 0,
highdeath = 0,
highnh4 = 0,
highchl = 0,
loglik = 0,
ttime  = 0
)
for(i in 1:nrow(st)) {
newstart <- with(st[i,],
list(
a =  a,
k = k,
r=r,
death = death,
pred_nh40 = pred_nh40,
pred_chl0 = pred_chl0
))
x <- system.time({
tempm <- try((fitode(chl_nh4_mod3, data= s3, start = newstart, tcol = "times",
solver.opts = list(method="rk4", hini=0.1))),silent = TRUE)
if (class(tempm) == "try-error") {
temp[i,] <- "NA"
} else {
temp[i,1:6] <- coef(tempm)
temp[i,7:12] <- confint(tempm)[,2]
temp[i,13:18] <- confint(tempm)[,3]
temp$loglik[i] <- logLik(tempm)
}})
temp$ttime[i] <- x[[3]]
print(i/nrow(st))
}
dat <- temp %>% filter(a != "NA")
library(tidyverse)
dat <- temp %>% filter(a != "NA")
nrow(temp) ## 300
nrow(dat)  ## 18
dat
write.csv(dat, file = "filtered_sim.csv")
write.csv(temp, file = "unfiltered_sim.csv")
getwd()
library(deSolve)
state <- c(
N = 10,
Dj = 0,
Da = 20,
A = 20
)
parameters <- c(
alpha = 0.3,    #mg N/(chl*day)
kappa = 0.3,    #mg N
e =  1,       #chl/mgN
death1 = 0.001,   # 1/day
fa = 0.3,       # chl/(daphniaA*day)
fj = 0.3,       # chl/(daphniaj*day)
rho = 1,      # mg N/ chl
camm = .0000001,     # 1/day
xa = 0.01,       # mg N/ (daphniaA*day)
xj= 0.001,        # mg N/ (daphniaJ*day)
g1 =0.3,        # daphniaD/(daphniaJ*day)
g2=0.3,         # chl
death2 = 0.001,   # 1/day
b1 = 0.3,       # daphniaJ/(daphniaD*day)
b2 = 0.3        # chl
death3 = 0.01    # 1/day
parameters <- c(
alpha = 0.3,    #mg N/(chl*day)
kappa = 0.3,    #mg N
e =  1,       #chl/mgN
death1 = 0.001,   # 1/day
fa = 0.3,       # chl/(daphniaA*day)
fj = 0.3,       # chl/(daphniaj*day)
rho = 1,      # mg N/ chl
camm = .0000001,     # 1/day
xa = 0.01,       # mg N/ (daphniaA*day)
xj= 0.001,        # mg N/ (daphniaJ*day)
g1 =0.3,        # daphniaD/(daphniaJ*day)
g2=0.3,         # chl
death2 = 0.001,   # 1/day
b1 = 0.3,       # daphniaJ/(daphniaD*day)
b2 = 0.3,        # chl
death3 = 0.01   # 1/day
)
full_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# ammonium is added from release by both juvenile and adult daphnia  and lost through algal update and nitritfication
dammonium <- -(alpha*N)/(kappa+N)*algae + rho*death1*algae - camm*ammonium + daph_a*xa + daph_j*xj
#juvenile daphia are added by density dependent (large daphnia) birth
ddaph_j <- daph_a*(b1*algae)/(b2+algae) - daph_j*death3
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- daph_j*(g1*algae)/(g2+algae) - daph_a*death3
# algae is added from growth based on uptake of ammonium
dalgae <- (alpha*N)/(kappa+N)*algae*e - death1*algae- daph_a*fa - daph_j*fj
# return the rate of change
list(c(dammonium, ddaph_j,ddaph_a,dalgae))
})
}
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
state <- c(
ammonium = 10,
daph_j = 0,
daph_a = 20,
algae  = 20
)
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
state <- c(
N = 10,
daph_j = 0,
daph_a = 20,
algae  = 20
)
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
<
state <- c(
ammonium = 10,
daph_j = 0,
daph_a = 20,
algae  = 20
)
full_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# ammonium is added from release by both juvenile and adult daphnia  and lost through algal update and nitritfication
dammonium <- -(alpha*ammonium)/(kappa+ammonium)*algae + rho*death1*algae - camm*ammonium + daph_a*xa + daph_j*xj
#juvenile daphia are added by density dependent (large daphnia) birth
ddaph_j <- daph_a*(b1*algae)/(b2+algae) - daph_j*death3
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- daph_j*(g1*algae)/(g2+algae) - daph_a*death3
# algae is added from growth based on uptake of ammonium
dalgae <- (alpha*ammonium)/(kappa+ammonium)*algae*e - death1*algae- daph_a*fa - daph_j*fj
# return the rate of change
list(c(dammonium, ddaph_j,ddaph_a,dalgae))
})
}
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
plot(out)
setwd("~/GitHub/Species-Traits")
lit <- read.csv("literature_extraction.csv")
## construct prior distributions for parameters from literature values
library(tidyverse)
head(lit)
## daphnia adult excretion
x <- lit %>% dplyr::select("Replicates", "Excretion.rate", "sd_erro_excretion", "units_excretion", "algal_conc") %>%
filter(Excretion.rate != "NA")
## daphnia adult excretion
x <- lit %>% dplyr::select("Replicates", "Excretion.rate", "sd_error_excretion", "units_excretion", "algal_conc") %>%
filter(Excretion.rate != "NA")
x
head(lit)
setwd("~/GitHub/Species-Traits/Nitrogen_Algae")
ammonium <- read.csv("Nh4_Air.csv")
ammonium <- ammonium %>% drop_na()
#same early morning machine problem
ammonium <- ammonium %>%
filter(Rep != 1 & Rep != 15 & Rep != 52) ## not sure about 52 but obvi outlier so check when measured
ammonium <- ammonium %>% group_by(Treat) %>% mutate(med_val = median(NH4)) %>%
mutate(weights = 1/(2/med_val)) ## 2 is 2 mg/L which is the obs error based on guide to YSI
amm  <- ammonium %>%
arrange(Treat, Rep, Day) %>%
group_by(Treat, Rep) %>%
mutate(diff = NH4 / lag(NH4)) %>%
ungroup %>%
mutate(weights_scaled = weights/max(weights), center_NH4 = NH4 - mean(NH4))
library(brms)
ff <- brm(diff|weights(weights_scaled) ~ 1+ (1|Rep), data = amm[-c(30,108,113),], family = gaussian(),
control = list(adapt_delta = 0.95))
ff1 <- summary(ff)
launch_shinystan(ff)
samples <- posterior_samples(ff)
samplesb <- samples %>% select(b_Intercept)
mean(samplesb[,1])
samples_sigma <- samples %>% select(sigma)
mean(samples_sigma[,1])
with(amm[-c(30,108,113),], plot(NH4, diff))
lines(seq(0,25), rep(median(samplesb[,1]),26))
lines(seq(0,25), rep(quantile(samplesb[,1], c(0.025)),26))
lines(seq(0,25), rep(quantile(samplesb[,1], c(0.975)),26))
1-mean(samplesb[,1])
param <- read.csv("parameters_no_cerio.csv")
setwd("~/GitHub/Species-Traits/RDS_compiled")
param <- read.csv("parameters_no_cerio.csv")
parameters <- c(
alpha = 0.3,    #mg N/(chl*day)
kappa = 0.3,    #mg N
e =  1,       #chl/mgN
death1 = 0.001,   # 1/day
fa = median(param$a_feed_m),       # chl/(daphniaA*day)
fj = median(param$j_feed_m),       # chl/(daphniaj*day)
rho = 1,      # mg N/ chl
camm = median(param$amm_param_b),     # 1/day
xa = median(param$a_exc_m),       # mg N/ (daphniaA*day)
xj= median(param$j_exc_m),        # mg N/ (daphniaJ*day)
g1 =median(param$growth_a),        # daphniaD/(daphniaJ*day)
g2=median(param$growth_b),         # chl
death2 = 1/median(param$death_b),   # 1/day
b1 = median(param$fec_a),       # daphniaJ/(daphniaD*day)
b2 = median(param$fec_b),        # chl
death3 = 1/median(param$death_b)  # 1/day
)
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
plot(out)
setwd("~/GitHub/Species-Traits/Nitrogen_Algae")
library(tidyverse)
library(fitode)
dat <- read.csv("Algae_Nutrient.csv")
dat_nit_27 <- dat %>%
filter(treat == 27)
cammonium = (1-9.4235e-01) # proportional ammonium lost to env-- calc in nutrient_air.R
chl_nh4_mod3 <- odemodel(
name = "algal_nit",
model = list(
pred_nh4 ~ -a*pred_chl*(pred_nh4/(k+pred_nh4))+r*death*pred_chl -cammonium*pred_nh4,
pred_chl ~ a*pred_chl*(pred_nh4/(k+pred_nh4))*e - death*pred_chl
),
observation = list(
nh4 ~ dlnorm(meanlog = log(pred_nh4), sdlog = 0.05),
chl ~ dlnorm(meanlog = log(pred_chl), sdlog = 0.01)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("a","k", "r","death","e", "pred_nh40", "pred_chl0")
)
start <- c(a = 0.03,
k = .03,
r = 1,
death = 0.02,
e = 1,
pred_nh40= 15,
pred_chl0 = 40
)
chl_fit_27_dd <- fitode(
chl_nh4_mod3,
data = dat_nit_27,
start=start,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1)
)
plot(chl_fit_27_dd, level=0.95)
coef(chl_fit_27_dd)
newdat <- simulate(chl_nh4_mod3,nsim = 5, parms= coef(chl_fit_27_dd), times = seq(1,11),
solver.opts=list(method="rk4", hini=0.1))
cc <- coef(chl_fit_27_dd)
cc["pred_nh40"] <- 15
nd1 <-simulate(chl_nh4_mod3,nsim = 5, parms= cc, times = seq(1,11),
solver.opts=list(method="rk4", hini=0.1))
nd1$date1 <- nd1$times
ggplot(dat_nit_27, aes(date1,chl)) + geom_point()+ geom_line(data = nd1)
ggplot(dat_nit_27, aes(date1,nh4)) + geom_point()+ geom_line(data = nd1)
newdat$date1 <- newdat$times
ggplot(dat_nit_27, aes(date1,chl)) + geom_point()+ geom_line(data = newdat)
ggplot(dat_nit_27, aes(date1,nh4)) + geom_point()+ geom_line(data = newdat)
parameters <- c(
alpha = 0.5983917,    #mg N/(chl*day)
kappa = 0.2153469,    #mg N
e =  1,       #chl/mgN
death1 = 0.001,   # 1/day
fa = median(param$a_feed_m),       # chl/(daphniaA*day)
fj = median(param$j_feed_m),       # chl/(daphniaj*day)
rho = 0.0785709,      # mg N/ chl
camm = median(param$amm_param_b),     # 1/day
xa = median(param$a_exc_m),       # mg N/ (daphniaA*day)
xj= median(param$j_exc_m),        # mg N/ (daphniaJ*day)
g1 =median(param$growth_a),        # daphniaD/(daphniaJ*day)
g2=median(param$growth_b),         # chl
death2 = 1/median(param$death_b),   # 1/day
b1 = median(param$fec_a),       # daphniaJ/(daphniaD*day)
b2 = median(param$fec_b),        # chl
death3 = 1/median(param$death_b)  # 1/day
)
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
plot(out)
chl_fit_27_dd <- fitode(
chl_nh4_mod3,
data = dat_nit_27,
start=start,
tcol = "date1",
solver.opts=list(method="lsoda")
)
plot(chl_fit_27_dd, level=0.95)
coef(chl_fit_27_dd)
parameters <- c(
alpha = 0.5983917,    #mg N/(chl*day)
kappa = 0.2153469,    #mg N
e =  13,       #chl/mgN
death1 = 9,   # 1/day
fa = median(param$a_feed_m),       # chl/(daphniaA*day)
fj = median(param$j_feed_m),       # chl/(daphniaj*day)
rho = 0.0785709,      # mg N/ chl
camm = median(param$amm_param_b),     # 1/day
xa = median(param$a_exc_m),       # mg N/ (daphniaA*day)
xj= median(param$j_exc_m),        # mg N/ (daphniaJ*day)
g1 =median(param$growth_a),        # daphniaD/(daphniaJ*day)
g2=median(param$growth_b),         # chl
death2 = 1/median(param$death_b),   # 1/day
b1 = median(param$fec_a),       # daphniaJ/(daphniaD*day)
b2 = median(param$fec_b),        # chl
death3 = 1/median(param$death_b)  # 1/day
)
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
plot(out)
dat_nit_9 <- dat %>%
filter(treat == 9)
## 9
chl_fit_9_dd <- fitode(
chl_nh4_mod3,
data = dat_nit_9,
start=start,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1)
)
coef(chl_fit_9_dd)
newdat9 <- simulate(chl_nh4_mod3,nsim = 5, parms= coef(chl_fit_9_dd), times = seq(1,11),
solver.opts=list(method="rk4", hini=0.1))
newdat9$date1 <- newdat$times
ggplot(dat_nit_9, aes(date1,chl)) + geom_point()+ geom_line(data = newdat9)
ggplot(dat_nit_9, aes(date1,nh4)) + geom_point()+ geom_line(data = newdat9)
parameters <- c(
alpha = 0.5983917,    #mg N/(ug chl*day)
kappa = 0.2153469,    #mg N
e =  12,               #ug chl/mgN
death1 = 1/26,         # 1/day
fa = median(param$a_feed_m),       # ug chl/(daphniaA*day)
fj = median(param$j_feed_m),       # ug chl/(daphniaj*day)
rho = 0.0785709,                    # mg N/ chl
camm = median(param$amm_param_b),     # 1/day
xa = median(param$a_exc_m),       # mg N/ (daphniaA*day)
xj= median(param$j_exc_m),        # mg N/ (daphniaJ*day)
g1 =median(param$growth_a),        # daphniaD/(daphniaJ*day)
g2=median(param$growth_b),         # ug chl
death2 = 1/median(param$death_b),   # 1/day
b1 = median(param$fec_a),       # daphniaJ/(daphniaD*day)
b2 = median(param$fec_b),        # ug chl
death3 = 1/median(param$death_b)  # 1/day
)
y
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
plot(out)
parameters <- c(
alpha = 0.5983917,    #mg N/(ug chl*day)
kappa = 0.2153469,    #mg N
e =  12,               #ug chl/mgN
death1 = 1/26,         # 1/day
fa = median(param$a_feed_m),       # ug chl/(daphniaA*day)
fj = median(param$j_feed_m),       # ug chl/(daphniaj*day)
rho = 0.0785709,                    # mg N/ chl
camm = 1- median(param$amm_param_b),     # 1/day
xa = median(param$a_exc_m),       # mg N/ (daphniaA*day)
xj= median(param$j_exc_m),        # mg N/ (daphniaJ*day)
g1 =median(param$growth_a),        # daphniaD/(daphniaJ*day)
g2=median(param$growth_b),         # ug chl
death2 = 1/median(param$death_b),   # 1/day
b1 = median(param$fec_a),       # daphniaJ/(daphniaD*day)
b2 = median(param$fec_b),        # ug chl
death3 = 1/median(param$death_b)  # 1/day
)
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
plot(out)
setwd("~/GitHub/Species-Traits/RDS_compiled")
parameters_upp <- c(
alpha = 0.5983917,    #mg N/(ug chl*day)
kappa = 0.2153469,    #mg N
e =  12,               #ug chl/mgN
death1 = 1/26,         # 1/day
fa = quantile(param$a_feed_m, c(0.975), names = F),       # ug chl/(daphniaA*day)
fj = quantile(param$j_feed_m, c(0.975), names = F),       # ug chl/(daphniaj*day)
rho = 0.0785709,                    # mg N/ chl
camm = 1- quantile(param$amm_param_b, c(0.975), names = F),     # 1/day
xa = quantile(param$a_exc_m, c(0.975), names = F),       # mg N/ (daphniaA*day)
xj= quantile(param$j_exc_m, c(0.975), names = F),        # mg N/ (daphniaJ*day)
g1 =quantile(param$growth_a, c(0.975), names = F),        # daphniaD/(daphniaJ*day)
g2=quantile(param$growth_b, c(0.975), names = F),         # ug chl
death2 = 1/quantile(param$death_b, c(0.975), names = F),   # 1/day
b1 = quantile(param$fec_a, c(0.975), names = F),       # daphniaJ/(daphniaD*day)
b2 = quantile(param$fec_b, c(0.975), names = F),        # ug chl
death3 = 1/quantile(param$death_b, c(0.975), names = F)  # 1/day
)
parameters_low <- c(
alpha = 0.5983917,    #mg N/(ug chl*day)
kappa = 0.2153469,    #mg N
e =  12,               #ug chl/mgN
death1 = 1/26,         # 1/day
fa = quantile(param$a_feed_m, c(0.025), names = F),       # ug chl/(daphniaA*day)
fj = quantile(param$j_feed_m, c(0.025), names = F),       # ug chl/(daphniaj*day)
rho = 0.0785709,                    # mg N/ chl
camm = 1- quantile(param$amm_param_b, c(0.025), names = F),     # 1/day
xa = quantile(param$a_exc_m, c(0.025), names = F),       # mg N/ (daphniaA*day)
xj= quantile(param$j_exc_m, c(0.025), names = F),        # mg N/ (daphniaJ*day)
g1 =quantile(param$growth_a, c(0.025), names = F),        # daphniaD/(daphniaJ*day)
g2=quantile(param$growth_b, c(0.025), names = F),         # ug chl
death2 = 1/quantile(param$death_b, c(0.025), names = F),   # 1/day
b1 = quantile(param$fec_a, c(0.025), names = F),       # daphniaJ/(daphniaD*day)
b2 = quantile(param$fec_b, c(0.025), names = F),        # ug chl
death3 = 1/quantile(param$death_b, c(0.025), names = F)  # 1/day
)
out_med <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters_med)
out_med <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters_med)
out_med <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters)
out_up <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters_upp)
out_low <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters_low)
out_up <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters_upp)
pred <- as.data.frame(out_low)
pred$quantile <- "low"
predup <- as.data.frame(out_up)
predup$quantile <- "upper"
predmed <- as.data.frame(out_med)
predmed$quantile <- "med"
source("treatments.R")
dat_daph <- dat %>% filter(treatment == 3) %>% filter(NH4 < 20)%>%
filter(Chl < 100, Chl >= 0) %>% select(TankNum, NH4, Chl,Day)
names(dat_daph) <- c("TankNum", "dammonium","dalgae","time")
amm_g <- ggplot(predmed, aes(time,dammonium)) + geom_line(linetype = "solid")+
geom_line(data= predup, linetype = "dotdash") + geom_line(data=pred, linetype ="dotdash")+
theme_bw()+ geom_point(data = dat_daph,aes(time,dammonium) )+
ylab("Ammonium mg/L")+xlab("Days")+
theme(axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 32),
strip.text = element_text(size = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank())
amm_g
head(predmed)
names(dat_daph) <- c("TankNum", "ammonium","algae","time")
amm_g <- ggplot(predmed, aes(time,ammonium)) + geom_line(linetype = "solid")+
geom_line(data= predup, linetype = "dotdash") + geom_line(data=pred, linetype ="dotdash")+
theme_bw()+ geom_point(data = dat_daph,aes(time,ammonium) )+
ylab("Ammonium mg/L")+xlab("Days")+
theme(axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 32),
strip.text = element_text(size = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank())
amm_g
alg_g <- ggplot(predmed, aes(time,algae)) + geom_line(linetype = "solid")+
geom_line(data= predup, linetype = "dotdash") + geom_line(data=pred, linetype ="dotdash")+
theme_bw()+ geom_point(data = dat_daph,aes(time,algae) )+
ylab("Chl a ug/L")+xlab("Days")+
theme(axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 32),
strip.text = element_text(size = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank())
alg_g
plot(out)
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
plot(out)
out_med <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters)
plot(out_med)
plot(out_up)
plot(out_low)
amm_g <- ggplot(predmed, aes(time,ammonium)) + geom_line(linetype = "solid")+
#geom_line(data= predup, linetype = "dotdash") +
geom_line(data=pred, linetype ="dotdash")+
theme_bw()+ geom_point(data = dat_daph,aes(time,ammonium) )+
ylab("Ammonium mg/L")+xlab("Days")+
theme(axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 32),
strip.text = element_text(size = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank())
amm_g
ggplot(predmed, aes(time,ammonium)) + geom_line(linetype = "solid")
plot(out)
plot(out)
out
seq(0,42,0.1)
out_med <- ode(y = state, times = seq(0,42,1), func = full_equations, parms = parameters)
plot(out_med)
