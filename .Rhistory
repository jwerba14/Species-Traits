install.packages("tidyverse")
library(tidyverse)
install.packages("lme4")
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
install.packages("callr")
install.packages("processx")
setwd("C:/Users/Jo/OneDrive/Documents/GitHub/Species-Traits")
library(deSolve)
library(here)
state <- c(
ammonium = 10,
daph_j = 0,
daph_a = 20,
algae  = 20
)
param <- read.csv(here("RDS_compiled/parameters_no_cerio.csv"))
knitr::opts_chunk$set(echo = TRUE)
library(deSolve)
library(here)
parameters <- c(
alpha = 0.2339,    #mg N/(ug chl*day)
kappa = 0.639,  # 0.2153469,    #mg N
e =  12,               #ug chl/mgN
death1 = 2.4,         # 1/day
fa = median(param$a_feed_m),       # ug chl/(daphniaA*day)
fj = median(param$j_feed_m),       # ug chl/(daphniaj*day)
rho = 0.0785709,                    # mg N/ chl
camm = 1- median(param$amm_param_b),     # 1/day
xa = median(param$a_exc_m),       # mg N/ (daphniaA*day)
xj= median(param$j_exc_m),        # mg N/ (daphniaJ*day)
g1 =median(param$growth_a),        # daphniaD/(daphniaJ*day)
g2=median(param$growth_b),         # ug chl
#g1 = 1/4.8,
death2 = 1/median(param$death_b),   # 1/day
b1 = median(param$fec_a),       # daphniaJ/(daphniaD*day)
b2 = median(param$fec_b),        # ug chl
death3 = 1/median(param$death_b)  # 1/day
)
eventdat <- data.frame(var = c("dammonium"),
time = c(21) ,
value = c(2),
method = c("multiply"))
full_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
dammonium <- -(alpha*ammonium)/(kappa+ammonium)*algae + rho*death1*algae - camm*ammonium + daph_a*xa + daph_j*xa/10
ddaph_j <- daph_a*(b1*algae)/(b2+algae) - daph_j*death3*10
ddaph_a <- - daph_a*death3 +(g1*algae)/(g2+algae)
dalgae <- (alpha*ammonium)/(kappa+ammonium)*algae*e - death1*algae- daph_a*fa - daph_j*fj
# return the rate of change
list(c(dammonium, ddaph_j,ddaph_a,dalgae))
})
}
out_med <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters,
events = list(data = eventdat))
eventdat <- data.frame(var = c("ammonium"),
time = c(21) ,
value = c(2),
method = c("multiply"))
out_med <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters,
events = list(data = eventdat))
plot(out_med)
out_med <- ode(y = state, times = seq(0,42,0.1), func = full_equations, parms = parameters)
plot(out_med)
