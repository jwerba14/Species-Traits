head(d1)
fit_nls_alt(d1)
debug(log_alt)
nls_fit <- try(
nls(chl~log_alt(phi=phi,x=x,t=dat1$date1,a0=start_chl,n0=start_nh4),
data=subdat,start = list(phi=1,x=1/200)),
silent = TRUE
)
log_alt()
nls(chl~log_alt(phi=phi,x=x,t=dat1$date1,a0=start_chl,n0=start_nh4),
data=subdat,start = list(phi=1,x=1/200))
subdat
fit_nls_alt(subdat = d1)
subdat
nls_fit
nls(chl~log_alt(phi=phi,x=x,t=dat1$date1,a0=start_chl,n0=start_nh4),
data=subdat,start = list(phi=1,x=1/200))
head(subdat)
fit_nls_alt <- function(subdat, par_names=c("phi","x")) {
nls_fit <- try(
nls(chl~log_alt(phi=phi,x=x,t=date1,a0=start_chl,n0=start_nh4),
data=subdat,start = list(phi=1,x=1/200)),
silent = TRUE
)
p = 1
while (class(nls_fit) == "try-error") {
if (!is.na(subdat$r_est[1])){
start_phi <- rlnorm(1,log(subdat$r_est[1]/subdat$start_nh4[1]),1)
start_x <- rlnorm(1, log(subdat$start_nh4[1]/subdat$k_est[1]), 1)
} else {
start_phi <- rlnorm(1, -2, 1)
start_x <- 1/rlnorm(1, log(250), 1)
}
nls_fit <- try(
nls(chl~log_alt(phi=phi,x=x,t=dat1$date1,a0=start_chl,n0=start_nh4),
data=subdat,start = list(phi=start_phi,x=start_x)),
silent = TRUE
)
p = p + 1
if (p > 100) { break }
}
col_names <- c(outer(par_names,c("est","se"),paste,sep="_"),
outer(par_names,c("conf.2.5","conf.97.5"),paste,sep="_"))
if(class(nls_fit) == "try-error") {
pp <- rep(NA,4) ## FIXME: get the right number of NAs programmatically
## FIXME: will fail if first group is bad
con <- rep(NA, 4)
} else {
coef_tab <- coef(summary(nls_fit))
pp <- c(coef_tab[,c("Estimate","Std. Error")])
con <- nlstools::confint2(nls_fit)
}
## collapse results to a one-row matrix
dd <- data.frame(matrix(
data = c(pp,con[1],con[2],con[3],con[4]),
nrow=1))
names(dd) <- col_names
return(dd)
}
fit_nls_alt(subdat = d1)
undebug(fit_nls_alt)
undebug(log_alt)
head(mdat)
newfit <- mdat %>% do(fit_nls_alt(.))
head(newfit)
newfit2 <- left_join(newfit,mdat)
ggplot(newfit2, aes(log(start_nh4),phi_est)) + geom_point()
ggplot(newfit2, aes(start_nh4,x_est)) + geom_point()
View(newfit)
View(mdat)
nrow(mdat)
nrow(newfit)
unique(mdat$urep)
nrow(dat)
str(dat)
unique(mdat$r_est)
unique(newfit$phi_est)
newfit_tidy <- (newfit
%>% na.omit()
%>% gather(param,value, -urep)
## split names of parameter and estimate/se
%>% separate(param, c("param","w"), sep="_")
%>% spread(w,value)
)
ggplot(newfit_tidy,aes(urep,est,
ymin=conf.2.5,
ymax=conf.97.5)) +
geom_pointrange() + facet_wrap(~param,scale="free")
library(ggstance) ## for linerangeh
ggplot(na.omit(newfit), aes(phi_est,x_est,colour=as.factor(urep))) + geom_point()+
geom_linerange(aes(ymin=x_est-2*x_se,ymax=x_est+2*x_se))+
geom_linerangeh(aes(xmin=phi_est-2*phi_se,xmax=phi_est+2*phi_se))+
geom_path(colour="red")+
geom_label(aes(label=urep))
full <- left_join(newfit_tidy,mdat)
(ggplot(full[full$param=="phi",], aes(start_nh4,est,color=as.factor(treat)))
+ geom_point()
+ labs(y=expression(phi))
+ geom_smooth(aes(group=1))
## + scale_y_sqrt()
)
(full
%>% filter(param=="x", start_nh4<40)
%>% ggplot(aes(start_nh4,est,color=as.factor(treat)))
+ geom_point()
+labs(y="x")
)
(ggplot(full, aes(start_nh4,est,color=as.factor(treat)))
+ geom_point()
+ facet_wrap(~param,scale="free")
)
dat2 <- exdat %>% filter(urep == 1.5)
ode_pred( r=0.278, k=125,t=dat2$date1,a0=dat2$start_chl[1])
##' @param a0 starting vector (algal concentration)
##' @param t time vector
##' @param params parameter vector: may contain *either* (r,k)
##' *or* (phi,x,n0)
ode_pred <- function(params,t,a0) {
alt_params <- all(c("phi","x","n0") %in% names(params))
if (!alt_params && !all(c("r","k") %in% names(params))) {
stop("params should have *either* phi, x, n0 *or* r, k")
}
if (alt_params) {
## translate params
params <- with(as.list(params),
c(r=n0*phi, k=n0/x))
}
ode_res <- ode(y=c(chl=a0), ## starting state value, named
times=t,
func=log_grad,
parms=params)
chl_res <- ode_res[,"chl"]
cat("r,k:",params[1],params[2],"\n")
plot.new()
plot(t,chl_res)
return(chl_res)
}
ode_pred(r=0.278, k=125,t=dat2$date1,a0=dat2$start_chl[1])
state <- c(ammonium = 5,
daph_j = 10,
daph_a = 10,
algae = 50
)
#parameters- will need parameters for each function
parameters <- c(
a = 0.1,b = 0.1,  # daphnia adult release Nh4
c= 0.01, d = 0.01, # daphnia juv release Nh4
e = 0.001, f =0.001, #cerio release Nh4
dj =0.000001 , drj = 0.000001, # daphnia juv death
dm = 0.00001, drm = 0.00001, # daphnia adult death
da = 0.001, dra = 0.001, # algae death
t = 0.01, h = 0.01, # mich men uptake nh4
cammonium = .000001 + .0001, # ammonium lost to env-- calc in nutrient_air.R and # nitrification constant  -- calc in nutrient_air.R ##  combined with cammonium since no longer tracking no3
z =0.001, w = 0.0001, # birth of juvenile daphnia
l =.000026, m= -448,  # uptake of algae by juvenile hollings type II
j = 0.0000939, k= 10.7, # uptake of algae by adult daphnia hollings type II
)
#parameters- will need parameters for each function
parameters <- c(
a = 0.1,b = 0.1,  # daphnia adult release Nh4
c= 0.01, d = 0.01, # daphnia juv release Nh4
e = 0.001, f =0.001, #cerio release Nh4
dj =0.000001 , drj = 0.000001, # daphnia juv death
dm = 0.00001, drm = 0.00001, # daphnia adult death
da = 0.001, dra = 0.001, # algae death
t = 0.01, h = 0.01, # mich men uptake nh4
cammonium = .000001 + .0001, # ammonium lost to env-- calc in nutrient_air.R and # nitrification constant  -- calc in nutrient_air.R ##  combined with cammonium since no longer tracking no3
z =0.001, w = 0.0001, # birth of juvenile daphnia
l =.000026, m= -448,  # uptake of algae by juvenile hollings type II
j = 0.0000939, k= 10.7 # uptake of algae by adult daphnia hollings type II
)
full_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by all 3 zoo species (each times a constant?)
dammonium <- daph_a*sat_fun(a,b,algae) + daph_j*sat_fun(c,d,algae)+
# also add a constant released based on density dependent death
daph_j*death(dj,daph_j)*drj + daph_a*death(dm,daph_a)*drm -
algae*death(da,algae)*dra-
# lose from uptake and a density dependent (?) from air
algae*mich_men(t,h,ammonium) - cammonium*ammonium
#juvenile daphia are added by density dependent (large daphnia) birth
ddaph_j <- sat_fun(z,w,algae)*daph_a -
#loss through death and growth -where they reach a certain threshold size --- don't know how to put that in
daph_j*death(dj,daph_j) - sat_fun(l,m,algae)*daph_j
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- sat_fun(l,m,algae)*daph_j- daph_a*death(dm,daph_a)
# algae is added from growth based on uptake of ammonium and nitrate #need to add contanst to mm
dalgae <- algae*mich_men(t,h,ammonium) -
# algae is lost from being eaten by each of the 3 zooplankon
-daph_a*hollings2(j,k,algae) + daph_j*hollings2(l,m,algae) -
# density dependent death
algae*death(da,algae)
# return the rate of change
list(c(dammonium, ddaph_j,ddaph_a,dalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,100,0.1), func = full_equations, parms = parameters)
plot(out)
daph <- read.csv("daphnia_lifetime.csv")
# filter out individuals that were NOT born in the conditions (original daphnia)
daph <- daph %>%
filter(adult_only=="N")
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE))
daph_fec_sum <- daph_fec %>%
group_by(treatment) %>%
summarise(life_fec_avg = mean(life_fec), life_fec_sd = sd(life_fec))
#plots standard ERROR (ish didn't go back and check how many actual reps)
ggplot(data = daph_fec_sum, aes(treatment,life_fec_avg))+ geom_point()+
geom_errorbar(aes(ymin = life_fec_avg-life_fec_sd/sqrt(10), ymax = life_fec_avg+life_fec_sd/sqrt(10) ))
str(daph)
str(daph_fec_sum)
str(daph_fec)
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl_avg = mean(chl_2))
str(daph_fec)
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = sum(chl_1,chl_2)/2)
str(daph_fec)
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = sum(chl_1,chl_2, na.rm = TRUE)/2)
str(daph_fec)
daph <- read.csv("daphnia_lifetime.csv")
# filter out individuals that were NOT born in the conditions (original daphnia)
daph <- daph %>%
filter(adult_only=="N")
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE))
str(daph_fec)
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE, chl = mean(avg_chl)))
str(daph_fec)
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE, chl = mean(avg_chl)))
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(avg_chl))
str(daph_fec)
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(avg_chl), chl_sd = sd(avg_chl))
str(daph_fec)
daph_fec_sum <- daph_fec %>%
group_by(treatment) %>%
summarise(life_fec_avg = mean(life_fec), life_fec_sd = sd(life_fec))
str(daph_fec_sum)
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(avg_chl), chl_sd_rep = sd(avg_chl))
daph_fec_sum <- daph_fec %>%
group_by(treatment) %>%
summarise(life_fec_avg = mean(life_fec), life_fec_sd = sd(life_fec), chl_avg = mean(chl), chl_sd = sd(chl))
str(daph_fec_sum)
#plots standard ERROR (ish didn't go back and check how many actual reps)
ggplot(data = daph_fec_sum, aes(chl_avg,life_fec_avg))+ geom_point()+
geom_errorbar(aes(ymin = life_fec_avg-life_fec_sd/sqrt(10), ymax = life_fec_avg+life_fec_sd/sqrt(10) ))
nls(life_fec_avg ~ sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=1,b=1))
nls(life_fec_avg ~ sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=.01,b=1))
nls(life_fec_avg ~ sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=.01,b=.01))
nls(life_fec_avg ~ sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=.1,b=.01))
pracdat <- expand.grid(
a = seq(.01:1, .01)
b = seq(.01:1, .01)
k = 1
)
pracdat <- expand.grid(
a = seq(.01:1, .01),
b = seq(.01:1, .01),
k = 1
)
pracdat <- expand.grid(
a = seq(.01:1, .01),
b = seq(.01:1, .01),
k = seq(0:60,1)
)
pracdat <- expand.grid(
a = seq(.01,1.01, .1),
b = seq(.01,1.01, .1),
k = seq(0,60,1)
)
pracdat <- mutate(pracdat,outcom = sat_fun(a,b,k) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
# saturating function for nutrient release where K is independent state variable
sat_fun <- function(a,b,k) {
(k + b)  / a * b
}
pracdat <- expand.grid(
a = seq(.01,1.01, .1),
b = seq(.01,1.01, .1),
k = seq(0,60,1)
)
pracdat <- mutate(pracdat,outcom = sat_fun(a,b,k) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
pracdat <- expand.grid(
a = seq(.01,1.01, .1),
h = seq(.01,1.01, .1),
r = seq(0,60,1)
)
pracdat <- mutate(pracdat,outcom = hollings2(a,b,r) )
pracdat <- mutate(pracdat,outcom = hollings2(a,h,r) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
ggplot(pracdat, aes(r,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~h)
pracdat <- expand.grid(
a = seq(1:8, 1),
h = seq(1,8, 1),
r = seq(0,60,1)
)
pracdat <- expand.grid(
a = seq(1,8, 1),
h = seq(1,8, 1),
r = seq(0,60,1)
)
pracdat <- mutate(pracdat,outcom = hollings2(a,h,r) )
ggplot(pracdat, aes(r,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~h)
pracdat <- expand.grid(
a = seq(.1,1.01, .1),
h = seq(.1,1.01, .1),
r = seq(0,60,1)
)
pracdat <- mutate(pracdat,outcom = -1*hollings2(a,h,r) )
ggplot(pracdat, aes(r,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~h)
# saturating function for nutrient release where K is independent state variable
sat_fun <- function(a,b,k) {
a * b / (k + b)
}
nls(life_fec_avg ~ -1*sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=.1,b=.01))
nls(life_fec_avg ~ -1*hollings2(a=a, h=b,chl_avg), data=daph_fec_sum,start = list(a=.5,h=1))
nls(life_fec_avg ~ -1*hollings2(a=a, h=h,chl_avg), data=daph_fec_sum,start = list(a=.5,h=1))
nls(life_fec_avg ~ -1*hollings2(a=a, h=h,chl_avg), data=daph_fec_sum,start = list(a=1,h=1))
str(daph)
pracdat <- expand.grid(
a = seq(.1,1.01, .1),
b = seq(.1,1.01, .1),
k = seq(0,60,1)
)
pracdat <- mutate(pracdat,outcom = -1*sat_fun(a,b,k) )
sat_fun <- function(a,b,k) {
a * b / (k + b)
}
pracdat <- mutate(pracdat,outcom = -1*sat_fun(a,b,k) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
nrow(pracdat)
pracdat <- expand.grid(
a = seq(1,8, 1),
b = seq(.1,1.01, .1),
k = seq(0,60,1)
)
nrow(pracdat)
pracdat <- mutate(pracdat,outcom = sat_fun(a,b,k) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
pracdat <- expand.grid(
a = seq(.1,1.01, .1),
b = seq(1,8, 1),
k = seq(0,60,1)
)
pracdat <- mutate(pracdat,outcom = sat_fun(a,b,k) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
sat_fun <- function(a,b,k) {
a * b / (k - b)
}
pracdat <- mutate(pracdat,outcom = sat_fun(a,b,k) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
sat_fun <- function(a,b,k) {
a * b / (b-k)
}
pracdat <- mutate(pracdat,outcom = sat_fun(a,b,k) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
sat_fun <- function(a,b,k) {
a * b / (-k-b)
}
pracdat <- mutate(pracdat,outcom = sat_fun(a,b,k) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
sat_fun <- function(a,b,k) {
a * b / -(k+b)
}
nls(life_fec_avg ~ -1*sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=0.5,b=2))
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(avg_chl), chl_sd_rep = sd(avg_chl))
daph <- read.csv("daphnia_lifetime.csv")
# filter out individuals that were NOT born in the conditions (original daphnia)
daph <- daph %>%
filter(adult_only=="N")
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(avg_chl), chl_sd_rep = sd(avg_chl))
daph_fec_sum <- daph_fec %>%
group_by(treatment) %>%
summarise(life_fec_avg = mean(life_fec), life_fec_sd = sd(life_fec), chl_avg = mean(chl), chl_sd = sd(chl))
#plots standard ERROR (ish didn't go back and check how many actual reps)
ggplot(data = daph_fec_sum, aes(chl_avg,life_fec_avg))+ geom_point()+
geom_errorbar(aes(ymin = life_fec_avg-life_fec_sd/sqrt(10), ymax = life_fec_avg+life_fec_sd/sqrt(10) ))
nls(life_fec_avg ~ -1*sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=0.5,b=2))
sat_fun <- function(a,b,k) {
a * b / (k+b)
}
nls(life_fec_avg ~ -1*sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=0.9,b=8))
fit1 <- nls(life_fec_avg ~ -1*sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=0.9,b=8))
plot(predict(fit1), daph_fec_sum$life_fec_avg)
str(daph_fec)
### try with fit to all data
fit1 <- nls(life_fec_avg ~ -1*sat_fun(a=a, b=b,chl_avg), data=daph_fec,start = list(a=0.9,b=8))
### try with fit to all data
fit1 <- nls(life_fec_avg ~ -1*sat_fun(a=a, b=b,chl), data=daph_fec,start = list(a=0.9,b=8))
### try with fit to all data
fit1 <- nls(life_fec ~ -1*sat_fun(a=a, b=b,chl), data=daph_fec,start = list(a=0.9,b=8))
fit1
plot(predict(fit1),daph_fec$life_fec)
plot(daph_fec$treatment, daph_fec$life_fec)
str(life_fec)
str(daph_fec)
ndat <- data.frame(
chl = daph_fec$chl,
life_fec = predict(fit1)
)
ggplot(data = daph_fec, aes(chl, life_fec))+geom_point()+geom_line(data=ndat, aes(chl,life_fec))
sat_fun <- function(a,b,k) {
a * k / (k+b)
}
pracdat <- mutate(pracdat,outcom = sat_fun(a,b,k) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
## hmm not really what we want probably shouldn't fit to means adn wtf -1?? I am so confused
fit1 <- nls(life_fec_avg ~ sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=0.7,b=4))
## hmm not really what we want probably shouldn't fit to means adn wtf -1?? I am so confused
fit1 <- nls(life_fec_avg ~ sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=0.7,b=8))
### try with fit to all data DEFINITELY WRONG
fit1 <- nls(life_fec ~ -1*sat_fun(a=a, b=b,chl), data=daph_fec,start = list(a=0.7,b=8))
ndat <- data.frame(
chl = daph_fec$chl,
life_fec = predict(fit1)
)
ggplot(data = daph_fec, aes(chl, life_fec))+geom_point()+geom_line(data=ndat, aes(chl,life_fec))
### try with fit to all data DEFINITELY WRONG
fit1 <- nls(life_fec ~ sat_fun(a=a, b=b,chl), data=daph_fec,start = list(a=0.7,b=8))
sat_fun <- function(a,b,k) {
a * k / (k+b)
}
pracdat <- mutate(pracdat,outcom = sat_fun(a,b,k) )
ggplot(pracdat, aes(k,outcom))+ geom_line(aes(color=as.factor(a)))+facet_wrap(~b)
## hmm not really what we want probably shouldn't fit to means adn wtf -1?? I am so confused
fit1 <- nls(life_fec_avg ~ sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=0.5,b=1))
plot(predict(fit1), daph_fec_sum$life_fec_avg)
### try with fit to all data DEFINITELY WRONG
fit1 <- nls(life_fec ~ sat_fun(a=a, b=b,chl), data=daph_fec,start = list(a=0.5,b=1))
### try with fit to all data DEFINITELY WRONG
fit1 <- nls(life_fec ~ sat_fun(a=a, b=b,chl), data=daph_fec,start = list(a=0.5,b=3))
str(daph_fec_sum)
## hmm not really what we want probably shouldn't fit to means adn wtf -1?? I am so confused
fit1 <- nls(life_fec_avg ~ sat_fun(a=a, b=b,chl_avg), data=daph_fec_sum,start = list(a=0.5,b=1))
ndat <- data.frame(
chl = daph_fec_sum$chl_avg,
life_fec_avg = predict(fit1)
)
ggplot(data = daph_fec_sum, aes(chl_avg, life_fec_sum))+geom_point()+
geom_line(data=ndat, aes(chl_avg,life_fec_sum))
ggplot(data = daph_fec_sum, aes(chl_avg, life_fec_avg))+geom_point()+
geom_line(data=ndat, aes(chl_avg,life_fec_avg))
ndat <- data.frame(
chl_avg = daph_fec_sum$chl_avg,
life_fec_avg = predict(fit1)
)
ggplot(data = daph_fec_sum, aes(chl_avg, life_fec_avg))+geom_point()+
geom_line(data=ndat, aes(chl_avg,life_fec_avg))
fit1
237.21/30
237.21/45
25.12/45
##time until death
daph_death <- daph %>%
group_by(rep,treatment) %>%
count()
daph_death_sum <- daph_death %>%
group_by(treatment) %>%
summarise(time_to_death_avg = mean(n), time_to_death_sd = sd(n))
ggplot(data = daph_death_sum, aes(treatment,time_to_death_avg))+ geom_point()+
geom_errorbar(aes(ymin = time_to_death_avg-time_to_death_sd,
ymax = time_to_death_avg+time_to_death_sd))
###growth to adult
daph_growth <- daph %>%
group_by(rep,treatment) %>%
count(size_class)
daph_growth_j <- daph_growth %>%
filter(size_class=="J")
daph_growth_sum <- daph_growth_j %>%
group_by(treatment) %>%
summarise(growth_avg = mean(n), growth_sd = sd(n))
ggplot(data = daph_growth_sum, aes(treatment,growth_avg))+ geom_point()+
geom_errorbar(aes(ymin = growth_avg-growth_sd,
ymax = growth_avg+growth_sd))
str(daph_growth_j)
ggplot(data = daph_growth_j, aes(treament,n))+geom_point()
ggplot(data = daph_growth_j, aes(treatment,n))+geom_point()
