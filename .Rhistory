install.packages("R2jags")
install.packages("tidyr")
install.packages("lme4")
install.packages("tidyverse")
install.packages("ggplot2")
library(readxl)
library(tidyverse)
library(ggplot2)
dat <- read_excel("~/Preliminary Data/Data_sheet_FeedingExpt.xlsx")
cleandat <- dat %>%
group_by(Treatment) %>%
summarize_all(funs(mean,sd))
cleandat <- dat %>%
group_by(Treatment) %>%
summarize_all(funs(mean,sd), na.rm=TRUE)
warnings()
View(cleandat)
cleandat<- cleandat[,c(1,5,7,11,13,21,23,27,29)]
View(cleandat)
cdat1 <- cleandat[,c(2,3,6,7)]
cdat2 <- cleandat[,c(4,5,8,9)]
bind_rows(cdat1,cdat2)
rownames(cdat1) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
?rownames
cdat1 <- data.frame(cleandat[,c(2,3,6,7)])
rownames(cdat1) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
colnames(cdat1) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
colnames(cdat2) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
newdat <- bind_rows(cdat1,cdat2)
newdat
newdat$time <- rep(1:2, each=5)
newdat
newdat$treat <- rep(1:5,2)
newdat
library(ggplot2)
ggplot(newdat, aes(time,chl_mean))+geom_point(aes(color=treat))
newdat$treat <- as.factor(rep(1:5,2))
ggplot(newdat, aes(time,chl_mean))+geom_point(aes(color=treat))
?geom_errorbar
ggplot(newdat, aes(time,chl_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=chl_mean-chl_SD, ymax=chl_mean+chl_SD)
)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD))
View(newdat)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD))
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD))
newdat
131.6 / 2.2
131.6 * 2.2
131.6 * 2
131.6 * 2 / 2.2
new_dat1 <- new_dat[new_dat$time == "1", ]
newdat1 <- newdat[newdat$time == "1", ]
newdat2 <- newdat[newdat$time == "2", ]
new_dat <- rbind(newdat1, newdat2$chl_mean)
new_dat <- rbind(newdat1, data.frame(newdat2$chl_mean))
new_dat <- cbind(newdat1, data.frame(newdat2$chl_mean))
new_dat <- cbind(newdat1, data.frame(chl_mean_end = newdat2$chl_mean))
ggplot(newdat, aes(time, chl_mean_end / chl_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=chl_mean-chl_SD, ymax=chl_mean+chl_SD))
ggplot(newdat, aes(time, chl_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=chl_mean-chl_SD, ymax=chl_mean+chl_SD))
ggplot(new_dat, aes(time, chl_mean_end / chl_mean))+geom_point(aes(color=treat))
new_dat
ggplot(new_dat, aes(chl_mean, chl_mean_end / chl_mean))+geom_point(aes(color=treat))
ggplot(new_dat, aes(chl_mean, chl_mean_end / chl_mean))+geom_point(lwd = 5)
cleandat
head(dat)
ggplot(dat, aes(Treatment, 'Chl 2' / 'Chl 1'))+geom_point(lwd = 5)
names(dat)
ggplot(dat, aes(Treatment, 'Chl 2' / 'Chl 1'))+geom_point(lwd = 2)
names(dat); str(dat)
death2 <- function(a,b, chl){
a^b*chl
}
par(mfrow = c(1,1));plot(death2(0.25, 10, seq(40, 200, by = 10)))
death2 <- function(a,b, chl){
a*chl^b
}
par(mfrow = c(1,1));plot(death2(2, 3, seq(40, 200, by = 10)))
death <- function(a,b,chl){
a*chl^(1/b)
}
par(mfrow = c(1,1));plot(death(0.25, 10, seq(40, 200, by = 10)))
fun <- function (dat,a, s,z, sd_chl_proc, sd_nh4_proc, sd_chl_obs, sd_nh4_obs) {
for (i in 1:length(unique(faux$ind))) {  #to follow an individual replicate
for (j in 2:length(unique(faux$time))) { #over each time point
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
z *  subset(faux, ind == unique(faux$ind)[i] & time == unique(faux$time)[j-1])$nh4
#process level in z (nh4)
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4),
log(sd_nh4_proc))
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl <-
# yesterdays chl +
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl+
# a times yesterday nh4/(s +yesterday Nh4)*
((a*faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)/
(s+faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)*
# yesterdays chl-
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl) -
#(D * yesterdays chl)* yesterdays chl so that D is density dependent
death2(2,3, faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl)*
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl
#process level in chl
faux[faux$ind==unique(faux$ind)[i] & faux$time==unique(faux$time)[j], ]$chl <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl),
log(sd_chl_proc))
}
}
#observation level error
faux$chl<- rlnorm(length(faux$chl),log(faux$chl),log(sd_chl_obs))
faux$nh4 <- rlnorm(length(faux$nh4), log(faux$nh4),log(sd_nh4_obs))
return(list(c(a=a,s=s,z=z,sd_chl_proc=sd_chl_proc, sd_nh4_proc=sd_nh4_proc,
sd_chl_obs=sd_chl_obs, sd_nh4_obs=sd_nh4_obs), faux))
}
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
faux <- data.frame(
time = rep(seq(1,27),each=25),
ind = rep(seq(1,25), 27),
chl = c(rep(40,25),rep(0,650)),
nh4 = c(rep(c(3,9,18,36,54),each =5),rep(0,650)))
faux_out <- vector("list", 16)
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(1,1));plot(death2(1, 2, seq(40, 200, by = 10)))
par(mfrow = c(1,1));plot(death2(0.2, 2, seq(40, 200, by = 10)))
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
fun <- function (dat,a, s,z, sd_chl_proc, sd_nh4_proc, sd_chl_obs, sd_nh4_obs) {
for (i in 1:length(unique(faux$ind))) {  #to follow an individual replicate
for (j in 2:length(unique(faux$time))) { #over each time point
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
z *  subset(faux, ind == unique(faux$ind)[i] & time == unique(faux$time)[j-1])$nh4
#process level in z (nh4)
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4),
log(sd_nh4_proc))
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl <-
# yesterdays chl +
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl+
# a times yesterday nh4/(s +yesterday Nh4)*
((a*faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)/
(s+faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)*
# yesterdays chl-
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl) -
#(D * yesterdays chl)* yesterdays chl so that D is density dependent
death2(0.02,2, faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl)*
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl
#process level in chl
faux[faux$ind==unique(faux$ind)[i] & faux$time==unique(faux$time)[j], ]$chl <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl),
log(sd_chl_proc))
}
}
#observation level error
faux$chl<- rlnorm(length(faux$chl),log(faux$chl),log(sd_chl_obs))
faux$nh4 <- rlnorm(length(faux$nh4), log(faux$nh4),log(sd_nh4_obs))
return(list(c(a=a,s=s,z=z,sd_chl_proc=sd_chl_proc, sd_nh4_proc=sd_nh4_proc,
sd_chl_obs=sd_chl_obs, sd_nh4_obs=sd_nh4_obs), faux))
}
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(2, 1)); with(faux_out[[2]], plot(time, nh4)); with(faux_out[[2]], plot(time, log(chl)))
fun <- function (dat,a, s,z, sd_chl_proc, sd_nh4_proc, sd_chl_obs, sd_nh4_obs) {
for (i in 1:length(unique(faux$ind))) {  #to follow an individual replicate
for (j in 2:length(unique(faux$time))) { #over each time point
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
z *  subset(faux, ind == unique(faux$ind)[i] & time == unique(faux$time)[j-1])$nh4
#process level in z (nh4)
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4),
log(sd_nh4_proc))
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl <-
# yesterdays chl +
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl+
# a times yesterday nh4/(s +yesterday Nh4)*
((a*faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)/
(s+faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)*
# yesterdays chl-
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl) -
#(D * yesterdays chl)* yesterdays chl so that D is density dependent
death2(0.002,2, faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl)*
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl
#process level in chl
faux[faux$ind==unique(faux$ind)[i] & faux$time==unique(faux$time)[j], ]$chl <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl),
log(sd_chl_proc))
}
}
#observation level error
faux$chl<- rlnorm(length(faux$chl),log(faux$chl),log(sd_chl_obs))
faux$nh4 <- rlnorm(length(faux$nh4), log(faux$nh4),log(sd_nh4_obs))
return(list(c(a=a,s=s,z=z,sd_chl_proc=sd_chl_proc, sd_nh4_proc=sd_nh4_proc,
sd_chl_obs=sd_chl_obs, sd_nh4_obs=sd_nh4_obs), faux))
}
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(2, 1)); with(faux_out[[2]], plot(time, nh4)); with(faux_out[[2]], plot(time, log(chl)))
faux_out[c(1,2)] <- fun(dat=faux,a=3,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(2, 1)); with(faux_out[[2]], plot(time, nh4)); with(faux_out[[2]], plot(time, log(chl)))
warnings()
load("C:/Users/jower/Downloads/msfinal.Rdata")
View(adata2)
View(bigdata2)
unique(bigdata$Dispersal)
library(tidyverse)
?n_distinct
?nls
setwd("~/GitHub/PreliminaryExperiments")
dat = read.xls("Feeding_lit_extraction.xls")
dat = read.csv("Feeding_lit_extraction.csv")
str(dat)
m <- nls(feeding.rate.mean~(Chl_conc*h)/(1+Chl_conc*h*r), start = list(h=1,r=1), data = dat )
summary(m)
hollings2 <- function (a,h,r) {
(a*h)/(1+a*h*r)
}
dat$Chl_conc
newpred <- hollings2(a= seq(0.1,24,0.1), h = 0.264, r = 0.5218)
plot(seq(0.1,24,0.1), newpred)
points(dat$Chl_conc,dat$feeding.rate.mean)
newpred <- hollings2(a= seq(0.1,24,0.1), h = 0.264, r = 0.4218)
plot(seq(0.1,24,0.1), newpred)
points(dat$Chl_conc,dat$feeding.rate.mean)
newpred <- hollings2(a= seq(0.1,24,0.1), h = 0.164, r = 0.5218)
plot(seq(0.1,24,0.1), newpred)
points(dat$Chl_conc,dat$feeding.rate.mean)
newpred <- hollings2(a= seq(0.1,24,0.1), h = 0.164, r = 0.9218)
plot(seq(0.1,24,0.1), newpred)
points(dat$Chl_conc,dat$feeding.rate.mean)
newpred <- hollings2(a= seq(0.1,24,0.1), h = 0.164, r = 0.4218)
plot(seq(0.1,24,0.1), newpred)
points(dat$Chl_conc,dat$feeding.rate.mean)
newpred <- hollings2(a= seq(0.1,24,0.1), h = 0.264, r = 0.4218)
plot(seq(0.1,24,0.1), newpred)
points(dat$Chl_conc,dat$feeding.rate.mean)
newpred <- hollings2(a= seq(0.1,24,0.1), h = 0.264, r = 0.5218)
plot(seq(0.1,24,0.1), newpred)
points(dat$Chl_conc,dat$feeding.rate.mean)
str(dat)
rdat <- read.csv("Daphnia_large_Feeding_Nov11.csv")
str(rdat)
rdat$rate_chl <- with(rdat, (chl2-chl1)/Chl_Time_Diff)
rdat$rate_chl
rdat$rate_chl <- with(rdat, (chl1-chl2)/Chl_Time_Diff)
rate_chl
rdat$rate_chl
rdat$rate_chl_ind <- rdat$rate_chl/Num_Daphnia
rdat$rate_chl_ind <- rdat$rate_chl/rdat$Num_Daphnia
str(rdat)
rdat$control
library(tidyverse)
rdat1 <- rdat %>%
filter(control == 1)
str(rdat)
m1 <- nls(rate_chl_ind~(Chl1*h)/(1+Chl1*h*r), start = list(h=0.2,r=0.5), data = rdat1 )
m1 <- nls(rate_chl_ind~(chl1*h)/(1+chl1*h*r), start = list(h=0.2,r=0.5), data = rdat1 )
summary(m1)
newpred <- hollings2(a= seq(0.1,24,0.1), h = 0.000122, r = 137.7)
plot(seq(0.1,24,0.1), newpred)
points(rdat1$chl1,rdat1$rate_chl_ind)
rdat2 <- read.csv("Ceriodaphnia_Feeding_Nov7_2017.csv")
rdat2 <- read.csv("Ceriodaphnia_Feeding_Nov07_2017.csv")
str(rdat2)
rdat2$date
rdat2 <- rdat2 %>%
filter(Control.Y.N == "N", date == "11_7" | date == "11_16" | date == "12_31")
str(rdat2)
?filter
rdat3 <- rdat2 %>%
filter(Control.Y.N == "N", date == "11_7" | date == "11_16" | date == "12_31")
str(rdat3)
rdat3 <- filter(rdat2, Control.Y.N == "N", date == "11_7" | date == "11_16" | date == "12_31")
str(rdat3)
rdat3 <- filter(rdat2, Control.Y.N == "N")
rdat3$Control.Y.N
rdat3 <- filter(rdat2, Control.Y.N == "N", date == "11_7" | date == "11_16" | date == "12_31")
rdat3$rate_chl <- with(rdat3, (Chl.1-chl2)/Chl_Time_Diff)
rdat3$rate_chl_ind <- with(rdat3, rate_chl/x..of.ceriodaphnia)
rdat3$rate_chl_ind <- with(rdat3, rate_chl/X..of.ceriodaphnia)
m2 <- nls(rate_chl_ind~(Chl.1*h)/(1+Chl.1*h*r), start = list(h=0.00001,r=100), data = rdat3 )
summary(m2)
