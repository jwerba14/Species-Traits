cite(vegan)
library(vegan)
cite("vegan")
?cite
citation("vegan")
source("transfer_functions.R")
source("transfer_functions.R")
setwd("~/GitHub/PreliminaryExperiments")
## parameters for algal growth at different NH4 over time
## still not fitting high nh4 in either parameterization and in alt param only fits half
## goal is to get range of phi and x for each treatment and then fit those by treatment for final param?
source("transfer_functions.R")
dat <- read.csv("Algae_Nutrient.csv")
daph <- read.csv("daphnia_lifetime.csv")
# filter out individuals that were NOT born in the conditions (original daphnia)
daph <- daph %>%
filter(adult_only=="N")
library(tidyverse)
# filter out individuals that were NOT born in the conditions (original daphnia)
daph <- daph %>%
filter(adult_only=="N")
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(avg_chl), chl_sd_rep = sd(avg_chl))
str(daph)
daph$avg_chl <- with(daph, mean(chl_1,chl_2, na.rm = T))
daph$avg_chl <- with(daph, (chl_1+chl_2)/2)
daph$avg_chl
daph <- read.csv("daphnia_lifetime.csv")
# filter out individuals that were NOT born in the conditions (original daphnia)
daph <- daph %>%
filter(adult_only=="N")
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(avg_chl), chl_sd_rep = sd(avg_chl))
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(avg_chl))
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(chl_avg))
head(daph_fec)
head(daph)
?count
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(chl_avg),
days = count(size_class == A))
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(chl_avg),
days = count(size_class == "A"))
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(chl_avg),
days = tally(size_class == "A"))
##lifetime fecundity
daph_fec <- daph %>%
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(chl_avg),
days = tally(size_class))
##lifetime fecundity
daph_fec <- daph %>%
count(size_class == "A")
daph_fec
##lifetime fecundity
daph_fec <- daph %>%
tally(size_class == "A")
daph_fec
##lifetime fecundity
daph_fec <- daph %>%
#tally(size_class == "A")
#%>% ## only need adults no birth before A
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(chl_avg),
day = tally(size_class == "A"))
##lifetime fecundity
daph_fec <- daph %>%
#tally(size_class == "A")
#%>% ## only need adults no birth before A
group_by(rep,treatment) %>%
tally(size_class == "A") %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(chl_avg)) #,
##lifetime fecundity
daph_fec <- daph %>%
#tally(size_class == "A")
#%>% ## only need adults no birth before A
group_by(rep,treatment, size_class) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(chl_avg))
daph_fec
##lifetime fecundity
daph_fec <- daph %>%
#tally(size_class == "A")
#%>% ## only need adults no birth before A
group_by(rep,treatment) %>%
summarise(life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(chl_avg),
days = add_tally(size_class == "A"))
##lifetime fecundity
daph_fec <- daph %>%
#tally(size_class == "A")
#%>% ## only need adults no birth before A
group_by(rep,treatment) %>%
add_tally(size_class == "A")
daph_fec
##lifetime fecundity
daph_fec <- daph %>%
#tally(size_class == "A")
#%>% ## only need adults no birth before A
group_by(rep,treatment) %>%
mutate(days = add_tally(size_class == "A"))
##lifetime fecundity
daph_fec <- daph %>%
#tally(size_class == "A")
#%>% ## only need adults no birth before A
group_by(rep,treatment) %>%
summarise(days = add_tally(size_class), life_fec = sum(clutch_size, na.rm = TRUE), chl = mean(chl_avg), chl_sd_rep = sd(chl_avg))
head(daph)
?add_tally
daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
mutate(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg))
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summerize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg))
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summerise(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg))
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summarize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg))
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summarize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg)) %>%
mutate(daily_fec = life_fec / time_adult)
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph_fec <- daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summarize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg)) %>%
mutate(daily_fec = life_fec / time_adult)
names(daph)
ggplot(daph, aes(chl_avg, clutch_size)) + geom_point()
ggplot(daph, aes(chl_avg, clutch_size)) + geom_point(aes(colour = treatment))
ggplot(daph, aes(chl_avg, clutch_size)) + geom_point(aes(colour = as.factor(treatment)))
ggplot(daph_fec, aes(chl, daily_fec)) + geom_point()
ggplot(daph_fec, aes(chl, daily_fec)) + geom_point()
ggplot(daph, aes(chl_avg, clutch_size)) + geom_point(aes(colour = as.factor(treatment)))
max(daph$chl_avg)
daph[daph$chl_avg == max(daph$chl_avg), \]
daph[daph$chl_avg == max(daph$chl_avg), ]
filter(daph, treatment == 75, rep = "4B")
filter(daph, treatment == 75, rep == "4B")
filter(daph_fec, daily_fec < 2)
as.data.frame(filter(daph_fec, daily_fec < 2))
as.data.frame(filter(daph_fec, time_adult < 2))
as.data.frame(filter(daph_fec, time_adult <= 2))
ggplot(daph_fec, aes(time_adult, daily_fec)) + geom_point(aes(colour = as.factor(treatment)))
ggplot(daph_fec, aes(time_adult, daily_fec)) + geom_point(aes(colour = as.factor(treatment)), lwd = 4) + facet_wrap(~treatment)
ggplot(daph_fec[daph_fec$time_adult > 3, ], aes(time_adult, daily_fec)) + geom_point(aes(colour = as.factor(treatment)), lwd = 4) + facet_wrap(~treatment)
ggplot(daph_fec[daph_fec$time_adult > 3, ], aes(time_adult, lif_fec)) +
geom_point(aes(colour = as.factor(treatment)), lwd = 4) + facet_wrap(~treatment)
ggplot(daph_fec[daph_fec$time_adult > 3, ], aes(time_adult, life_fec)) +
geom_point(aes(colour = as.factor(treatment)), lwd = 4) + facet_wrap(~treatment)
ggplot(daph_fec[daph_fec$time_adult > 3, ], aes(time_adult, daily_fec)) +
geom_point(aes(colour = as.factor(treatment)), lwd = 4) + facet_wrap(~treatment)
ggplot(daph_fec[daph_fec$time_adult > 3, ], aes(time_adult, life_fec)) +
geom_point(aes(colour = as.factor(treatment)), lwd = 4) + facet_wrap(~treatment)
## make a function to fit the logist-- if a rep won't fit just gives NA
fit_nls <- function(subdat, par_names=NULL, logscale=FALSE) {
if (!logscale) {
par_names <- c("r","k")
form <- chl~logist(r=r,k=k,t=date1,a0=start_chl)
startvals <- list(r=.1,k=150)
} else {
par_names <- c("logr","logk")
form <- chl~logist(r=exp(logr),k=exp(logk),t=date1,a0=start_chl)
## FIXME:: DRY
startvals <- list(logr=log(.1),logk=log(150))
}
nls_fit <- try(
nls(form,data=subdat,start = startvals),
silent = TRUE
)
p = 1
while (class(nls_fit) == "try-error") {
if (logscale) stop("we haven't fixed this part of the code yet")
start_r <- rlnorm(1, -2, 1)
start_k <- rlnorm(1, log(250), 3)
nls_fit <- try(
nls(chl~logist(r=r,k=k,t=date1,a0=start_chl),data=subdat,start = list(r=start_r,k=start_k)),
silent = TRUE
)
p = p + 1
if (p > 100) { break }
}
col_names <- c(outer(par_names,c("est","se"),paste,sep="_"))
if(class(nls_fit) == "try-error") {
pp <- rep(NA,4) ## FIXME: get the right number of NAs programmatically
## FIXME: will fail if first group is bad
} else {
coef_tab <- coef(summary(nls_fit))
pp <- c(coef_tab[,c("Estimate","Std. Error")])
}
## collapse results to a one-row matrix
dd <- data.frame(matrix(pp,nrow=1))
names(dd) <- col_names
return(dd)
}
fit_nls2 <- function(subdat) {
data.frame(matrix(fit_nls(subdat),nrow=1))
}
fec_param <- nls(daily_fec ~ sat_fun(a,b,chl), data = daph_fec, start = list(a=1,b=1))
fec_param
##time until death
daph_adult_death <- daph %>%
filter(size_class == "A")
head(daph_adult_death)
##time until death
daph_adult_death <- daph %>%
filter(size_class == "A")
head(daph_adult_death)
a
##time until death
daph_adult_death <- daph %>%
filter(size_class == "A")
##time until death
daph_adult_death <- daph %>%
filter(size_class == "A")%>%
group_by(rep,treatment) %>%
mutate(days_adult = n())
head(daph_adult_death)
##time until death
daph_adult_death <- daph %>%
filter(size_class == "A")%>%
group_by(rep,treatment) %>%
summarize(days_adult = n())
head(daph_adult_death)
nrow(daph_adult_death)
##time until death
daph_adult_death <- daph %>%
filter(size_class == "A")%>%
group_by(rep,treatment) %>%
summarize(days_adult = n(),
chl = mean(chl_avg),
chl_sd_rep = sd(chl_avg))
head(daph_adult_death)
ggplot(data = daph_adult_death, aes(chl, days_adult))+ geom_point(aes(color = as.factor(treatment)))
ggplot(data = daph_adult_death, aes(chl, days_adult))+ geom_box(aes(color = as.factor(treatment)))
ggplot(data = daph_adult_death, aes(chl, days_adult))+ geom_boxplot(aes(color = as.factor(treatment)))
ggplot(data = daph_adult_death, aes(chl, days_adult))+ geom_point(aes(color = as.factor(treatment)))
ggplot(data = daph_adult_death, aes(chl, days_adult))+ geom_point(aes(color = as.factor(treatment))) +
geom_smooth()
adult_death <- lm(days_adult ~ chl, data = daph_adult_death)
summary(adult_death)
prac <- expand.grid(
r = seq(0.1,1,0.1),
h = seq(0.1,1,0.1),
chl = daph_adult_death$chl
)
prac <- expand.grid(
r = seq(0.1,1,0.1),
h = seq(0.1,1,0.1),
chl = daph_adult_death$chl
out = 0
)
prac <- expand.grid(
r = seq(0.1,1,0.1),
h = seq(0.1,1,0.1),
chl = daph_adult_death$chl,
out = 0
)
prac$out <- sat_fun(prac$r,prac$h,prac$chl)
ggplot(aes(chl, out), data = prac) + geom_point()+ facet_wrap(~h)
ggplot(aes(chl, out), data = prac) + geom_point(aes(color = r))+ facet_wrap(~h)
ggplot(aes(chl, out), data = prac) + geom_point(aes(color = as.factor(r))+ facet_wrap(~h)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(aes(chl, out), data = prac) + geom_point(aes(color = as.factor(r)))+ facet_wrap(~h)
prac <- expand.grid(
r = seq(0.1,1,0.1),
h = seq(1,2,0.1),
chl = daph_adult_death$chl,
out = 0
)
prac$out <- sat_fun(prac$r,prac$h,prac$chl)
ggplot(aes(chl, out), data = prac) + geom_point(aes(color = as.factor(r)))+ facet_wrap(~h)
prac <- expand.grid(
r = seq(1,2,0.1),
h = seq(1,2,0.1),
chl = daph_adult_death$chl,
out = 0
)
prac$out <- sat_fun(prac$r,prac$h,prac$chl)
ggplot(aes(chl, out), data = prac) + geom_point(aes(color = as.factor(r)))+ facet_wrap(~h)
prac$out2 <- 1/sat_fun(prac$r,prac$h,prac$chl)
ggplot(aes(chl, out2), data = prac) + geom_point(aes(color = as.factor(r)))+ facet_wrap(~h)
prac$out2 <- -sat_fun(prac$r,prac$h,prac$chl)
ggplot(aes(chl, out2), data = prac) + geom_point(aes(color = as.factor(r)))+ facet_wrap(~h)
prac$out2 <- 1/sat_fun(prac$r,prac$h,prac$chl)
ggplot(aes(chl, out2), data = prac) + geom_point(aes(color = as.factor(r)))+ facet_wrap(~h)
prac$out <- sat_fun(prac$r,prac$h,prac$chl)+mean(prac$out)
ggplot(aes(chl, out), data = prac) + geom_point(aes(color = as.factor(r)))+ facet_wrap(~h)
prac <- expand.grid(
a = seq(1,2,0.1),
b = seq(1,2,0.1),
chl = daph_adult_death$chl,
out = 0
)
new_fun <- function(a,b,k) {
b * k / (k + a)
}
prac$out3 <- new_fun(prac$a,prac$b,prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a)))+ facet_wrap(~b)
new_fun <- function(a,b,k) {
b * a / (k)
}
prac$out3 <- new_fun(prac$a,prac$b,prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a)))+ facet_wrap(~b)
new_fun <- function(a,b,k) {
k^a
}
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) #+ facet_wrap(~b)
prac <- expand.grid(
a = seq(0.1,1,0.1),
b = seq(1,2,0.1),
chl = daph_adult_death$chl,
out = 0
)
prac$out3 <- new_fun(prac$a,prac$chl)
new_fun <- function(a,k) {
k^a
}
prac$out3 <- new_fun(prac$a,prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) #+ facet_wrap(~b)
prac <- expand.grid(
a = seq(1,2,0.1),
b = seq(1,2,0.1),
chl = daph_adult_death$chl,
out = 0
)
prac$out3 <- new_fun(prac$a,prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) #+ facet_wrap(~b)
prac <- expand.grid(
a = seq(0.01,0.01,0.1),
b = seq(1,2,0.1),
chl = daph_adult_death$chl,
out = 0
)
prac$out3 <- new_fun(prac$a,prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) #+ facet_wrap(~b)
adult_death <- nls(days_adult ~ chl^a, data = daph_adult_death, start = list(a=0.01))
adult_death
plot(daph_adult_death$days_adult, predict(adult_death))
newdat <- data.frame(
chl = daph_adult_death$chl,
days_adult = predict(adult_death)
)
ggplot(data = daph_adult_death, aes(chl, days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
new_fun <- function(a,k) {
b*k^a
}
prac$out3 <- new_fun(prac$a,prac$b, prac$chl)
new_fun <- function(a,k) {
b*k^a
}
prac$out3 <- new_fun(prac$a,prac$b, prac$chl)
new_fun <- function(a,b,k) {
b*k^a
}
prac$out3 <- new_fun(prac$a,prac$b, prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) #+ facet_wrap(~b)
prac <- expand.grid(
a = seq(0.01,0.1,0.1),
b = seq(0.01,0.1,0.1),
chl = daph_adult_death$chl,
out = 0
)
prac$out3 <- new_fun(prac$a,prac$b, prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) #+ facet_wrap(~b)
prac <- expand.grid(
a = seq(0.01,0.1,0.01),
b = seq(0.01,0.1,0.01),
chl = daph_adult_death$chl,
out = 0
)
prac$out3 <- new_fun(prac$a,prac$b, prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) #+ facet_wrap(~b)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) + facet_wrap(~b)
prac <- expand.grid(
a = seq(0.07,1.7,0.01),
b = seq(0.07,1.7,0.01),
chl = daph_adult_death$chl,
out = 0
)
prac$out3 <- new_fun(prac$a,prac$b, prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) + facet_wrap(~b)
prac <- expand.grid(
a = seq(0.07,1.07,0.01),
b = seq(0.07,1.07,0.01),
chl = daph_adult_death$chl,
out = 0
)
prac$out3 <- new_fun(prac$a,prac$b, prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) + facet_wrap(~b)
nrow(prac)
