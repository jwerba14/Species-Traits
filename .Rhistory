?cite
citation("vegan")
adult_death <- nls(days_adult ~ b*chl^a, data = daph_adult_death, start = list(b=0.07, a=0.01))
setwd("~/GitHub/PreliminaryExperiments")
library(tidyverse)
daph <- read.csv("daphnia_lifetime.csv")
# filter out individuals that were NOT born in the conditions (original daphnia)
daph <- daph %>%
filter(adult_only=="N")
##time until death
daph_adult_death <- daph %>%
filter(size_class == "A")%>%
group_by(rep,treatment) %>%
summarize(days_adult = n(),
chl = mean(chl_avg),
chl_sd_rep = sd(chl_avg))
adult_death <- nls(days_adult ~ b*chl^a, data = daph_adult_death, start = list(b=0.07, a=0.01))
newdat <- data.frame(
chl = daph_adult_death$chl,
days_adult = predict(adult_death)
)
ggplot(data = daph_adult_death, aes(chl, days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
summary(adult_death)
adult_death <- nls(days_adult ~ chl^a, data = daph_adult_death, start = list(a=0.01))
newdat <- data.frame(
chl = daph_adult_death$chl,
days_adult = predict(adult_death)
)
ggplot(data = daph_adult_death, aes(chl, days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
adult_death <- nls(days_adult ~ sat_fun(a,b,k=chl), data = daph_adult_death, start = list(a=0.01, b=0.7))
# saturating function for nutrient release where K is independent state variable
sat_fun <- function(a,b,k) {
a * k / (k + b)
}
adult_death <- nls(days_adult ~ sat_fun(a,b,k=chl), data = daph_adult_death, start = list(a=0.01, b=0.7))
newdat <- data.frame(
chl = daph_adult_death$chl,
days_adult = predict(adult_death)
)
ggplot(data = daph_adult_death, aes(chl, days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
summary(adult_death)
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph_fec <- daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summarize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg)) %>%
mutate(daily_fec = life_fec / time_adult)
fec_param <- nls(daily_fec ~ sat_fun(z,w,chl), data = daph_fec, start = list(z=1,w=1))
summary(fec_param)
newdat <- data.frame(
chl = daph_fec$chl,
life_fec = predict(fec_param)
)
ggplot(data = daph_fec, aes(chl, life_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, life_fec))
ggplot(data = daph_adult_death, aes(chl, 1/days_adult))+ geom_point(aes(color = as.factor(treatment)))
head(daph)
new_fun <- function(a,k) {
a/k
}
prac <- expand.grid(
a = seq(0.07,1.07,0.01),
b = seq(0.07,1.07,0.01),
chl = daph_adult_death$chl,
out = 0
)
prac <- expand.grid(
a = seq(1,5,1),
b = seq(0.07,1.07,0.01),
chl = daph_adult_death$chl,
out = 0
)
prac$out3 <- new_fun(prac$a, prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) + facet_wrap(~b)
prac <- expand.grid(
a = seq(1,5,1),
b = seq(1,5,1),
chl = daph_adult_death$chl,
out = 0
)
prac$out3 <- new_fun(prac$a, prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) + facet_wrap(~b)
prac <- expand.grid(
a = seq(.1,1,.1),
b = seq(1,5,1),
chl = daph_adult_death$chl,
out = 0
)
prac$out3 <- new_fun(prac$a, prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) #+ facet_wrap(~b)
new_fun <- function(a,k) {
k/a
}
prac$out3 <- new_fun(prac$a, prac$chl)
ggplot(aes(chl, out3), data = prac) + geom_point(aes(color = as.factor(a))) #+ facet_wrap(~b)
source('~/GitHub/PreliminaryExperiments/transfer_functions.R', echo=TRUE)
daph <- read.csv("daphnia_lifetime.csv")
# filter out individuals that were NOT born in the conditions (original daphnia)
daph <- daph %>%
filter(adult_only=="N")
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph_fec <- daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summarize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg)) %>%
mutate(daily_fec = life_fec / time_adult)
fec_param <- nls(daily_fec ~ sat_fun(z,w,chl), data = daph_fec, start = list(z=1,w=1))
newdat <- data.frame(
chl = daph_fec$chl,
life_fec = predict(fec_param)
)
ggplot(data = daph_fec, aes(chl, life_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, life_fec))  ## why is it fitting the bottom only?
prac <- expand.grid(
a = seq(.1,1,.1),
b = seq(1,5,1),
chl = daph_adult_death$chl,
out = 0
)
prac <- expand.grid(
a = seq(.1,1,.1),
b = seq(1,5,1),
chl = daph_fec$chl,
out = 0
)
prac$out <- sat_fun(prac$a,prac$b,prac$chl)
ggplot(aes(chl, out), data = prac) + geom_point(aes(color = as.factor(a)))+ facet_wrap(~b)
prac <- expand.grid(
a = seq(10,15,1),
b = seq(1,5,1),
chl = daph_fec$chl,
out = 0
)
prac$out <- sat_fun(prac$a,prac$b,prac$chl)
ggplot(aes(chl, out), data = prac) + geom_point(aes(color = as.factor(a)))+ facet_wrap(~b)
newdat <- data.frame(
chl = daph_fec$chl,
daily_fec = predict(fec_param)
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec))  ## why is it fitting the bottom only?
fec_param <- nls(daily_fec ~ sat_fun(z,w,chl), data = daph_fec[daph_fec$daily_fec > 0.3,],
start = list(z=1,w=1))
newdat <- data.frame(
chl = daph_fec$chl,
daily_fec = predict(fec_param)
)
newdat <- data.frame(
chl = daph_fec[daph_fec$daily_fec > 0.3,]$chl,
daily_fec = predict(fec_param)
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec))  ## why is it fitting the bottom only?
fec_param <- nls(daily_fec ~ sat_fun(z,w,chl), data = daph_fec[daph_fec$daily_fec > 0.1,],
start = list(z=1,w=1))
newdat <- data.frame(
chl = daph_fec[daph_fec$daily_fec > 0.1,]$chl,
daily_fec = predict(fec_param)
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec))  ## why is it fitting the bottom only?
fec_param <- nls(daily_fec ~ sat_fun(z,w,chl), data = daph_fec,
start = list(z=1,w=1))
newdat <- data.frame(
chl = daph_fec$chl,
daily_fec = predict(fec_param)
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec))  ## why is it fitting the bottom only?
# power law
pow_law <- function(a,b,k) {
a*k^(1/b)
}
fec_param1 <- nls(daily_fec ~ pow_law(z,w,chl), data = daph_fec,
start = list(z=1,w=1))
newdat <- data.frame(
chl = daph_fec$chl,
daily_fec = c(predict(fec_param), predict(fec_param1)),
model = rep(c("sat", "pow"), each = nrow(daph_fec))
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec, colour = model))  ## why is it fitting the bottom only?
min(daph_fec$chl)
maxdaph_fec$chl
max(daph_fec$chl)
newdat <- data.frame(
#chl = daph_fec$chl,
chl = seq(0, max(daph_fec$chl), length = nrow(fec_param)),
daily_fec = c(predict(fec_param), predict(fec_param1)),
model = rep(c("sat", "pow"), each = nrow(daph_fec))
)
newdat <- data.frame(
#chl = daph_fec$chl,
chl = seq(0, max(daph_fec$chl), length = nrow(fec_param)),
daily_fec = c(predict(fec_param), predict(fec_param1)),
model = rep(c("sat", "pow"), each = nrow(daph_fec))
)
max(daph_fec$chl)
newdat <- data.frame(
#chl = daph_fec$chl,
chl = seq(0, max(daph_fec$chl), length = nrow(daph_fec)),
daily_fec = c(predict(fec_param), predict(fec_param1)),
model = rep(c("sat", "pow"), each = nrow(daph_fec))
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec, colour = model))  ## why is it fitting the bottom only?
seq(0, max(daph_fec$chl), length = nrow(daph_fec))
newdat <- data.frame(
#chl = daph_fec$chl,
chl = seq(0, max(daph_fec$chl), length = nrow(daph_fec)),
daily_fec = c(predict(fec_param), predict(fec_param1)),
model = rep(c("sat", "pow"), each = nrow(daph_fec))
)
fec_param <- nls(daily_fec ~ sat_fun(z,w,chl), data = daph_fec,
start = list(z=1,w=1))
fec_param1 <- nls(daily_fec ~ pow_law(z,w,chl), data = daph_fec,
start = list(z=1,w=1))
newdat <- data.frame(
#chl = daph_fec$chl,
chl = seq(0, max(daph_fec$chl), length = nrow(daph_fec)),
daily_fec = c(predict(fec_param), predict(fec_param1)),
model = rep(c("sat", "pow"), each = nrow(daph_fec))
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec, colour = model))  ## why is it fitting the bottom only?
newdat <- data.frame(
#chl = daph_fec$chl,
chl = seq(0, max(daph_fec$chl), length = 200),
daily_fec = c(predict(fec_param, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
, predict(fec_param1, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))),
model = rep(c("sat", "pow"), each = nrow(daph_fec))
)
newdat <- data.frame(
#chl = daph_fec$chl,
chl = rep(seq(0, max(daph_fec$chl), length = 200), 2)
daily_fec = c(predict(fec_param, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
, predict(fec_param1, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))),
model = rep(c("sat", "pow"), each = 200)
)
newdat <- data.frame(
#chl = daph_fec$chl,
chl = rep(seq(0, max(daph_fec$chl), length = 200), 2),
daily_fec = c(predict(fec_param, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
, predict(fec_param1, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))),
model = rep(c("sat", "pow"), each = 200)
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec, colour = model))  ## why is it fitting the bottom only?
# sigmoidal
sig_fun <- function(a,b,c,k) {
(a * x ^ n) / (c + x ^ n)
}
fec_param1 <- nls(daily_fec ~ sig_fun(z,w,t,chl), data = daph_fec,
start = list(z=1,w=1,t=1))
# sigmoidal
sig_fun <- function(a,b,c,k) {
(a * k ^ n) / (c + k ^ n)
}
# sigmoidal
sig_fun <- function(a,b,c,k) {
(a * k ^ b) / (c + k ^ b)
}
fec_param1 <- nls(daily_fec ~ sig_fun(z,w,t,chl), data = daph_fec,
start = list(z=1,w=1,t=1))
fec_param1 <- nls(daily_fec ~ sig_fun(z,w,t,chl), data = daph_fec,
start = list(z=1,w=1,t=2))
newdat <- data.frame(
#chl = daph_fec$chl,
chl = rep(seq(0, max(daph_fec$chl), length = 200), 2),
daily_fec = c(predict(fec_param, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
, predict(fec_param1, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))),
model = rep(c("sat", "pow"), each = 200)
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec, colour = model))  ## why is it fitting the bottom only?
fec_param <- nls(daily_fec ~ sat_fun(z,w,chl), data = daph_fec[daph_fec$daily_fec > 0.1,],
start = list(z=1,w=1))
fec_param1 <- nls(daily_fec ~ sig_fun(z,w,t,chl), data = daph_fec[daph_fec$daily_fec > 0.1,],
start = list(z=1,w=1,t=2))
newdat <- data.frame(
#chl = daph_fec$chl,
chl = rep(seq(0, max(daph_fec$chl), length = 200), 2),
daily_fec = c(predict(fec_param, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
, predict(fec_param1, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))),
model = rep(c("sat", "pow"), each = 200)
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec, colour = model))  ## why is it fitting the bottom only?
newdat <- data.frame(
#chl = daph_fec$chl,
chl = rep(seq(0, max(daph_fec$chl), length = 200), 2),
daily_fec = c(predict(fec_param, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
, predict(fec_param1, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))),
model = rep(c("sat", "sig"), each = 200)
)
ggplot(data = daph_fec, aes(chl, daily_fec)) + geom_point()+
geom_line(data = newdat, aes(chl, daily_fec, colour = model))  ## why is it fitting the bottom only?
# exp dist fun
exp_dist_fun <- function(a,k) {
a * exp(-a*k)
}
adult_death <- nls(days_adult ~ exp_dist_fun(a,k=chl), data = daph_adult_death, start = list(a=1))
##time until death
daph_adult_death <- daph %>%
filter(size_class == "A")%>%
group_by(rep,treatment) %>%
summarize(days_adult = n(),
chl = mean(chl_avg),
chl_sd_rep = sd(chl_avg))
adult_death <- nls(days_adult ~ exp_dist_fun(a,k=chl), data = daph_adult_death, start = list(a=1))
head(daph_adult_death)
ggplot(data = daph_adult_death, aes(chl, days_adult)) + geom_point()
adult_death <- lm(days_adult ~ chl, data = daph_adult_death)
newdat <- data.frame(
chl = daph_adult_death$chl,
days_adult = predict(adult_death)
)
ggplot(data = daph_adult_death, aes(chl, days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
adult_death <- lm(days_adult ~ chl, data = daph_adult_death[daph_adult_death$days_adult > 2, ])
newdat <- data.frame(
chl = daph_adult_death$chl,
days_adult = predict(adult_death)
)
adult_death <- lm(days_adult ~ chl, data = daph_adult_death[daph_adult_death$days_adult > 1, ])
newdat <- data.frame(
chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
days_adult = predict(adult_death)
)
ggplot(data = daph_adult_death, aes(chl, days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
adult_death <- lm(1/days_adult ~ chl, data = daph_adult_death[daph_adult_death$days_adult > 1, ])
newdat <- data.frame(
chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
days_adult = predict(adult_death)
)
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult))
adult_death <- lm(1/days_adult ~ chl, data = daph_adult_death[daph_adult_death$days_adult > 1, ])
adult_death
newdat <- data.frame(
chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
days_adult = predict(adult_death)
)
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
adult_death <- nls(1/days_adult ~ sat_fun(a,b,k=chl), data = daph_adult_death, start = list(a=0.1,b=0.1))
newdat <- data.frame(
chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
days_adult = predict(adult_death)
)
#[daph_adult_death$days_adult > 1, ]
newdat <- data.frame(
chl = daph_adult_death$chl,
days_adult = predict(adult_death)
)
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
adult_death <- nls(1/days_adult ~ sat_fun(a,b,k=chl), data = daph_adult_death[daph_adult_death$days_adult > 1, ],
start = list(a=0.1,b=0.1))
#
newdat <- data.frame(
chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
days_adult = predict(adult_death)
)
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
#
newdat <- data.frame(
#  chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
chl = seq(0, max(daph_fec$chl), length = 200),
days_adult = predict(adult_death, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
)
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
adult_death <- nls(1/days_adult ~ 1/sat_fun(a,b,k=chl), data = daph_adult_death[daph_adult_death$days_adult > 1, ],
start = list(a=0.1,b=0.1))
#
newdat <- data.frame(
#  chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
chl = seq(0, max(daph_fec$chl), length = 200),
days_adult = predict(adult_death, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
)
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
adult_death <- nls(1/days_adult ~ 1/sat_fun(a,b,k=chl), data = daph_adult_death[daph_adult_death$days_adult > 1, ],
start = list(a=0.1,b=0.1))
adult_death
sat_fun_inv <- function(a,b,k) {
(k + b) / (a * k)
}
adult_death <- nls(1/days_adult ~ sat_fun_inv(a,b,k=chl), data = daph_adult_death[daph_adult_death$days_adult > 1, ],
start = list(a=0.1,b=0.1))
#
newdat <- data.frame(
#  chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
chl = seq(0, max(daph_fec$chl), length = 200),
days_adult = predict(adult_death, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
)
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
adult_death
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult))
prac <- expand.grid(
a = seq(10,15,1),
b = seq(1,5,1),
chl = daph_fec$chl,
out = 0
)
prac$out <- sat_fun(prac$a,prac$b,prac$chl)
ggplot(aes(chl, out), data = prac) + geom_point(aes(color = as.factor(a)))+ facet_wrap(~b)
prac$out2 <- 1/sat_fun(prac$a,prac$b,prac$chl)
ggplot(aes(chl, out2), data = prac) + geom_point(aes(color = as.factor(a)))+ facet_wrap(~b)
adult_death <- nls(days_adult ~ sat_fun(a,b,k=chl), data = daph_adult_death[daph_adult_death$days_adult > 1, ],
start = list(a=0.1,b=0.1))
#
newdat <- data.frame(
#  chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
chl = seq(0, max(daph_fec$chl), length = 200),
days_adult = predict(adult_death, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
)
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult))
adult_death
1/22.42625
1/0.03606
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult)) +
geom_line(data = sat_fun_inv(a = 22.42, b = 0.036, chl = newdat$chl))
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult)) +
geom_line(data = sat_fun_inv(a = 22.42, b = 0.036, k = newdat$chl))
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult)) +
geom_line(data = data.frame(
chl = newdat$chl,
days_adult = sat_fun_inv(a = 22.42, b = 0.036, k = newdat$chl)))
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult)) +
geom_line(data = data.frame(
chl = newdat$chl,
days_adult = sat_fun(a = 1/22.42, b = 1/0.036, k = newdat$chl)))
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult)) +
geom_line(data = data.frame(
chl = newdat$chl,
days_adult = 1/sat_fun(a = 22.42, b = 0.036, k = newdat$chl)))
adult_death <- nls(1/days_adult ~ sat_fun_inv(a,b,k=chl), data = daph_adult_death[daph_adult_death$days_adult > 1, ],
start = list(a=0.1,b=0.1))
#
newdat <- data.frame(
#  chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
chl = seq(0, max(daph_fec$chl), length = 200),
days_adult = predict(adult_death, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
)
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult)) +
#  geom_line(data = data.frame(
#    chl = newdat$chl,
#    days_adult = sat_fun(a = 22.42, b = 0.036, k = newdat$chl)))
## visualize adult death
ggplot(data = daph_adult_death, aes(chl, days_adult))+ geom_point(aes(color = as.factor(treatment)))
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult))
sat_fun_inv
adult_death
plot(sat_fun_inv(a = 12, b = -0.43))
plot(sat_fun_inv(a = 12, b = -0.43, k =newdat$chl))
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, days_adult))
adult_death <- nls(days_adult ~ sat_fun(a,b,k=chl), data = daph_adult_death[daph_adult_death$days_adult > 1, ],
start = list(a=0.1,b=0.1))
#
newdat <- data.frame(
#  chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
chl = seq(0, max(daph_fec$chl), length = 200),
days_adult = predict(adult_death, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
)
ggplot(data = daph_adult_death, aes(chl, 1/days_adult)) + geom_point()+
geom_line(data = newdat, aes(chl, 1/days_adult))
plot(sat_fun_inv(a =
\\))
adult_death
plot(sat_fun_inv(a = 22, b = 0.36, k = newdat$chl))
#
newdat <- data.frame(
#  chl = daph_adult_death[daph_adult_death$days_adult > 1, ]$chl,
chl = seq(0.001, max(daph_fec$chl), length = 200),
days_adult = predict(adult_death, newdata = data.frame(chl = seq(0, max(daph_fec$chl), length = 200)))
)
plot(sat_fun_inv(a = 22, b = 0.36, k = newdat$chl))
seq(0, max(daph_fec$chl), length = 200)
head(daph)
group_by(rep,treatment) %>% filter(sum(size_class == "A") == 0)
daph %>% group_by(rep,treatment) %>% filter(sum(size_class == "A") == 0)
daph %>% group_by(rep,treatment) %>% filter(sum(size_class == "A") == 0)
# check
daph %>% filter(rep == "49B", treatment == 3)
# check
daph %>% filter(rep == "49D", treatment == 3)
