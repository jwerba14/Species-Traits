cite(vegan)
library(vegan)
cite("vegan")
?cite
citation("vegan")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
## trying again to get diff eqs correct
devtools::install_github("parksw3/boms")
## install
devtools::install_github("parksw3/fitode")
## install
devtools::install_github("parksw3/fitode")
install.packages("glmmTMB")
library(glmmTMB)
install.packages("TMB", type = "Source")
install.packages("TMB", type = "source")
install.packages("TMB", type = "Source")
library(glmmTMB)
install.packages("glmmTMB")
library(glmmTMB)
library(lme4)
install.packages("lme4")
library(lme4)
install.packages("lme4")
library(lme4)
## simulate data
#devtools::install_github("parksw3/fitode")
library(fitode)
cammonium = (1-9.4235e-01)
chl_nh4_mod3 <- odemodel(
name = "algal_nit",
model = list(
pred_nh4 ~ -a*pred_chl*(pred_nh4/(k+pred_nh4))+r*death*pred_chl-cammonium,
pred_chl ~ a*pred_chl*(pred_nh4/(k+pred_nh4)) - death*pred_chl
),
observation = list(
nh4 ~ dlnorm(meanlog = log(pred_nh4), sdlog = 0.05),
chl ~ dlnorm(meanlog = log(pred_chl), sdlog = 0.01)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("a","k", "r","death", "pred_nh40", "pred_chl0")
)
start3 <- c(a = 0.03,
k = .03,
r = 1,
death = 0.02,
pred_nh40= 15,
pred_chl0 = 40
)
s3 <-  simulate(chl_nh4_mod3,nsim = 5, parms= start3, times = seq(1,40),
solver.opts=list(method="rk4", hini=0.1))
plot(s3$times, s3$chl)
plot(s3$times, s3$nh4)
fit3 <- fitode(
chl_nh4_mod3,
data = s3,
start=start3,
tcol = "times",
solver.opts=list(method="rk4", hini=0.1)
)
coef(fit3)
st <- expand.grid(
a = seq(0.01,0.5,0.04),
k = seq(0.01,0.5,0.04),
r = seq(0.01,1,0.08),
death = seq(0.001,0.05,0.004),
pred_nh40 = 15,
pred_chl0 = 40
)
temp <- data.frame (
a =  0,
k = 0,
r = 0,
death = 0,
pred_nh40 = 15,
pred_chl0 = 40,
lowa = 0,
lowk = 0,
lowr = 0,
lowdeath = 0,
lownh4 = 0,
lowchl = 0,
higha = 0,
highk = 0,
highr = 0,
highdeath = 0,
highnh4 = 0,
highchl = 0,
loglik = 0,
ttime  = 0
)
for(i in 1:nrow(st)) {
newstart <- with(st[i,],
list(
a =  a,
k = k,
r=r,
death = death,
pred_nh40 = pred_nh40,
pred_chl0 = pred_chl0
))
x <- system.time({
tempm <- try((fitode(chl_nh4_mod3, data= s3, start = newstart, tcol = "times",
solver.opts = list(method="rk4", hini=0.1))),silent = TRUE)
if (class(tempm) == "try-error") {
temp[i,] <- "NA"
} else {
temp[i,1:6] <- coef(tempm)
temp[i,7:12] <- confint(tempm)[,2]
temp[i,13:18] <- confint(tempm)[,3]
temp$loglik[i] <- logLik(tempm)
}})
temp$ttime[i] <- x[[3]]
print(i/nrow(st))
}
dat <- temp %>% filter(a != "NA")
library(tidyverse)
dat <- temp %>% filter(a != "NA")
nrow(temp) ## 300
nrow(dat)  ## 18
dat
write.csv(dat, file = "filtered_sim.csv")
write.csv(temp, file = "unfiltered_sim.csv")
getwd()
setwd("~/GitHub/Species-Traits")
library(tidyverse)
library(fitdistrplus)
lit <- read.csv("literature_extraction.csv")
x <- lit %>% dplyr::select("Replicates", "Excretion.rate", "sd_error_excretion", "units_excretion", "algal_conc") %>%
filter(Excretion.rate != "NA")
x
lit <- read.csv("literature_extraction.csv")
names(lit)
lit <- read.csv("literature_extraction.csv")
x <- lit %>% dplyr::select("Replicates", "Excretion.rate", "sd_error_excretion", "units_excretion", "algal_conc") %>%
filter(Excretion.rate != "NA")
names(lit)
x <- lit %>% dplyr::select("Replicates", "Excretion.rate","exc_rate_mg_per_ind_day" , "sd_error_excretion", "units_excretion", "algal_conc") %>%
filter(Excretion.rate != "NA")
x <- lit %>% dplyr::select("Replicates", "Excretion.rate","exc_rate_mg_per_ind_day" , "sd_error_excretion", "units_excretion", "algal_conc") %>%
filter(exc_rate_mg_per_ind_day != "NA")
x
hist(x$exc_rate_mg_per_ind_day)
xx <- fitdistr(dx$exc_rate_mg_per_ind_day, "lognormal")
xx <- fitdistr(x$exc_rate_mg_per_ind_day, "lognormal")
xx
p <- ggplot(x) +
geom_histogram(aes(x = aexc_rate_mg_per_ind_day, y = ..density..),
binwidth = 1, fill = "grey", color = "black")
dlfun <- function(x) {
with(as.list(xx$estimate), dlnorm(x, meanlog, sdlog))
}
p + stat_function(fun=dlfun, color="red")
p <- ggplot(x) +
geom_histogram(aes(x = exc_rate_mg_per_ind_day, y = ..density..),
binwidth = 1, fill = "grey", color = "black")
dlfun <- function(x) {
with(as.list(xx$estimate), dlnorm(x, meanlog, sdlog))
}
p + stat_function(fun=dlfun, color="red")
