install.packages("tidyverse")
install.packages("ggplot2")
library(readxl)
library(tidyverse)
library(ggplot2)
dat <- read_excel("~/Preliminary Data/Data_sheet_FeedingExpt.xlsx")
cleandat <- dat %>%
group_by(Treatment) %>%
summarize_all(funs(mean,sd))
cleandat <- dat %>%
group_by(Treatment) %>%
summarize_all(funs(mean,sd), na.rm=TRUE)
warnings()
View(cleandat)
cleandat<- cleandat[,c(1,5,7,11,13,21,23,27,29)]
View(cleandat)
cdat1 <- cleandat[,c(2,3,6,7)]
cdat2 <- cleandat[,c(4,5,8,9)]
bind_rows(cdat1,cdat2)
rownames(cdat1) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
?rownames
cdat1 <- data.frame(cleandat[,c(2,3,6,7)])
rownames(cdat1) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
colnames(cdat1) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
colnames(cdat2) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
newdat <- bind_rows(cdat1,cdat2)
newdat
newdat$time <- rep(1:2, each=5)
newdat
newdat$treat <- rep(1:5,2)
newdat
library(ggplot2)
ggplot(newdat, aes(time,chl_mean))+geom_point(aes(color=treat))
newdat$treat <- as.factor(rep(1:5,2))
ggplot(newdat, aes(time,chl_mean))+geom_point(aes(color=treat))
?geom_errorbar
ggplot(newdat, aes(time,chl_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=chl_mean-chl_SD, ymax=chl_mean+chl_SD)
)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD))
View(newdat)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD))
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD))
newdat
131.6 / 2.2
131.6 * 2.2
131.6 * 2
131.6 * 2 / 2.2
new_dat1 <- new_dat[new_dat$time == "1", ]
newdat1 <- newdat[newdat$time == "1", ]
newdat2 <- newdat[newdat$time == "2", ]
new_dat <- rbind(newdat1, newdat2$chl_mean)
new_dat <- rbind(newdat1, data.frame(newdat2$chl_mean))
new_dat <- cbind(newdat1, data.frame(newdat2$chl_mean))
new_dat <- cbind(newdat1, data.frame(chl_mean_end = newdat2$chl_mean))
ggplot(newdat, aes(time, chl_mean_end / chl_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=chl_mean-chl_SD, ymax=chl_mean+chl_SD))
ggplot(newdat, aes(time, chl_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=chl_mean-chl_SD, ymax=chl_mean+chl_SD))
ggplot(new_dat, aes(time, chl_mean_end / chl_mean))+geom_point(aes(color=treat))
new_dat
ggplot(new_dat, aes(chl_mean, chl_mean_end / chl_mean))+geom_point(aes(color=treat))
ggplot(new_dat, aes(chl_mean, chl_mean_end / chl_mean))+geom_point(lwd = 5)
cleandat
head(dat)
ggplot(dat, aes(Treatment, 'Chl 2' / 'Chl 1'))+geom_point(lwd = 5)
names(dat)
ggplot(dat, aes(Treatment, 'Chl 2' / 'Chl 1'))+geom_point(lwd = 2)
names(dat); str(dat)
death2 <- function(a,b, chl){
a^b*chl
}
par(mfrow = c(1,1));plot(death2(0.25, 10, seq(40, 200, by = 10)))
death2 <- function(a,b, chl){
a*chl^b
}
par(mfrow = c(1,1));plot(death2(2, 3, seq(40, 200, by = 10)))
death <- function(a,b,chl){
a*chl^(1/b)
}
par(mfrow = c(1,1));plot(death(0.25, 10, seq(40, 200, by = 10)))
fun <- function (dat,a, s,z, sd_chl_proc, sd_nh4_proc, sd_chl_obs, sd_nh4_obs) {
for (i in 1:length(unique(faux$ind))) {  #to follow an individual replicate
for (j in 2:length(unique(faux$time))) { #over each time point
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
z *  subset(faux, ind == unique(faux$ind)[i] & time == unique(faux$time)[j-1])$nh4
#process level in z (nh4)
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4),
log(sd_nh4_proc))
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl <-
# yesterdays chl +
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl+
# a times yesterday nh4/(s +yesterday Nh4)*
((a*faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)/
(s+faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)*
# yesterdays chl-
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl) -
#(D * yesterdays chl)* yesterdays chl so that D is density dependent
death2(2,3, faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl)*
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl
#process level in chl
faux[faux$ind==unique(faux$ind)[i] & faux$time==unique(faux$time)[j], ]$chl <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl),
log(sd_chl_proc))
}
}
#observation level error
faux$chl<- rlnorm(length(faux$chl),log(faux$chl),log(sd_chl_obs))
faux$nh4 <- rlnorm(length(faux$nh4), log(faux$nh4),log(sd_nh4_obs))
return(list(c(a=a,s=s,z=z,sd_chl_proc=sd_chl_proc, sd_nh4_proc=sd_nh4_proc,
sd_chl_obs=sd_chl_obs, sd_nh4_obs=sd_nh4_obs), faux))
}
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
faux <- data.frame(
time = rep(seq(1,27),each=25),
ind = rep(seq(1,25), 27),
chl = c(rep(40,25),rep(0,650)),
nh4 = c(rep(c(3,9,18,36,54),each =5),rep(0,650)))
faux_out <- vector("list", 16)
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(1,1));plot(death2(1, 2, seq(40, 200, by = 10)))
par(mfrow = c(1,1));plot(death2(0.2, 2, seq(40, 200, by = 10)))
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
fun <- function (dat,a, s,z, sd_chl_proc, sd_nh4_proc, sd_chl_obs, sd_nh4_obs) {
for (i in 1:length(unique(faux$ind))) {  #to follow an individual replicate
for (j in 2:length(unique(faux$time))) { #over each time point
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
z *  subset(faux, ind == unique(faux$ind)[i] & time == unique(faux$time)[j-1])$nh4
#process level in z (nh4)
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4),
log(sd_nh4_proc))
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl <-
# yesterdays chl +
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl+
# a times yesterday nh4/(s +yesterday Nh4)*
((a*faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)/
(s+faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)*
# yesterdays chl-
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl) -
#(D * yesterdays chl)* yesterdays chl so that D is density dependent
death2(0.02,2, faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl)*
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl
#process level in chl
faux[faux$ind==unique(faux$ind)[i] & faux$time==unique(faux$time)[j], ]$chl <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl),
log(sd_chl_proc))
}
}
#observation level error
faux$chl<- rlnorm(length(faux$chl),log(faux$chl),log(sd_chl_obs))
faux$nh4 <- rlnorm(length(faux$nh4), log(faux$nh4),log(sd_nh4_obs))
return(list(c(a=a,s=s,z=z,sd_chl_proc=sd_chl_proc, sd_nh4_proc=sd_nh4_proc,
sd_chl_obs=sd_chl_obs, sd_nh4_obs=sd_nh4_obs), faux))
}
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(2, 1)); with(faux_out[[2]], plot(time, nh4)); with(faux_out[[2]], plot(time, log(chl)))
fun <- function (dat,a, s,z, sd_chl_proc, sd_nh4_proc, sd_chl_obs, sd_nh4_obs) {
for (i in 1:length(unique(faux$ind))) {  #to follow an individual replicate
for (j in 2:length(unique(faux$time))) { #over each time point
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
z *  subset(faux, ind == unique(faux$ind)[i] & time == unique(faux$time)[j-1])$nh4
#process level in z (nh4)
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4),
log(sd_nh4_proc))
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl <-
# yesterdays chl +
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl+
# a times yesterday nh4/(s +yesterday Nh4)*
((a*faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)/
(s+faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)*
# yesterdays chl-
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl) -
#(D * yesterdays chl)* yesterdays chl so that D is density dependent
death2(0.002,2, faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl)*
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl
#process level in chl
faux[faux$ind==unique(faux$ind)[i] & faux$time==unique(faux$time)[j], ]$chl <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl),
log(sd_chl_proc))
}
}
#observation level error
faux$chl<- rlnorm(length(faux$chl),log(faux$chl),log(sd_chl_obs))
faux$nh4 <- rlnorm(length(faux$nh4), log(faux$nh4),log(sd_nh4_obs))
return(list(c(a=a,s=s,z=z,sd_chl_proc=sd_chl_proc, sd_nh4_proc=sd_nh4_proc,
sd_chl_obs=sd_chl_obs, sd_nh4_obs=sd_nh4_obs), faux))
}
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(2, 1)); with(faux_out[[2]], plot(time, nh4)); with(faux_out[[2]], plot(time, log(chl)))
faux_out[c(1,2)] <- fun(dat=faux,a=3,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(2, 1)); with(faux_out[[2]], plot(time, nh4)); with(faux_out[[2]], plot(time, log(chl)))
warnings()
load("C:/Users/jower/Downloads/msfinal.Rdata")
View(adata2)
View(bigdata2)
unique(bigdata$Dispersal)
library(tidyverse)
?n_distinct
setwd("~/GitHub/PreliminaryExperiments")
nitrate <- read.csv("NO3_Air.csv")
ammonium <- read.csv("Nh4_Air.csv")
str(ammonium)
with(ammonium, plot(Date,NH4))
lm(ammonium$NH4 ~ ammonium$Date)
ammonium$Date
unique(ammonium$Date)
View(ammonium)
ammonium <- read.csv("Nh4_Air.csv")
library(tidyverse)
str(ammonium)
ammonium %>%
filter(NH4 == "NA")
View(ammonium)
ammonium %>% drop_na()
ammonium <- ammonium %>% drop_na()
View(ammonium)
library(ggplot2)
str(ammonium)
(g1 <- ggplot(ammonium, aes(Day,NH4)) + geom_point(aes(color=Treat)))
(g1 <- ggplot(ammonium, aes(Day,NH4)) + geom_point(aes(color=as.factor(Treat)))
)
m <- with(ammonium, lm(NH4 ~ Day*as.factor(Treat)))
summary(m)
m <- with(ammonium[ammonium$Day == 1 | ammonium$Day == 2 | ammonium$Day == 3,], lm(NH4 ~ Day*as.factor(Treat)))
summary(m)
m <- with(ammonium, lm(NH4 ~ Day))
summary(m)
nitrate <- read.csv("NO3_Air.csv")
nitrate <- nitrate %>% drop_na()
str(nitrate)
(g1 <- ggplot(ammonium[ammonium$NH4 < = 20,], aes(Day,NH4)) + geom_point(aes(color=as.factor(Treat))))
(g1 <- ggplot(ammonium[ammonium$NH4 <= 20,], aes(Day,NH4)) + geom_point(aes(color=as.factor(Treat))))
m <- with(ammonium[ammonium$NH4 <= 20,], lm(NH4 ~ Day*as.factor(Treat)))
summary(m)
70/5
nitrate <- read.csv("NO3_Air.csv")
nitrate <- nitrate %>% drop_na()
n1 <- with(nitrate, lm(NO3~lm(NH4 ~ Day*as.factor(Treat) ))
ammonium <- read.csv("Nh4_Air.csv")
#remove replicates that spilled (e.g NH4 == NA)
ammonium <- ammonium %>% drop_na()
(g1 <- ggplot(ammonium[ammonium$NH4 <= 20,], aes(Day,NH4)) + geom_point(aes(color=as.factor(Treat))))
m <- with(ammonium[ammonium$NH4 <= 20,], lm(NH4 ~ Day*as.factor(Treat)))
str(nitrate)
n1 <- with(nitrate, lm(NO3~lm(NH4 ~ Day*as.factor(Treat)))
ammonium <- read.csv("Nh4_Air.csv")
#remove replicates that spilled (e.g NH4 == NA)
ammonium <- ammonium %>% drop_na()
(g1 <- ggplot(ammonium[ammonium$NH4 <= 20,], aes(Day,NH4)) + geom_point(aes(color=as.factor(Treat))))
m <- with(ammonium[ammonium$NH4 <= 20,], lm(NH4 ~ Day*as.factor(Treat)))
n1 <- with(nitrate, lm(NO3~lm(NH4 ~ Day*as.factor(Treat))))
n1 <- with(nitrate, lm(NO3~lm(NO3 ~ Day*as.factor(Treat))))
n1 <- with(nitrate, lm(NO3~ Day*as.factor(Treat)))
summary(n1)
(g1 <- ggplot(nitrate, aes(Day,NO3)) + geom_point(aes(color=as.factor(Treat))))
(g1 <- ggplot(nitrate, aes(Day,NO3)) + geom_point(aes(color=as.factor(Treat), shape = Rep)))
(g1 <- ggplot(nitrate, aes(Day,NO3)) + geom_point(aes(color=as.factor(Treat), shape = as.factor(Rep))
ammonium <- read.csv("Nh4_Air.csv")
#remove replicates that spilled (e.g NH4 == NA)
ammonium <- ammonium %>% drop_na()
(g1 <- ggplot(ammonium[ammonium$NH4 <= 20,], aes(Day,NH4)) + geom_point(aes(color=as.factor(Treat))))
m <- with(ammonium[ammonium$NH4 <= 20,], lm(NH4 ~ Day*as.factor(Treat)))
(g1 <- ggplot(nitrate, aes(Day,NO3)) + geom_point(aes(color=as.factor(Treat), shape = as.factor(Rep)))
ammonium <- read.csv("Nh4_Air.csv")
#remove replicates that spilled (e.g NH4 == NA)
ammonium <- ammonium %>% drop_na()
(g1 <- ggplot(ammonium[ammonium$NH4 <= 20,], aes(Day,NH4)) + geom_point(aes(color=as.factor(Treat))))
m <- with(ammonium[ammonium$NH4 <= 20,], lm(NH4 ~ Day*as.factor(Treat)))
(g1 <- ggplot(nitrate, aes(Day,NO3)) +
geom_point(aes(color=as.factor(Treat), shape = as.factor(Rep))))
View(nitrate)
(g1 <- ggplot(nitrate[nitrate$Treat == 1 | nitrate$Treat == 2,], aes(Day,NO3)) +
geom_point(aes(color=as.factor(Treat), shape = as.factor(Rep))))
(g1 <- ggplot(nitrate[nitrate$Treat == 2,], aes(Day,NO3)) +
geom_point(aes(color=as.factor(Treat), shape = as.factor(Rep))))
?filter
nitrate <- nitrate %>%
filter(Rep != 1 & Rep != 15)
(g1 <- ggplot(nitrate, aes(Day,NO3)) +
geom_point(aes(color=as.factor(Treat), )))
n1 <- with(nitrate, lm(NO3~ Day*as.factor(Treat)))
summary(n1)
ammonium <- read.csv("Nh4_Air.csv")
ammonium <- ammonium %>% drop_na()
View(ammonium)
ammonium <- ammonium %>% drop_na()
ammonium <- ammonium %>%
filter(Rep != 1 & Rep != 15)
(g1 <- ggplot(ammonium[ammonium$NH4 <= 20,], aes(Day,NH4)) + geom_point(aes(color=as.factor(Treat))))
(g1 <- ggplot(ammonium, aes(Day,NH4)) + geom_point(aes(color=as.factor(Treat))))
m <- with(ammonium, lm(NH4 ~ Day*as.factor(Treat)))
summary(m)
n1 <- with(nitrate, lm(NO3~ Day))
summary(n1)
n1 <- with(nitrate, lm(NO3~ Day-1))
summary(n1)
n1 <- with(nitrate, lm(NO3~ Day))
summary(n1)
rdat <- read.csv("Daphnia_large_Feeding_Nov11.csv")
str(rdat)
with(rdat, plot(chl1-chl2, nh42-nh41))
sat_fun <- function(a,b,k) {
a * b / (k + b)
}
(b <- nls(rate_nh4_ind ~
sat_fun(a,b,hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)))
m1 <- nls(rate_nh4_ind~(chl1*h)/(1+chl1*h*r), start = list(h=0.002,r=130), data = dat1 )
newpred <- sat_fun(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)
rdat2 <- read.csv("Ceriodaphnia_Feeding_Nov07_2017.csv")
rdat3 <- filter(rdat2, Control.Y.N == "N", date == "11_7" | date == "11_16" | date == "12_31")
rdat3$rate_chl <- with(rdat3, (Chl.1-chl2)/Chl_Time_Diff)
rdat3$rate_chl_ind <- with(rdat3, rate_chl/X..of.ceriodaphnia)
m2 <- nls(rate_chl_ind~(Chl.1*h)/(1+Chl.1*h*r), start = list(h=0.00001,r=100), data = rdat3 )
dat <- read.csv("Daphnia_large_Feeding_Nov11.csv")
dat$rate_nh4 <- with(dat, (nh42-nh41)/Nh4_Time_Diff)
dat$rate_nh4_ind <- dat$rate_nh4/dat$Num_Daphnia
dat$rate_chl <- with(dat, (chl1-chl2)/Chl_Time_Diff)
dat$rate_chl_ind <- dat$rate_chl/rdat$Num_Daphnia
dat1 <- dat %>%
filter(control == 1)
(b <- nls(rate_nh4_ind ~
sat_fun(a,b,hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)),
start = list(a=0.001, b = 50),data = dat)
m1 <- nls(rate_nh4_ind~(chl1*h)/(1+chl1*h*r), start = list(h=0.002,r=130), data = dat1 )
newpred <- sat_fun(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)
rdat2 <- read.csv("Ceriodaphnia_Feeding_Nov07_2017.csv")
rdat3 <- filter(rdat2, Control.Y.N == "N", date == "11_7" | date == "11_16" | date == "12_31")
rdat3$rate_chl <- with(rdat3, (Chl.1-chl2)/Chl_Time_Diff)
rdat3$rate_chl_ind <- with(rdat3, rate_chl/X..of.ceriodaphnia)
m2 <- nls(rate_chl_ind~(Chl.1*h)/(1+Chl.1*h*r), start = list(h=0.00001,r=100), data = rdat3 )
(b <- nls(rate_nh4_ind ~
sat_fun(a,b,hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)),
start = list(a=0.001, b = 50),data = dat))
hollings2 <- function (a,h,r) {
(a*h)/(1+a*h*r)
}
(b <- nls(rate_nh4_ind ~
sat_fun(a,b,hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)),
start = list(a=0.001, b = 50),data = dat))
hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)
(b <- nls(rate_nh4_ind ~
a*hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)),
start = list(a=0.001),data = dat))
(b <- nls(rate_nh4_ind ~
b*hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)),
start = list(b=0.001), data = dat))
(b <- nls(rate_nh4_ind ~
b*hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)),start = 0.001, data = dat))
(b <- nls(rate_nh4_ind ~
b*hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05),
start = list(b=0.001), data = dat))
nrow(dat)
24-.1
23.9/168
(b <- nls(rate_nh4_ind ~
b*hollings2(a= seq(0.1,24,0.14), h = 0.0000939, r = 78.05),
start = list(b=0.001), data = dat))
168/24
(b <- nls(rate_nh4_ind ~
b*hollings2(a= rep(seq(0,24),7), h = 0.0000939, r = 78.05),
start = list(b=0.001), data = dat))
df <- hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05)
(b <- nls(rate_nh4_ind ~
b*df,
start = list(b=0.001), data = dat))
df %>% drop_na()
df <- data.frame(hollings2(a= seq(0.1,24,0.1), h = 0.0000939, r = 78.05))
df %>% drop_na()
df<- df %>% drop_na()
nrow(df)
(b <- nls(rate_nh4_ind ~
b*df,
start = list(b=0.001), data = dat))
str(dat)
df <- data.frame(hollings2(a= dat$chl1, h = 0.0000939, r = 78.05))
df<- df %>% drop_na()
(b <- nls(rate_nh4_ind ~
b*df,
start = list(b=0.001), data = dat))
(b <- nls(rate_nh4_ind ~
b*df,
start = 0.001, data = dat))
(b <- nls(rate_nh4_ind ~
b*(dat$chl1*0.0000939)/(1+dat$chl1*0.0000939*78.05),
start = list(b=0.001), data = dat))
(b <- nls(rate_nh4_ind ~
b*(chl1*0.0000939)/(1+chl1*0.0000939*78.05),
start = list(b=0.001), data = dat))
head(dat)
dat1 <- dat %>%
filter(control == 1)
(b <- nls(rate_nh4_ind ~
b*(chl1*0.0000939)/(1+chl1*0.0000939*78.05),
start = list(b=0.001), data = dat1))
hist(rate_nh4_ind)
hist(dat1$rate_nh4_ind)
hist(rate_nh4_ind,breaks = 30)
hist(dat1$rate_nh4_ind,breaks = 30)
?diff
diff(dat1$nh41)
nrow(dat1)
alg <- read.csv("Algae_Nutrient")
alg <- read.csv("Algae_Nutrient.csv")
str(alg)
alg1 <- alg %>%
group_by(treat,rep)%>%
summarize(change_alg = diff(chl),change_nh4 = diff(nh4))
?summarize
alg1 <- alg %>%
group_by(treat,rep)%>%
alg1$change_algae <-  diff(chl)
alg1 <- alg %>%
group_by(treat,rep)
alg1$change_algae <-  diff(chl)
alg1$change_algae <-  diff(alg$chl)
alg1$change_algae <-  diff(alg1$chl)
change_algae <-  diff(alg1$chl)
c1a <- diff(alg$chl)
change_algae
c1a
View(alg)
View(alg1)
setwd("~/GitHub/PreliminaryExperiments")
source("transfer_functions.R")
rdat <- read.csv("Daphnia_large_Feeding_Nov11.csv")
library(tidyverse)
str(str())
str(rdat)
dat <- read.csv("Algae_Nh4.csv")
dat <- read.csv("Algae_Nutrient.csv")
str(dat)
dat_sort <- rdat %>%
group_by(Rep) %>%
summarise(change_nh = diff(nh4))
dat <- read.csv("Algae_Nutrient.csv")
str(dat)
dat_sort <- dat %>%
group_by(Rep) %>%
summarise(change_nh = diff(nh4))
dat_sort <- dat %>%
group_by(rep) %>%
summarise(change_nh = diff(nh4))
dat_sort <- dat %>%
group_by(rep) %>%
change_nh = diff(nh4)
?order
dat_sort <- dat %>%
order(rep)
dat_sort <- dat %>%
group_by(rep)
nh4_change <- diff(dat_sort$nh4)
nh4_change
f <- diff(dat$nh4)
f
View(dat)
dat_sort <- dat %>%
group_by(treat,rep)
nh4_change <- diff(dat_sort$nh4)
nh4_change
?spread
dat_spread <- dat %>%
spread(treat,rep)
View(dat_spread)
str(dat)
dat_spread <- dat %>%
spread(nh4,date)
View(dat_spread)
dat_spread <- dat %>%
spread(date1)
dat_spread <- dat %>%
spread(date1,nh4)
View(dat_spread)
dat$uni <- dat$treat + dat$rep
dat$change_nh4 <- 0
for (i in 1:length(unique(dat$uni))) {
dat[dat$uni==unique(dat$uni)[i],]$change_nh4 <-
c(0,diff(dat[dat$uni==unique(dat$uni)[i],]$nh4))
}
dat$change_nh4
dat$uni
View(dat)
3.56-2.81
i =1
dat[dat$uni==unique(dat$uni)[i],]
for (i in 1:length(unique(dat$uni))) {
dat[dat$uni==unique(dat$uni)[i],]$change_nh4 <-
c(diff(dat[dat$uni==unique(dat$uni)[i],]$nh4),0)
}
dat$change_chl <- 0
for (i in 1:length(unique(dat$uni))) {
dat[dat$uni==unique(dat$uni)[i],]$change_nh4 <-
c(diff(dat[dat$uni==unique(dat$uni)[i],]$nh4),0)
dat[dat$uni==unique(dat$uni)[i],]$change_chl <-
c(diff(dat[dat$uni==unique(dat$uni)[i],]$chl),0)
}
