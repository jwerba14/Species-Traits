View(cleandat)
cleandat<- cleandat[,c(1,5,7,11,13,21,23,27,29)]
View(cleandat)
cdat1 <- cleandat[,c(2,3,6,7)]
cdat2 <- cleandat[,c(4,5,8,9)]
bind_rows(cdat1,cdat2)
rownames(cdat1) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
?rownames
cdat1 <- data.frame(cleandat[,c(2,3,6,7)])
rownames(cdat1) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
colnames(cdat1) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
colnames(cdat2) <- c("chl_mean", "Nh4_mean", "chl_SD", "Nh4_SD")
newdat <- bind_rows(cdat1,cdat2)
newdat
newdat$time <- rep(1:2, each=5)
newdat
newdat$treat <- rep(1:5,2)
newdat
library(ggplot2)
ggplot(newdat, aes(time,chl_mean))+geom_point(aes(color=treat))
newdat$treat <- as.factor(rep(1:5,2))
ggplot(newdat, aes(time,chl_mean))+geom_point(aes(color=treat))
?geom_errorbar
ggplot(newdat, aes(time,chl_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=chl_mean-chl_SD, ymax=chl_mean+chl_SD)
)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD))
View(newdat)
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD))
ggplot(newdat, aes(time,Nh4_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=Nh4_mean-Nh4_SD, ymax=Nh4_mean+Nh4_SD))
newdat
131.6 / 2.2
131.6 * 2.2
131.6 * 2
131.6 * 2 / 2.2
new_dat1 <- new_dat[new_dat$time == "1", ]
newdat1 <- newdat[newdat$time == "1", ]
newdat2 <- newdat[newdat$time == "2", ]
new_dat <- rbind(newdat1, newdat2$chl_mean)
new_dat <- rbind(newdat1, data.frame(newdat2$chl_mean))
new_dat <- cbind(newdat1, data.frame(newdat2$chl_mean))
new_dat <- cbind(newdat1, data.frame(chl_mean_end = newdat2$chl_mean))
ggplot(newdat, aes(time, chl_mean_end / chl_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=chl_mean-chl_SD, ymax=chl_mean+chl_SD))
ggplot(newdat, aes(time, chl_mean))+geom_point(aes(color=treat))+
geom_errorbar(aes(ymin=chl_mean-chl_SD, ymax=chl_mean+chl_SD))
ggplot(new_dat, aes(time, chl_mean_end / chl_mean))+geom_point(aes(color=treat))
new_dat
ggplot(new_dat, aes(chl_mean, chl_mean_end / chl_mean))+geom_point(aes(color=treat))
ggplot(new_dat, aes(chl_mean, chl_mean_end / chl_mean))+geom_point(lwd = 5)
cleandat
head(dat)
ggplot(dat, aes(Treatment, 'Chl 2' / 'Chl 1'))+geom_point(lwd = 5)
names(dat)
ggplot(dat, aes(Treatment, 'Chl 2' / 'Chl 1'))+geom_point(lwd = 2)
names(dat); str(dat)
death2 <- function(a,b, chl){
a^b*chl
}
par(mfrow = c(1,1));plot(death2(0.25, 10, seq(40, 200, by = 10)))
death2 <- function(a,b, chl){
a*chl^b
}
par(mfrow = c(1,1));plot(death2(2, 3, seq(40, 200, by = 10)))
death <- function(a,b,chl){
a*chl^(1/b)
}
par(mfrow = c(1,1));plot(death(0.25, 10, seq(40, 200, by = 10)))
fun <- function (dat,a, s,z, sd_chl_proc, sd_nh4_proc, sd_chl_obs, sd_nh4_obs) {
for (i in 1:length(unique(faux$ind))) {  #to follow an individual replicate
for (j in 2:length(unique(faux$time))) { #over each time point
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
z *  subset(faux, ind == unique(faux$ind)[i] & time == unique(faux$time)[j-1])$nh4
#process level in z (nh4)
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4),
log(sd_nh4_proc))
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl <-
# yesterdays chl +
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl+
# a times yesterday nh4/(s +yesterday Nh4)*
((a*faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)/
(s+faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)*
# yesterdays chl-
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl) -
#(D * yesterdays chl)* yesterdays chl so that D is density dependent
death2(2,3, faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl)*
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl
#process level in chl
faux[faux$ind==unique(faux$ind)[i] & faux$time==unique(faux$time)[j], ]$chl <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl),
log(sd_chl_proc))
}
}
#observation level error
faux$chl<- rlnorm(length(faux$chl),log(faux$chl),log(sd_chl_obs))
faux$nh4 <- rlnorm(length(faux$nh4), log(faux$nh4),log(sd_nh4_obs))
return(list(c(a=a,s=s,z=z,sd_chl_proc=sd_chl_proc, sd_nh4_proc=sd_nh4_proc,
sd_chl_obs=sd_chl_obs, sd_nh4_obs=sd_nh4_obs), faux))
}
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
faux <- data.frame(
time = rep(seq(1,27),each=25),
ind = rep(seq(1,25), 27),
chl = c(rep(40,25),rep(0,650)),
nh4 = c(rep(c(3,9,18,36,54),each =5),rep(0,650)))
faux_out <- vector("list", 16)
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(1,1));plot(death2(1, 2, seq(40, 200, by = 10)))
par(mfrow = c(1,1));plot(death2(0.2, 2, seq(40, 200, by = 10)))
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
fun <- function (dat,a, s,z, sd_chl_proc, sd_nh4_proc, sd_chl_obs, sd_nh4_obs) {
for (i in 1:length(unique(faux$ind))) {  #to follow an individual replicate
for (j in 2:length(unique(faux$time))) { #over each time point
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
z *  subset(faux, ind == unique(faux$ind)[i] & time == unique(faux$time)[j-1])$nh4
#process level in z (nh4)
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4),
log(sd_nh4_proc))
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl <-
# yesterdays chl +
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl+
# a times yesterday nh4/(s +yesterday Nh4)*
((a*faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)/
(s+faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)*
# yesterdays chl-
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl) -
#(D * yesterdays chl)* yesterdays chl so that D is density dependent
death2(0.02,2, faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl)*
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl
#process level in chl
faux[faux$ind==unique(faux$ind)[i] & faux$time==unique(faux$time)[j], ]$chl <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl),
log(sd_chl_proc))
}
}
#observation level error
faux$chl<- rlnorm(length(faux$chl),log(faux$chl),log(sd_chl_obs))
faux$nh4 <- rlnorm(length(faux$nh4), log(faux$nh4),log(sd_nh4_obs))
return(list(c(a=a,s=s,z=z,sd_chl_proc=sd_chl_proc, sd_nh4_proc=sd_nh4_proc,
sd_chl_obs=sd_chl_obs, sd_nh4_obs=sd_nh4_obs), faux))
}
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(2, 1)); with(faux_out[[2]], plot(time, nh4)); with(faux_out[[2]], plot(time, log(chl)))
fun <- function (dat,a, s,z, sd_chl_proc, sd_nh4_proc, sd_chl_obs, sd_nh4_obs) {
for (i in 1:length(unique(faux$ind))) {  #to follow an individual replicate
for (j in 2:length(unique(faux$time))) { #over each time point
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
z *  subset(faux, ind == unique(faux$ind)[i] & time == unique(faux$time)[j-1])$nh4
#process level in z (nh4)
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4 <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$nh4),
log(sd_nh4_proc))
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl <-
# yesterdays chl +
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl+
# a times yesterday nh4/(s +yesterday Nh4)*
((a*faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)/
(s+faux[faux$ind==unique(faux$ind)[i]&faux$time==unique(faux$time)[j-1],]$nh4)*
# yesterdays chl-
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl) -
#(D * yesterdays chl)* yesterdays chl so that D is density dependent
death2(0.002,2, faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl)*
faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j-1], ]$chl
#process level in chl
faux[faux$ind==unique(faux$ind)[i] & faux$time==unique(faux$time)[j], ]$chl <-
rlnorm(1,log(faux[faux$ind == unique(faux$ind)[i] & faux$time == unique(faux$time)[j], ]$chl),
log(sd_chl_proc))
}
}
#observation level error
faux$chl<- rlnorm(length(faux$chl),log(faux$chl),log(sd_chl_obs))
faux$nh4 <- rlnorm(length(faux$nh4), log(faux$nh4),log(sd_nh4_obs))
return(list(c(a=a,s=s,z=z,sd_chl_proc=sd_chl_proc, sd_nh4_proc=sd_nh4_proc,
sd_chl_obs=sd_chl_obs, sd_nh4_obs=sd_nh4_obs), faux))
}
faux_out[c(1,2)] <- fun(dat=faux,a=1,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(2, 1)); with(faux_out[[2]], plot(time, nh4)); with(faux_out[[2]], plot(time, log(chl)))
faux_out[c(1,2)] <- fun(dat=faux,a=3,s=20,z=0.9,sd_chl_proc=1.0, sd_nh4_proc=1.0,
sd_chl_obs=1.0, sd_nh4_obs=1.0)
par(mfrow = c(2, 1)); with(faux_out[[2]], plot(time, nh4)); with(faux_out[[2]], plot(time, log(chl)))
warnings()
load("C:/Users/jower/Downloads/msfinal.Rdata")
View(adata2)
View(bigdata2)
unique(bigdata$Dispersal)
library(tidyverse)
?n_distinct
library(readxl)
library(tidyverse)
library(ggplot2)
library(nlmrt)
dat <- read_excel("Ceriodaphnia_Feeding_Nov07_2017.xlsx")
theme_set(theme_bw())
theme_update(axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.margin = unit(0, "lines"),
legend.key.size = unit(.85, "cm"),
legend.key = element_rect(fill = "white"),
panel.margin.y = unit(0.5, "lines"),
panel.border = element_rect(colour = "black",
fill = NA, size = 1),
strip.text.x = element_text(size = 16, colour = "black",
face = "bold"))
#need to average by # of daphnia and remove controls
dat$diff_chl <- dat$`Chl 1`-dat$`chl2`
dat$diff_nh4 <- dat$`Nh4 2`-dat$`Nh4 1`
#dat$diff_nh4_ind <- dat$diff_nh4/dat$`# of ceriodaphnia`
dat$control <- rep(c(rep(1,5),rep(2,3)),5)
dat$diff_chl_ind <- as.numeric(length(dat))
dat$diff_nh4_ind <- as.numeric(length(dat))
for (i in 1:nrow(dat)){
if (dat[i, ]$control == 1) {
dat$diff_chl_ind[i] <- dat$diff_chl[i]/dat$`# of ceriodaphnia`[i]
dat$diff_nh4_ind[i] <- dat$diff_nh4[i]/dat$`# of ceriodaphnia`[i]
} else {
dat$diff_chl_ind[i] <- dat$diff_chl[i]
dat$diff_nh4_ind[i] <- dat$diff_nh4[i]
}
}
names(dat)[8] <- "Chl_1"
newdat <- dat[dat$control != 2,]
Hollings1 <- function (t,x,a) {
a*t*x
}
fit <- nlxb(formula = diff_chl_ind ~ a * Chl_Time_Diff * Chl_1,
start = c(a = 1), data = data.frame(newdat))
newdat$pred_vals <- Hollings1(t = newdat$Chl_Time_Diff, x = newdat$Chl_1, a = fit$coefficients)
newdat$pred_upper <- Hollings1(t = newdat$Chl_Time_Diff, x = newdat$Chl_1, a = fit$coefficients+6.285e-07)
newdat$pred_lower <- Hollings1(t = newdat$Chl_Time_Diff, x = newdat$Chl_1, a = fit$coefficients-6.285e-07)
dfnew <- data.frame(
Chl_1 = seq(0,22,by=0.1),
Chl_Time_Diff = 360
)
dfnew$pred_vals <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$Chl_1, a = fit$coefficients)
dfnew$pred_upper <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$Chl_1, a = fit$coefficients+6.285e-07)
dfnew$pred_lower <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$Chl_1, a = fit$coefficients-6.285e-07)
ggplot(newdat, aes(Chl_1, diff_chl_ind)) +
geom_point(lwd = 2.5, aes(color=date, shape=as.factor(Treatment))) +
geom_line(data=dfnew,aes(Chl_1, pred_vals), lwd = 1) +
geom_line(data=dfnew,aes(Chl_1, pred_upper), lwd = 0.5, color="blue",linetype= "dashed") +
geom_line(data=dfnew,aes(Chl_1, pred_lower), lwd = 0.5, color="blue", linetype= "dashed") +
#geom_ribbon(data=dfnew,aes(ymin=pred_lower,ymax=pred_upper, x=Chl_1), alpha=0.2)+
#theme(legend.position = "none")+
xlab("Initial Chlorophyll Conc (ug/L)")+ylab("Individual Uptake of Chlorophyll (mg/L*min)")
setwd("~/GitHub/PreliminaryExperiments")
library(readxl)
library(tidyverse)
library(ggplot2)
library(nlmrt)
dat <- read_excel("Ceriodaphnia_Feeding_Nov07_2017.xlsx")
theme_set(theme_bw())
theme_update(axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.margin = unit(0, "lines"),
legend.key.size = unit(.85, "cm"),
legend.key = element_rect(fill = "white"),
panel.margin.y = unit(0.5, "lines"),
panel.border = element_rect(colour = "black",
fill = NA, size = 1),
strip.text.x = element_text(size = 16, colour = "black",
face = "bold"))
#need to average by # of daphnia and remove controls
dat$diff_chl <- dat$`Chl 1`-dat$`chl2`
dat$diff_nh4 <- dat$`Nh4 2`-dat$`Nh4 1`
#dat$diff_nh4_ind <- dat$diff_nh4/dat$`# of ceriodaphnia`
dat$control <- rep(c(rep(1,5),rep(2,3)),5)
dat$diff_chl_ind <- as.numeric(length(dat))
dat$diff_nh4_ind <- as.numeric(length(dat))
for (i in 1:nrow(dat)){
if (dat[i, ]$control == 1) {
dat$diff_chl_ind[i] <- dat$diff_chl[i]/dat$`# of ceriodaphnia`[i]
dat$diff_nh4_ind[i] <- dat$diff_nh4[i]/dat$`# of ceriodaphnia`[i]
} else {
dat$diff_chl_ind[i] <- dat$diff_chl[i]
dat$diff_nh4_ind[i] <- dat$diff_nh4[i]
}
}
names(dat)[8] <- "Chl_1"
newdat <- dat[dat$control != 2,]
Hollings1 <- function (t,x,a) {
a*t*x
}
fit <- nlxb(formula = diff_chl_ind ~ a * Chl_Time_Diff * Chl_1,
start = c(a = 1), data = data.frame(newdat))
newdat$pred_vals <- Hollings1(t = newdat$Chl_Time_Diff, x = newdat$Chl_1, a = fit$coefficients)
newdat$pred_upper <- Hollings1(t = newdat$Chl_Time_Diff, x = newdat$Chl_1, a = fit$coefficients+6.285e-07)
newdat$pred_lower <- Hollings1(t = newdat$Chl_Time_Diff, x = newdat$Chl_1, a = fit$coefficients-6.285e-07)
dfnew <- data.frame(
Chl_1 = seq(0,22,by=0.1),
Chl_Time_Diff = 360
)
dfnew$pred_vals <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$Chl_1, a = fit$coefficients)
dfnew$pred_upper <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$Chl_1, a = fit$coefficients+6.285e-07)
dfnew$pred_lower <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$Chl_1, a = fit$coefficients-6.285e-07)
ggplot(newdat, aes(Chl_1, diff_chl_ind)) +
geom_point(lwd = 2.5, aes(color=date, shape=as.factor(Treatment))) +
geom_line(data=dfnew,aes(Chl_1, pred_vals), lwd = 1) +
geom_line(data=dfnew,aes(Chl_1, pred_upper), lwd = 0.5, color="blue",linetype= "dashed") +
geom_line(data=dfnew,aes(Chl_1, pred_lower), lwd = 0.5, color="blue", linetype= "dashed") +
#geom_ribbon(data=dfnew,aes(ymin=pred_lower,ymax=pred_upper, x=Chl_1), alpha=0.2)+
#theme(legend.position = "none")+
xlab("Initial Chlorophyll Conc (ug/L)")+ylab("Individual Uptake of Chlorophyll (mg/L*min)")
dat$diff_chl <- dat$`Chl 1`-dat$`chl2`
dat$diff_nh4 <- dat$`Nh4 2`-dat$`Nh4 1`
#dat$diff_nh4_ind <- dat$diff_nh4/dat$`# of ceriodaphnia`
dat$control <- rep(c(rep(1,5),rep(2,3)),5)
dat$diff_chl_ind <- as.numeric(length(dat))
dat$diff_nh4_ind <- as.numeric(length(dat))
for (i in 1:nrow(dat)){
if (dat[i, ]$control == 1) {
dat$diff_chl_ind[i] <- dat$diff_chl[i]/dat$`# of ceriodaphnia`[i]
dat$diff_nh4_ind[i] <- dat$diff_nh4[i]/dat$`# of ceriodaphnia`[i]
} else {
dat$diff_chl_ind[i] <- dat$diff_chl[i]
dat$diff_nh4_ind[i] <- dat$diff_nh4[i]
}
}
names(dat)[8] <- "Chl_1"
newdat <- dat[dat$control != 2,]
Hollings1 <- function (t,x,a) {
a*t*x
}
fit <- nlxb(formula = diff_chl_ind ~ a * Chl_Time_Diff * Chl_1,
start = c(a = 1), data = data.frame(newdat))
newdat$pred_vals <- Hollings1(t = newdat$Chl_Time_Diff, x = newdat$Chl_1, a = fit$coefficients)
newdat$pred_upper <- Hollings1(t = newdat$Chl_Time_Diff, x = newdat$Chl_1, a = fit$coefficients+6.285e-07)
newdat$pred_lower <- Hollings1(t = newdat$Chl_Time_Diff, x = newdat$Chl_1, a = fit$coefficients-6.285e-07)
dfnew <- data.frame(
Chl_1 = seq(0,22,by=0.1),
Chl_Time_Diff = 360
)
dfnew$pred_vals <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$Chl_1, a = fit$coefficients)
dfnew$pred_upper <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$Chl_1, a = fit$coefficients+6.285e-07)
dfnew$pred_lower <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$Chl_1, a = fit$coefficients-6.285e-07)
ggplot(newdat, aes(Chl_1, diff_chl_ind)) +
geom_point(lwd = 2.5, aes(color=date, shape=as.factor(Treatment))) +
geom_line(data=dfnew,aes(Chl_1, pred_vals), lwd = 1) +
geom_line(data=dfnew,aes(Chl_1, pred_upper), lwd = 0.5, color="blue",linetype= "dashed") +
geom_line(data=dfnew,aes(Chl_1, pred_lower), lwd = 0.5, color="blue", linetype= "dashed") +
#geom_ribbon(data=dfnew,aes(ymin=pred_lower,ymax=pred_upper, x=Chl_1), alpha=0.2)+
#theme(legend.position = "none")+
xlab("Initial Chlorophyll Conc (ug/L)")+ylab("Individual Uptake of Chlorophyll (mg/L*min)")
library(readxl)
library(tidyverse)
library(ggplot2)
dat2 <- read_excel("Daphnia_large_Feeding_Nov11.xlsx")
str(dat2)
theme_set(theme_bw())
theme_update(axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.margin = unit(0, "lines"),
legend.key.size = unit(.85, "cm"),
legend.key = element_rect(fill = "white"),
panel.margin.y = unit(0.5, "lines"),
panel.border = element_rect(colour = "black",
fill = NA, size = 1),
strip.text.x = element_text(size = 16, colour = "black",
face = "bold"))
dat2$diff_chl <- dat2$chl1-dat2$chl2
dat2$diff_nh4 <- dat2$nh42-dat2$nh41
dat2$diff_chl_ind <- as.numeric(length(dat2))
dat2$diff_nh4_ind <- as.numeric(length(dat2))
#dat2$control <- rep(c(rep(1,5),rep(2,3)),5)
for (i in 1:nrow(dat2)){
if (dat2[i, ]$control == 1) {
dat2$diff_chl_ind[i] <- dat2$diff_chl[i]/dat2$Num_Daphnia[i]
dat2$diff_nh4_ind[i] <- dat2$diff_nh4[i]/dat2$Num_Daphnia[i]
} else {
dat2$diff_chl_ind[i] <- dat2$diff_chl[i]
dat2$diff_nh4_ind[i] <- dat2$diff_nh4[i]
}
}
dat2$control
library(readxl)
library(tidyverse)
library(ggplot2)
dat2 <- read_excel("Daphnia_large_Feeding_Nov11.xlsx")
theme_set(theme_bw())
theme_update(axis.text.x = element_text(size = 16),
axis.text.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16),
legend.title = element_text(size = 12),
legend.text = element_text(size = 14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.margin = unit(0, "lines"),
legend.key.size = unit(.85, "cm"),
legend.key = element_rect(fill = "white"),
panel.margin.y = unit(0.5, "lines"),
panel.border = element_rect(colour = "black",
fill = NA, size = 1),
strip.text.x = element_text(size = 16, colour = "black",
face = "bold"))
dat2$diff_chl <- dat2$chl1-dat2$chl2
dat2$diff_nh4 <- dat2$nh42-dat2$nh41
dat2$diff_chl_ind <- as.numeric(length(dat2))
dat2$diff_nh4_ind <- as.numeric(length(dat2))
for (i in 1:nrow(dat2)){
if (dat2[i, ]$control == 1) {
dat2$diff_chl_ind[i] <- dat2$diff_chl[i]/dat2$Num_Daphnia[i]
dat2$diff_nh4_ind[i] <- dat2$diff_nh4[i]/dat2$Num_Daphnia[i]
} else {
dat2$diff_chl_ind[i] <- dat2$diff_chl[i]
dat2$diff_nh4_ind[i] <- dat2$diff_nh4[i]
}
}
dat$control
str(dat)
dat$control[1]== 1
newdat2 <- dat2[dat2$control != 2,]
Hollings1 <- function (t,x,a) {
a*t*x
}
fit2 <- nlxb(formula = diff_chl_ind ~ a * Chl_Time_Diff * chl1,
start = c(a = 1), data = data.frame(newdat2))
??nxlb
??nlxb
require(nlmrt)
fit2 <- nlxb(formula = diff_chl_ind ~ a * Chl_Time_Diff * chl1,
start = c(a = 1), data = data.frame(newdat2))
View(dat2)
dat2 <- read_excel("Daphnia_large_Feeding_Nov11.xlsx")
setwd("~/GitHub/PreliminaryExperiments")
dat2 <- read_excel("Daphnia_large_Feeding_Nov11.xlsx")
dat2$diff_chl <- dat2$chl1-dat2$chl2
dat2$diff_nh4 <- dat2$nh42-dat2$nh41
dat2$diff_chl_ind <- as.numeric(length(dat2))
dat2$diff_nh4_ind <- as.numeric(length(dat2))
for (i in 1:nrow(dat2)){
if (dat2[i, ]$control == 1) {
dat2$diff_chl_ind[i] <- dat2$diff_chl[i]/dat2$Num_Daphnia[i]
dat2$diff_nh4_ind[i] <- dat2$diff_nh4[i]/dat2$Num_Daphnia[i]
} else {
dat2$diff_chl_ind[i] <- dat2$diff_chl[i]
dat2$diff_nh4_ind[i] <- dat2$diff_nh4[i]
}
}
newdat2 <- dat2[dat2$control != 2,]
Hollings1 <- function (t,x,a) {
a*t*x
}
fit2 <- nlxb(formula = diff_chl_ind ~ a * Chl_Time_Diff * chl1,
start = c(a = 1), data = data.frame(newdat2))
fit2
newdat2$pred_vals <- Hollings1(t = newdat2$Chl_Time_Diff, x = newdat2$chl1, a = fit2$coefficients)
newdat2$pred_upper <- Hollings1(t = newdat2$Chl_Time_Diff, x = newdat2$chl1, a = fit2$coefficients+5.439e-06 )
newdat2$pred_lower <- Hollings1(t = newdat2$Chl_Time_Diff, x = newdat2$chl1, a = fit2$coefficients-5.439e-06 )
dfnew <- data.frame(
chl1 = seq(0,25,by=0.1),
Chl_Time_Diff = 360
)
dfnew$pred_vals <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$chl1, a = fit2$coefficients)
dfnew$pred_upper <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$chl1, a = fit2$coefficients+7.497e-06)
dfnew$pred_lower <- Hollings1(t = dfnew$Chl_Time_Diff, x = dfnew$chl1, a = fit2$coefficients-7.497e-06)
ggplot(newdat2, aes(chl1, diff_chl_ind)) +
geom_point(lwd = 2.5) +
geom_line(data=dfnew,aes(chl1, pred_vals), lwd = 1) +
geom_line(data=dfnew,aes(chl1, pred_upper), lwd = 0.5, color="blue",linetype= "dashed") +
geom_line(data=dfnew,aes(chl1, pred_lower), lwd = 0.5, color="blue", linetype= "dashed") +
#geom_ribbon(data=dfnew,aes(ymin=pred_lower,ymax=pred_upper, x=Chl_1), alpha=0.2)+
theme(legend.position = "none")+
xlab("Initial Chlorophyll Conc (ug/L)")+ylab("Individual Uptake of Chlorophyll (mg/L*min)")
str(dat2)
ggplot(dat2, aes(chl1,diff_chl_ind))+geom_point(aes(color=Treatment))
ggplot(dat2, aes(chl1,diff_chl_ind))+geom_point(aes(color=as.factor(Treatment)))
?scale_y_continuous
ggplot(dat2, aes(chl1,diff_chl_ind))+geom_point(aes(color=as.factor(Treatment)))+
scale_y_continuous(limits = c(-1,2))
ggplot(dat2, aes(chl1,diff_chl_ind))+geom_point(aes(color=as.factor(Treatment)))+
scale_y_continuous(limits = c(-0.5,2))
which(dat2$diff_chl_ind==min(dat2$diff_chl_ind))
min(dat2$diff_chl_ind)
min(dat2$diff_chl_ind, na.rm = T)
dat2$diff_chl_ind
