panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank()) )
state <- c(dammonium = 4.4,
dalgae = 15
)
#parameters- will need parameters for each function
parameters_med <- c(
alpha = 4.379716e-03, beta = 29,
death1 = .007, death2 = 0.000082,
gamma =  0.365 , omega = 10.5,
amm_param_b = median(param$amm_param_b)
)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
ddammonium <-  -dalgae*dammonium*alpha*omega/(omega+dammonium) +
gamma/2 * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)
# return the rate of change
list(c(ddammonium,ddalgae))
}) # end with(as.list ...
}
out_med <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters_med)
plot(out_med)
parameters_upp <- c(
alpha = 4.379716e-03, beta = 29,
death1 = .007, death2 = 0.000082,
gamma =  0.365 , omega = 10.5,
amm_param_b = quantile(param$amm_param_b,c(0.975), names = F)
)
out_up <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters_upp)
plot(out_up)
parameters_low <- c(
alpha = 4.379716e-03, beta = 29,
death1 = .007, death2 = 0.000082,
gamma =  0.365 , omega = 10.5,
amm_param_b = quantile(param$amm_param_b,c(0.025), names = F)
)
out_low <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters_low)
plot(out_low)
pred <- as.data.frame(out_low)
pred$quantile <- "low"
predup <- as.data.frame(out_up)
predup$quantile <- "upper"
predmed <- as.data.frame(out_med)
predmed$quantile <- "med"
## alg only
dat_alg <- dat %>% filter(treatment == 1) %>% filter(NH4 < 20)%>%
filter(Chl < 100, Chl >= 0) %>% select(TankNum, NH4, Chl,Day)
names(dat_alg) <- c("TankNum", "dammonium","dalgae","time")
amm_g <- ggplot(predmed, aes(time,dammonium)) + geom_line(linetype = "solid")+
geom_line(data= predup, linetype = "dotdash") + geom_line(data=pred, linetype ="dotdash")+
theme_bw()+ geom_point(data = dat_alg,aes(time,dammonium) )+
ylab("Ammonium mg/L")+xlab("Days")+
theme(axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 32),
strip.text = element_text(size = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank())
(alg_g <- ggplot(predmed, aes(time,dalgae)) + geom_line(linetype = "solid")+
geom_line(data= predup, linetype = "dotdash") + geom_line(data=pred, linetype ="dotdash")+
theme_bw()+ geom_point(data = dat_alg,aes(time,dalgae) )+
ylab("Chl a ug/L")+xlab("Days")+
theme(axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 32),
strip.text = element_text(size = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank()) )
setwd("C:/Users/Jo/OneDrive/Documents/GitHub/Species-Traits/Daphnia")
daph <- read.csv("daphnia_lifetime.csv")
daph <- daph %>%
filter(adult_only=="N")
## to get fecundity parameter fit saturating curve (params z and w in full ode)
## need to make per day so need to divide total fecundity by # of days that individual was an adult
daph_fec <- daph %>% group_by(rep, treatment) %>%
filter(size_class == "A") %>%
summarize(
time_adult = n()
, life_fec   = sum(clutch_size, na.rm = TRUE)
, chl        = mean(chl_avg)
, chl_sd_rep = sd(chl_avg)) %>%
mutate(daily_fec = life_fec / time_adult)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
daph_fec_r <- daph_fec %>% select(rep, chl, daily_fec)
daph_fec_r$rep <- seq(1,70)
daph_fec_r <- data.frame(daph_fec_r)
daph_fec_list <- list(
"N" = 70,
"chl" = daph_fec_r$chl,
"daily_fec" = daph_fec_r$daily_fec
)
fit <- stan(file = "fec_stan.stan",
data = daph_fec_list,
control = list(adapt_delta = 0.95))
t <- rstan::extract(fit,permuted = FALSE)
fit_sum <- summary(fit)
fit_sum_param <- fit_sum$summary[c(1:4),]
## right now only 2 chain want all 4 eventually
a_pred <- rbind(t[,1,1],t[,2,1], t[,3,1], t[,4,1]) ## all rows, first chain, alpha
b_pred <- rbind(t[,1,2], t[,2,2], t[,3,2], t[,4,2])
newdat <- data.frame(chl = seq(0,100))
pred_out <- apply(newdat,1,sat_fun,a=a_pred,b=b_pred)
pred_sum <- apply(pred_out, 2, FUN = function (x) quantile(x, c(0.025,0.50,0.975)))
lower <- data.frame(chl = seq(0,100), daily_fec = pred_sum[1,])
upper <- data.frame(chl = seq(0,100), daily_fec = pred_sum[3,])
med <- data.frame(chl = seq(0,100), daily_fec = pred_sum[2,])
ggplot(daph_fec_r, aes(chl, daily_fec)) + geom_point(alpha = 0.6, size = 2 )+
geom_line(data = lower, linetype = "dotdash", lwd = 1.25) + geom_line(data = upper, linetype = "dotdash", lwd = 1.25)+
geom_line(data = med, linetype = "solid", lwd =1.25) + xlab("Daily Chl a ug/L") + ylab("Daily Fecundity")+
theme_bw() + theme(axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 32),
strip.text = element_text(size = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank())
daph <- read.csv("daphnia_lifetime.csv")
# filter out individuals that were NOT born in the conditions (original daphnia)
daph <- daph %>%
filter(adult_only=="N")
dA <-  daph %>%
filter(size_class == "A")
daph_adult_death <-  dA %>%
group_by(rep,treatment) %>%
summarize(days_adult = n(),
chl = mean(chl_avg),
chl_sd_rep = sd(chl_avg))
survcurve <- function(x) {
x <- c(0,sort(x))
tibble(day=x,frac_surv=seq(1,0,length.out=length(x)))
}
daph_surv_curves <- daph_adult_death %>%
group_by(treatment) %>%
do(survcurve(.$days_adult))
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
library(shinystan)
daph_death_list <- list(
"N" = 74,
"days" = daph_surv_curves$day,
"survival" = daph_surv_curves$frac_surv
)
fit <- stan(file = "adult_death.stan",
data = daph_death_list,
control = list(adapt_delta = 0.95,
max_treedepth = 12))
## for ODE 1/beta is the rate- beta is the number of days until 1/e are lost
fit_sum <- summary(fit)
fit_sum_param <- fit_sum$summary[c(1:4),]
t <- rstan::extract(fit,permuted = FALSE)
b_pred <- rbind(t[,1,1],t[,2,1],t[,3,1],t[,4,1])
newdat <- data.frame(days = seq(0,60))
pred_out <- apply(newdat,1,expon,b=b_pred)
pred_sum <- apply(pred_out, 2, FUN = function (x) quantile(x, c(0.025,0.50,0.975)))
lower <- data.frame(day = seq(0,60), frac_surv = pred_sum[1,])
upper <- data.frame(day = seq(0,60), frac_surv = pred_sum[3,])
med <- data.frame(day = seq(0,60), frac_surv= pred_sum[2,])
ggplot(daph_surv_curves, aes(day, frac_surv)) + geom_point(alpha = 0.6, size = 2 ) +
geom_line(data = lower, linetype = "dotdash", lwd = 1.25) + geom_line(data = upper, linetype = "dotdash", lwd = 1.25)+
geom_line(data = med, linetype = "solid", lwd =1.25) + xlab("Day") + ylab("Proportion Surviving")+
theme_bw() + theme(axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 32),
axis.title.x = element_text(size = 30),
axis.title.y = element_text(size = 32),
strip.text = element_text(size = 0),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank())
setwd("~/GitHub/Species-Traits/Daphnia")
library(tidyverse)
daph <- read.csv("daphnia_lifetime.csv")
str(daph)
unique(daph$rep)
unique(daph$Day)
filter(daph, Day ==1)
nrow(filter(daph, Day ==1))
daph %>% group_by(treatment) %>% summarize(avg_chl = mean(chl_avg))
daph %>% group_by(treatment) %>% summarize(avg_chl = mean(chl_avg), sd_chl = sd(chl_avg))
ammonium <- read.csv("Nh4_Air.csv")
setwd("~/GitHub/Species-Traits/Nitrogen_Algae")
ammonium <- read.csv("Nh4_Air.csv")
ammonium <- ammonium %>% drop_na()
#same early morning machine problem
ammonium <- ammonium %>%
filter(Rep != 1 & Rep != 15 & Rep != 52) ## not sure about 52 but obvi outlier so check when measured
str(ammonium)
unique(ammonium$Rep)
length(unique(ammonium$Rep))
unique(ammonium$Treat)
ammonium %>% filter(Day == 1) %>% group_by(Treat) %>% summarize(mean_n = mean(NH4), sd_n = sd(NH4))
setwd("~/GitHub/Species-Traits/Ceriodaphnia")
cerio <- read.csv("cerio_pop.csv")
str(cerio)
cerio %>% group_by(Treatment) %>% summarize(mean_chl = mean(Avg_Chl), sd_c= sd(Avg_Chl))
cerio %>% group_by(Treatment) %>% summarize(mean_chl = mean(Avg_Chl, na.rm = T), sd_c= sd(Avg_Chl, na.rm = T))
setwd("~/GitHub/Species-Traits/Nitrogen_Algae")
## trying again to get diff eqs correct
devtools::install_github("parksw3/boms")
## install
devtools::install_github("parksw3/fitode")
library(fitode)
library(corrplot)
source("../transfer_functions.R")
setwd("~/GitHub/Species-Traits/Nitrogen_Algae")
dat <- read.csv("Algae_Nutrient.csv")
dat_nit_27 <- dat %>%
filter(treat == 27)
dat_nit_9 <- dat %>%
filter(treat == 9)
dat_nit_3 <- dat %>%
filter(treat == 3)
dat_nit_108 <- dat %>%
filter(treat == 108)
dat_nit_54 <- dat %>%
filter(treat == 54)
dat_nit_0.5 <- dat %>%
filter(treat == 0.5)
cammonium = (1-9.4235e-01) # proportional ammonium lost to env-- calc in nutrient_air.R
chl_nh4_mod <- new("model.ode",
name = "algal_nit",
model = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma *(death1*pred_chl + death2*(pred_chl^2))-cammonium*pred_nh4 ,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl - death2*(pred_chl^2)
),
## consider using bbmle::dnorm_n ?
observation = list(
nh4 ~ dnorm2(mean = pred_nh4),
chl ~ dnorm2(mean = pred_chl)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("alpha", "beta", "omega", "death1","death2", "pred_nh40", "pred_chl0", "gamma")
)
library(fitode)
library(corrplot)
chl_nh4_mod <- new("model.ode",
name = "algal_nit",
model = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma *(death1*pred_chl + death2*(pred_chl^2))-cammonium*pred_nh4 ,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl - death2*(pred_chl^2)
),
## consider using bbmle::dnorm_n ?
observation = list(
nh4 ~ dnorm2(mean = pred_nh4),
chl ~ dnorm2(mean = pred_chl)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("alpha", "beta", "omega", "death1","death2", "pred_nh40", "pred_chl0", "gamma")
)
exp_model <- new("model.ode",
name="exponential",
model=list(
A ~ - m * A
),
observation=list(
nitrogen ~ dnorm(mean=A, sd=sd.nitrogen)
),
initial=list(
A ~ A0
),
par=c("m", "A0", "sd.nitrogen")
)
vignette(package="fitode")
## install
devtools::install_github("parksw3/fitode")
## install
devtools::install_github("parksw3/fitode", force = T)
## load
library(fitode)
vignette(package="fitode")
set.seed(101)
data <- data.frame(
day=1:10,
nitrogen=rnorm(10, mean=5000 * exp(-0.5*(1:10)), sd=100)
)
exp_model <- new("model.ode",
name="exponential",
model=list(
A ~ - m * A
),
observation=list(
nitrogen ~ dnorm(mean=A, sd=sd.nitrogen)
),
initial=list(
A ~ A0
),
par=c("m", "A0", "sd.nitrogen")
)
chl_nh4_mod <- odemodel(
name = "algal_nit",
model = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma *(death1*pred_chl + death2*(pred_chl^2))-cammonium*pred_nh4 ,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl - death2*(pred_chl^2)
),
## consider using bbmle::dnorm_n ?
observation = list(
nh4 ~ dnorm2(mean = pred_nh4),
chl ~ dnorm2(mean = pred_chl)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("alpha", "beta", "omega", "death1","death2", "pred_nh40", "pred_chl0", "gamma")
)
## maybe figure out initial values
start <- c(alpha = 0.03,
beta = 15,
omega=2.3,
death1=0.006,
death2=0.001,
pred_nh40 = 15 ,
pred_chl0 = 40,
gamma=0.01
)
ss <- ode.solve(chl_nh4_mod, 1:11, start,
solver.opts=list(method="rk4", hini=0.1))
plot(dat_nit_27$date1, dat_nit_27$nh4, ylim=c(0, 30))
lines(ss@solution$pred_nh4)
plot(dat_nit_27$date1, dat_nit_27$chl)
lines(ss@solution$pred_chl)
chl_fit_27_dd <- fitode(
chl_nh4_mod,
data = dat_nit_27,
start=start,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1)
)
plot(chl_fit_27_dd, level=0.95)
coef(chl_fit_27_dd)
v = vcov(chl_fit_27_dd)
cc1 = (cov2cor(v))
cc1
v
plot(chl_fit_27_dd, level=0.95)
coef(chl_fit_27_dd)
t
start2 <- coef(chl_fit_27_dd)
start2[["pred_nh40"]] <- 6
start2[["pred_chl0"]] <- 50
##
chl_fit_9_dd <- fitode(
chl_nh4_mod,
data = dat_nit_9,
start=start2,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1)
#method="Nelder-Mead"
)
plot(chl_fit_9_dd, level=0.95)
chl_nh4_mod <- odemodel(
name = "algal_nit",
model = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma *(death1*pred_chl + death2*(pred_chl^2))-cammonium*pred_nh4 ,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl - death2*(pred_chl^2)
),
## consider using bbmle::dnorm_n ?
observation = list(
nh4 ~ dnorm2(mean = pred_nh4),
chl ~ dnorm2(mean = pred_chl)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("alpha", "beta", "omega", "death1","death2", "pred_nh40", "pred_chl0", "gamma")
)
library(bbmle)
chl_nh4_mod <- odemodel(
name = "algal_nit",
model = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma *(death1*pred_chl + death2*(pred_chl^2))-cammonium*pred_nh4 ,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl - death2*(pred_chl^2)
),
## consider using bbmle::dnorm_n ?
observation = list(
nh4 ~ bblme::dnorm_n(mean = pred_nh4),
chl ~ bblme::dnorm_n(mean = pred_chl)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("alpha", "beta", "omega", "death1","death2", "pred_nh40", "pred_chl0", "gamma")
)
chl_nh4_mod <- odemodel(
name = "algal_nit",
model = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma *(death1*pred_chl + death2*(pred_chl^2))-cammonium*pred_nh4 ,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl - death2*(pred_chl^2)
),
## consider using bbmle::dnorm_n ?
observation = list(
nh4 ~ dnorm_n(mean = pred_nh4),
chl ~ dnorm_n(mean = pred_chl)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("alpha", "beta", "omega", "death1","death2", "pred_nh40", "pred_chl0", "gamma")
)
chl_nh4_mod <- odemodel(
name = "algal_nit",
model = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma *(death1*pred_chl + death2*(pred_chl^2))-cammonium*pred_nh4 ,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl - death2*(pred_chl^2)
),
## consider using bbmle::dnorm_n ?
observation = list(
nh4 ~ dnorm(mean = pred_nh4),
chl ~ dnorm(mean = pred_chl)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("alpha", "beta", "omega", "death1","death2", "pred_nh40", "pred_chl0", "gamma")
)
chl_nh4_mod <- odemodel(
name = "algal_nit",
model = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma *(death1*pred_chl + death2*(pred_chl^2))-cammonium*pred_nh4 ,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl - death2*(pred_chl^2)
),
## consider using bbmle::dnorm_n ?
observation = list(
nh4 ~ dnorm2(mean = pred_nh4),
chl ~ dnorm2(mean = pred_chl)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("alpha", "beta", "omega", "death1","death2", "pred_nh40", "pred_chl0", "gamma")
)
## maybe figure out initial values
start <- c(alpha = 0.03,
beta = 15,
omega=2.3,
death1=0.006,
death2=0.001,
pred_nh40 = 15 ,
pred_chl0 = 40,
gamma=0.01
)
ss <- ode.solve(chl_nh4_mod, 1:11, start,
solver.opts=list(method="rk4", hini=0.1))
plot(ss@solution$pred_nh4)
plot(ss@solution$pred_chl)
plot(ss@solution$pred_nh4)
## maybe figure out initial values
start <- c(alpha = 0.03,
beta = 15,
omega=2.3,
death1=0.006,
death2=0.001,
pred_nh40 = 15 ,
pred_chl0 = 40,
gamma=0.01
)
ss <- ode.solve(chl_nh4_mod, 1:45, start,
solver.opts=list(method="rk4", hini=0.1))
plot(ss@solution$pred_nh4)
plot(ss@solution$pred_chl)
nh4 <- rnorm(ss@solution$pred_nh4)
nh4 <- rnorm(ss@solution$pred_nh4, 1)
chl <- rnorm(ss@solution$pred_chl,2)
simdat <- data.frame(
nh4 = rnorm(ss@solution$pred_nh4, 1),
chl = rnorm(ss@solution$pred_chl,2),
date = seq(1,40,1))
simdat <- data.frame(
nh4 = rnorm(ss@solution$pred_nh4, 1),
chl = rnorm(ss@solution$pred_chl,2),
date = seq(1,45,1))
fit <- fitode(
chl_nh4_mod,
data = simdat,
start=start,
tcol = "date",
solver.opts=list(method="rk4", hini=0.1)
)
coef(fit)
plot(fit, level=0.95)
ss <- ode.solve(chl_nh4_mod, 1:100, start,
solver.opts=list(method="rk4", hini=0.1))
simdat <- data.frame(
nh4 = rnorm(ss@solution$pred_nh4, 1),
chl = rnorm(ss@solution$pred_chl,2),
date = seq(1,100,1))
fit <- fitode(
chl_nh4_mod,
data = simdat,
start=start,
tcol = "date",
solver.opts=list(method="rk4", hini=0.1)
)
coef(fit)
simdat <- data.frame(
nh4 = rnorm(ss@solution$pred_nh4, 0.5),
chl = rnorm(ss@solution$pred_chl,1),
date = seq(1,100,1))
fit <- fitode(
chl_nh4_mod,
data = simdat,
start=start,
tcol = "date",
solver.opts=list(method="rk4", hini=0.1)
)
fit <- fitode(
chl_nh4_mod,
data = simdat,
start=start,
tcol = "date",
solver.opts=list(method="rk4", hini=0.1)
)
coef(fit)
