cite(vegan)
library(vegan)
cite("vegan")
?cite
citation("vegan")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
setwd("~/GitHub/Species-Traits/Nitrogen_Algae")
## build priors
litdat <- read.csv("literature_extraction.csv")
str(litdat)
## build priors
library(tidyverse)
plot(litdat$half_sat_mg_N_L)
hist(litdat$half_sat_mg_N_L)
install.packages("fitdistrplus")
library(fitdistrplus)
ff1 <- fitdist(litdat$half_sat_mg_N_L)
?fitdist
ff1 <- fitdist(litdat$half_sat_mg_N_L, "gamma")
ff1 <- fitdist(litdat$half_sat_mg_N_L, "gamma", na.rm =T)
half_sat <- litdat %>% select(half_sat_mg_N_L) %>% filter(!is.na())
half_sat <- litdat %>% select(half_sat_mg_N_L)
## build priors
library(tidyverse)
litdat <- read.csv("literature_extraction.csv")
head(litdat)
litdat %>% select(half_sat_mg_N_L)
?select
half_sat <- litdat %>% dplyr::select(half_sat_mg_N_L)
half_sat <- litdat %>% dplyr::select(half_sat_mg_N_L) %>% filter(!is.na())
half_sat <- litdat %>% dplyr::select(half_sat_mg_N_L) %>% filter(half_sat_mg_N_L != "NA")
halt_sat
half_sat <- litdat %>% dplyr::select(half_sat_mg_N_L) %>% filter(half_sat_mg_N_L != "NA")
half_sat
ff1 <- fitdist(half_sat_mg_N_L, "gamma")
ff1 <- fitdist(half_sat, "gamma")
str(half_sat)
half_sat <- as.vector(half_sat)
ff1 <- fitdist(half_sat, "gamma")
str(half_sat)
half_sat <- as.vector(half_sat)
str(half_sat)
half_sat <- as.vector(half_sat$half_sat_mg_N_L)
ff1 <- fitdist(half_sat, "gamma")
ff1
hist(half_sat)
plot("ff1")
denscomp(ff1)
hist(half_sat)
denscomp(ff1)
hist(half_sat,breaks = 0.2)
hist(half_sat,breaks = 10)
litdat <- read.csv("literature_extraction.csv")
## max uptake
hist(litdat$growth_day)
growth_rate <- litdat %>% dplyr::select(growth_day) %>% filter(growth_day !="NA")
growth_rate <- as.vector(growth_rate$growth_day)
ff2 <- fitdist(growth_rate, "gamma")
ff2
denscomp(ff2)
litdat <- read.csv("literature_extraction.csv")
## death rate
hist(litdat$death_rate_day)
death_rate <- litdat %>% dplyr::select(death_rate_day) %>% filter(death_rate_day != "NA")
death_rate <- as.vector(death_rate$death_rate_day)
ff3 <- fitdist(death_rate, "gamma")
denscomp(ff3)
ff3 <- fitdist(death_rate, "exp")
denscomp(ff3)
ff1 <- fitdist(half_sat, "exp")  ##uses maximum likelihood-- gamma(.365,.0451)
denscomp(ff1)
ff1 <- fitdist(half_sat, "lnorm")  ##uses maximum likelihood-- gamma(.365,.0451)
denscomp(ff1)
ff1 <- fitdist(half_sat, "exp")  ##uses maximum likelihood-- gamma(.365,.0451)
denscomp(ff1)
ff1
ff3
ff1 <- fitdist(half_sat, "beta")  ##uses maximum likelihood-- exp(0.12)
ff1 <- fitdist(half_sat, "exp")  ##uses maximum likelihood-- exp(0.12)
litdat <- read.csv("literature_extraction.csv")
## max uptake NH4
## nitrogen removal rate
hist(litdat$nit_rem_mg_day)
## max uptake NH4
## nitrogen removal rate
hist(litdat$nit_rem_mg_day, breaks = 2)
## max uptake NH4
## nitrogen removal rate
hist(litdat$nit_rem_mg_day, breaks = 15)
nit_rem <- litdat %>% dplyr::select(nit_rem_mg_day) %>% filter(nit_rem_mg_day != "NA")
nit_rem <- as.vector(nit_rem$nit_rem_mg_day)
ff4<- fitdist(nit_rem, "exp")
denscomp(ff4)
ff4<- fitdist(nit_rem, "gamma")
denscomp(ff4)
ff4<- fitdist(nit_rem, "weibull")
denscomp(ff4)
ff4<- fitdist(nit_rem, "exp")
denscomp(ff4)
ff4
litdat <- read.csv("literature_extraction.csv")
## max NH4 uptake (not much data)
hist(litdat$max_uptake_day)
max_up <- litdat %>% dplyr::select(max_uptake_day) %>% filter(max_uptake_day !="NA")
max_up <- as.vector(max_up)
ff5 <- fitdist(max_up, "exp")
max_up <- as.vector(max_up$max_uptake_day)
ff5 <- fitdist(max_up, "exp")
ff5
denscomp(ff5)
ff5 <- fitdist(max_up, "uniform")
?fitdist
ff5 <- fitdist(max_up, "unif")
denscomp(ff5)
ff5
ff5 <- fitdist(max_up, "exp")
denscomp(ff5)
ff5
library(rstan)
library(tidyr)
library(boms)
dat <- read.csv("Algae_Nutrient.csv")
dat_nit_27 <- dat %>%
filter(treat == 27)
dat_nit_27_mod <- dat %>%
filter(treat == 27) %>%
select(date1, rep, chl, nh4) %>%
gather(key, value, -date1, -rep) %>%
mutate(
delta=as.numeric(factor(key))-1
)
dat <- read.csv("Algae_Nutrient.csv")
dat_nit_27_mod <- dat %>%
filter(treat == 27) %>%
select(date1, rep, chl, nh4) %>%
gather(key, value, -date1, -rep) %>%
mutate(
delta=as.numeric(factor(key))-1
)
str(dat)
dat_nit_27_mod <- dat %>%
filter(treat == 27) %>%
dplyr::select(date1, rep, chl, nh4) %>%
gather(key, value, -date1, -rep) %>%
mutate(
delta=as.numeric(factor(key))-1
)
jo_model <- make_model(
grad = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma*(death1*pred_chl+ death2*(pred_chl^2))-0.04085*pred_nh4,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl+ death2*(pred_chl^2)
),
observation =
value ~ (1-delta) * pred_chl + delta * pred_nh4,
initial = list(
pred_nh4 ~ 40,
pred_chl ~ 15
),
par= c("alpha", "beta", "omega","gamma","death1","death2", "delta"),
data=dat_nit_27_mod,
tcol="date1",
family="gaussian"
)
jo_boms_code <- make_stancode_boms(
jo_model,
effect=list(
alpha ~ 1,
beta ~ 1,
omega ~ 1,
gamma ~ 1,
death1 ~ 1,
death2 ~ 1,
sigma ~ -1 + key
),
prior=list(
alpha ~ exponential(0.1),
beta ~ exponential(0.1),
omega ~ exponential(0.12),
gamma ~ exponential(0.1),
death1 + death2 ~ exponential(0.112),
alpha*omega/(omega+pred_nh4) ~ exp(0.18),
beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) ~ gamma(0.968, 1.15)
)
)
denscomp(ff1)
length(half_sat)
half_sat
ff1 <- fitdist(half_sat[half_sat > 1], "exp")  ##uses maximum likelihood-- exp(0.12)
ff1 <- fitdist(half_sat[half_sat > 1], "gamma")  ##uses maximum likelihood-- exp(0.12)
denscomp(ff1)
ff1 <- fitdist(half_sat, "gamma")  ##uses maximum likelihood-- exp(0.12)
denscomp(ff1)
ff1 <- fitdist(half_sat, "exp")  ##uses maximum likelihood-- exp(0.12)
denscomp(ff2)
length(growth_rate)
hist(growth_rate, breaks = 30)
?dgamma
samp <- readRDS("samp1.RDS")
traceplot(samp, pars = c("b_alpha", "b_beta", "b_omega", "b_gamma"))
## death rate
hist(litdat$death_rate_day)
death_rate <- litdat %>% dplyr::select(death_rate_day) %>% filter(death_rate_day != "NA")
death_rate <- as.vector(death_rate$death_rate_day)
death_rate_day
death_rate
litdat <- read.csv("literature_extraction.csv")
death_rate <- litdat %>% dplyr::select(death_rate_day) %>% filter(death_rate_day != "NA")
death_rate <- as.vector(death_rate$death_rate_day)
ff3 <- fitdist(death_rate, "gamma")  ## exp(0.112)
denscomp(ff3)
ff3
length(death_rate)
?dgamma
dgamma(growth_rate, shape = 1, raate = 9)
dgamma(growth_rate, shape = 1, rate = 9)
plot(dgamma(growth_rate, shape = 1, rate = 9))
hist(dgamma(growth_rate, shape = 1, rate = 9))
hist(death_rate, breaks = 6)
hist(death_rate, breaks = 3)
hist(death_rate, breaks = 6)
hist(death_rate, breaks = 5)
length(death_rate)
hist(death_rate)
yfit <- dgamma(rate = 9, shape = 1)
yfit <- dgamma(death_rate, rate = 9, shape = 1)
yfit
death_rate
lines(yfit)
ff3 <- fitdist(death_rate, "gamma")  ##
ff3
yfit <- dgamma(death_rate, rate = 9, shape = .79)
lines(yfit)
denscomp(ff3)
hist(death_rate)
lines(yfit)
lines(density(death_rate))
denscomp(ff1)
ff1
ff1 <- fitdist(half_sat, "gamma")  ##uses maximum likelihood-- exp(0.12)
denscomp(ff1)
ff1
ff3 <- fitdist(death_rate, "gamma")  ##
ff3
ff5
ff5 <- fitdist(max_up, "gamma")
denscomp(ff5)
ff5
library(boms)
jo_model <- make_model(
grad = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma*(death1*pred_chl+)-0.04085*pred_nh4,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl
),
observation =
value ~ (1-delta) * pred_chl + delta * pred_nh4,
initial = list(
pred_nh4 ~ 40,
pred_chl ~ 15
),
par= c("alpha", "beta", "omega","gamma","death1", "delta"),
data=dat_nit_27_mod,
tcol="date1",
family="gaussian"
)
jo_model <- make_model(
grad = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma*(death1*pred_chl)-0.04085*pred_nh4,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl
),
observation =
value ~ (1-delta) * pred_chl + delta * pred_nh4,
initial = list(
pred_nh4 ~ 40,
pred_chl ~ 15
),
par= c("alpha", "beta", "omega","gamma","death1", "delta"),
data=dat_nit_27_mod,
tcol="date1",
family="gaussian"
)
jo_boms_code <- make_stancode_boms(
jo_model,
effect=list(
alpha ~ 1,
beta ~ 1,
omega ~ 1,
gamma ~ 1,
death1 ~ 1,
sigma ~ -1 + key
),
prior=list(
alpha ~ gamma(1.13,.12),
beta ~ exponential(0.1),
omega ~ gamma(.365,.045),
gamma ~ exponential(0.1),
death1 ~ gamma(.79,9.77)
)
)
jo_boms_data <- make_standata_boms(
jo_model,
effect=list(
alpha ~ 1,
beta ~ 1,
omega ~ 1,
gamma ~ 1,
death1 ~ 1,
sigma ~ -1 + key
),
prior=list(
alpha ~ gamma(1.13,.12),
beta ~ exponential(0.1),
omega ~ gamma(.365,.045),
gamma ~ exponential(0.1),
death1 ~ gamma(.79,9.77)
)
)
rt <- rstan::stanc(model_code=jo_boms_code)
jo_boms_code
sm <- rstan::stan_model(file = "jo_boms_inprior.stan")
samp <- rstan::sampling(sm, data = jo_boms_data, chains = 1, iter = 2000, refresh = 1)
sm
hist(half_sat,breaks = 10)
ff1 <- fitdistr(half_sat, "gamma")  ##uses maximum likelihood-- exp(0.12)  # gamma(.365,.045)
denscomp(ff1)
ff1 <- fitdist(half_sat, "gamma")  ##uses maximum likelihood-- exp(0.12)  # gamma(.365,.045)
xfit <- seq(min(half_sat), max(half_sat), length = 40)
yfit <- dgamma(xfit, shape = 1, rate = 1)
lines(xfit, yfit)
yfit <- dgamma(xfit, shape = .365, rate = .045)
lines(xfit, yfit)
yfit <- dgamma(xfit, shape = 1, rate = 5)
lines(xfit, yfit)
?fitdist
ff1 <- fitdist(half_sat, "lognormal")  ##uses maximum likelihood-- exp(0.12)  # gamma(.365,.045)
ff1 <- fitdist(half_sat, "dlognormal")  ##uses maximum likelihood-- exp(0.12)  # gamma(.365,.045)
ff1 <- fitdistr(half_sat, "lognormal")  ##uses maximum likelihood-- exp(0.12)  # gamma(.365,.045)
ff1
?fitdistr
?dlnorm
yfit <- dlnorm(xfit,meanlog = .2665, sdlog = 2.9 )
lines(xfit, yfit)
plot.new()
hist(half_sat,breaks = 10)
lines(xfit, yfit)
yfit <- dlnorm(xfit,meanlog = 5, sdlog = 2.9 )
lines(xfit, yfit)
exp(0.2665009)
log(0.2665009)
devtools::install_github("parksw3/boms")
