dat %>% filter(ExptDay == 1) %>% summarize(nh4= mean(NH4, na.rm = T))
ggplot(dat[], aes(ExptDay, Chl)) + geom_point()
ggplot(dat[Chl < 150,], aes(ExptDay, Chl)) + geom_point()
ggplot(dat[dat$Chl < 150,], aes(ExptDay, Chl)) + geom_point()
ggplot(dat, aes(ExptDay,NH4)) + geom_point()
plot(1-exp(-seq(0:100)))
plot(1-exp(-seq(0,2,by=0.01)))
lm(data=dat1, nh4_diff_cc/diff_chl_cc ~ 1)
dat1
head(dat1)
lm(data=dat1, nh4_diff_cc/chl_diff_cc ~ 1)
hist(nh4_diff_cc/chl_diff_cc, breaks = 20)
with(dat1, hist(nh4_diff_cc/chl_diff_cc, breaks = 20))
min(dat1$Nh4.1)
min(dat1$Chl.1)
rdatj <- read.csv("Small_Daph_Feeding.csv")
setwd("~/GitHub/Species-Traits/Daphnia")
rdatj <- read.csv("Small_Daph_Feeding.csv")
cont <- rdatj %>%
filter(Control.Y.N == "Y") %>%
mutate(chl_diff =((Chl.1-Chl.2)/Chl_Time_Diff)*1440, nh4_diff= ((Nh4.1-Nh4.2)/Nh4_Time_Dif)*1440) %>%
group_by(Treatment) %>%
summarize(mean_chl = mean(chl_diff, na.rm = T), mean_nh4 = mean(nh4_diff,na.rm = T)) ## onr row in treatment 3 is all NAs..??
## add mean control avg back to main dataframe
dat <- left_join(rdatj,cont)
dat <- dat %>%
mutate(chl_diff = ((Chl.1-Chl.2)/Chl_Time_Diff)*1440, nh4_diff = ((Nh4.1-Nh4.2)/Nh4_Time_Dif)*1440) %>%
mutate(chl_diff_cc = (chl_diff-mean_chl)/Num_Daphnia, nh4_diff_cc = (nh4_diff-mean_nh4)/Num_Daphnia)  ## need to add in diff from control bc if positive algae grew so indiv actually ate more if neg indiv ate less
dat1 <- dat %>% filter(Control.Y.N == "N") %>% filter(!is.na(chl_diff_cc)) %>%
filter(!is.na(nh4_diff_cc)) %>% filter(nh4_diff_cc > -5) %>% ## remove one weird measurement
select(Rep.., Treatment,Chl.1,Nh4.1, chl_diff_cc,nh4_diff_cc, Num_Daphnia)
ggplot(dat1, aes(Chl.1,chl_diff_cc)) + geom_point()
mod_lm <- lm(data = dat1, chl_diff_cc ~ Chl.1)
summary(mod_lm)
mod_lm <- lm(data = dat1, chl_diff_cc ~ -1+Chl.1)
mod_lm
lm(data=dat1, nh4_diff_cc/chl_diff_cc ~ 1)
1/14
hist(dat1$nh4_diff_cc,dat1$chl_diff_cc, breaks = 30)
hist(dat1$nh4_diff_cc/dat1$chl_diff_cc, breaks = 30)
hist(dat1$nh4_diff_cc)
lm(data=dat1[dat1$nh4_diff_cc < 0 ,], nh4_diff_cc/chl_diff_cc ~ 1)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*a_exc_m*.0004*a_feed_m*dalgae - daph_j*j_exc_m*.227*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(65/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*a_exc_m*.0004*a_feed_m*dalgae - daph_j*j_exc_m*.227*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*a_exc_m*.0004*a_feed_m*dalgae - daph_j*j_exc_m*.227*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta*100 * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*a_exc_m*.0004*a_feed_m*dalgae - daph_j*j_exc_m*.227*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta*10 * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
parameters
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*a_exc_m*.0004*a_feed_m*dalgae - daph_j*j_exc_m*.227*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*a_exc_m*.227*a_feed_m*dalgae - daph_j*j_exc_m*.227*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*.227*a_feed_m*dalgae - daph_j*.227*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*.227*a_feed_m*dalgae + daph_j*.227*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*.0227*a_feed_m*dalgae + daph_j*.0227*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
parameters
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*.0007*a_feed_m*dalgae + daph_j*.0007*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*.0004*a_feed_m*dalgae + daph_j*.0004*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
parameters
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*.0004*a_feed_m*dalgae + daph_j*.0004*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma/2 * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
library(tidyverse)
library(fitode)
library(corrplot)
source("../transfer_functions.R")
dat <- read.csv("Algae_Nutrient.csv")
dat_nit_27 <- dat %>%
filter(treat == 27)
dat <- read.csv("Algae_Nutrient.csv")
setwd("~/GitHub/Species-Traits/Nitrogen_Algae")
dat <- read.csv("Algae_Nutrient.csv")
dat_nit_27 <- dat %>%
filter(treat == 27)
dat_nit_9 <- dat %>%
filter(treat == 9)
dat_nit_3 <- dat %>%
filter(treat == 3)
dat_nit_108 <- dat %>%
filter(treat == 108)
dat_nit_54 <- dat %>%
filter(treat == 54)
dat_nit_0.5 <- dat %>%
filter(treat == 0.5)
parameters
cammonium = 9.4235e-01 # proportional ammonium lost to env-- calc in nutrient_air.R
cammonium = (1-9.4235e-01) # proportional ammonium lost to env-- calc in nutrient_air.R
chl_nh4_mod <- new("model.ode",
name = "algal_nit",
model = list(
pred_nh4 ~ -pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) + gamma *(death1*pred_chl + death2*(pred_chl^2))-cammonium*pred_nh4 ,
pred_chl ~ beta * pred_chl*pred_nh4*alpha*omega/(omega+pred_nh4) - death1*pred_chl - death2*(pred_chl^2)
),
## consider using bbmle::dnorm_n ?
observation = list(
nh4 ~ dnorm2(mean = pred_nh4),
chl ~ dnorm2(mean = pred_chl)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("alpha", "beta", "omega", "death1","death2", "pred_nh40", "pred_chl0", "gamma")
)
## maybe figure out initial values
start <- c(alpha = 0.03,
beta = 15,
omega=2.3,
death1=0.006,
death2=0.001,
pred_nh40 = 15 ,
pred_chl0 = 40,
gamma=0.01
)
chl_fit_27_dd <- fitode(
chl_nh4_mod,
data = dat_nit_27,
start=start,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1)
)
plot(chl_fit_27_dd, level=0.95)
coef(chl_fit_27_dd)
v = vcov(chl_fit_27_dd)
cc1 = (cov2cor(v))
##
chl_fit_9_dd <- fitode(
chl_nh4_mod,
data = dat_nit_9,
start=start2,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1)
#method="Nelder-Mead"
)
start2 <- coef(chl_fit_27_dd)
start2[["pred_nh40"]] <- 6
start2[["pred_chl0"]] <- 50
##
chl_fit_9_dd <- fitode(
chl_nh4_mod,
data = dat_nit_9,
start=start2,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1)
#method="Nelder-Mead"
)
plot(chl_fit_9_dd, level=0.95)
coef(chl_fit_9_dd)
v= vcov(chl_fit_9_dd,"fitted")
cm = cov2cor(v)
start3 <- c(alpha = 0.003,
beta = 15,
omega=400,
death1=0.001,
death2=0.00003,
pred_nh40 = 3.5 ,
pred_chl0 = 40,
gamma=1,
sd1 = .2,
sd2 = 30)
plot(dat_nit_3$date1, dat_nit_3$nh4, ylim=c(0, 7))
chl_fit_3_dd <- fitode(
chl_nh4_mod,
data = dat_nit_3,
start=start3,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1)
#method="Nelder-Mead"
)
plot(chl_fit_3_dd, level=0.95)
start4 <- coef(chl_fit_27_dd)
start4[["pred_nh40"]] <- 22
start4[["pred_chl0"]] <- 40
chl_fit_54 <- fitode(
chl_nh4_mod,
data = dat_nit_54,
start=start4,
tcol = "date1" ,
solver.opts=list(method="rk4", hini=0.1)
#method="Nelder-Mead"
)
plot(chl_fit_54, level=0.95)
start5 <- coef(chl_fit_54)
start5[["pred_nh40"]] <- 40
start5[["pred_chl0"]] <- 40
chl_fit_108 <- fitode(
chl_nh4_mod,
data = dat_nit_108,
start=start5,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1))
plot(chl_fit_108,level = 0.95)
start6 <- coef(chl_fit_27_dd)
start6[["pred_nh40"]] <- 2.5
start6[["pred_chl0"]] <- 40
#### this isn't great-- will also fit with 54 starting starting values but that has worse fit
chl_fit_0.5 <- fitode(
chl_nh4_mod,
data = dat_nit_0.5,
start=start6,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1)
)
plot(chl_fit_0.5, level = 0.95)
chl_fit_0.5a <- fitode(
chl_nh4_mod,
data = dat_nit_0.5[dat_nit_0.5$nh4 < 4,],
start=start6,
tcol = "date1" ,
solver.opts=list(method="rk4", hini=0.1)
)
plot(chl_fit_0.5a, level = 0.95)
treat0.5 <- data.frame(confint(chl_fit_0.5a))
treat3 <- data.frame(confint(chl_fit_3_dd))
treat9 <- data.frame(confint(chl_fit_9_dd))
treat27 <- data.frame(confint(chl_fit_27_dd))
treat54 <- data.frame(confint(chl_fit_54))
treat108 <- data.frame(confint(chl_fit_108))
all_param <- data.frame(
model =  rep(c("chl_fit_0.5", "chl_fit_3","chl_fit_9","chl_fit_27","chl_fit_54","chl_fit_108"), each=8),
parameter = rep(names(start),6),
estimate = c(treat0.5$estimate,treat3$estimate,treat9$estimate,treat27$estimate,treat54$estimate,treat108$estimate),
lowcon = c(treat0.5$X2.5..,treat3$X2.5..,treat9$X2.5..,treat27$X2.5..,treat54$X2.5..,treat108$X2.5..),
uppcon =  c(treat0.5$X97.5..,treat3$X97.5..,treat9$X97.5..,treat27$X97.5..,treat54$X97.5..,treat108$X97.5..)
)
all_param$model <- factor(all_param$model, levels = c("chl_fit_0.5", "chl_fit_3","chl_fit_9","chl_fit_27","chl_fit_54","chl_fit_108"))
filter_param <- all_param %>%
filter(!(parameter %in% c("pred_nh40", "pred_chl0", "sd1", "sd2")))
ggplot(filter_param, aes(model,estimate)) +
geom_point() +
#geom_errorbar(aes(model, ymin=lowcon, ymax=uppcon)) +
#scale_y_log10() +
facet_wrap(~parameter, scale="free_y")
par_high <- filter_param %>% filter( model != "chl_fit_0.5")
ggplot(par_high, aes(model,estimate)) +
geom_point() +
#geom_errorbar(aes(model, ymin=lowcon, ymax=uppcon)) +
scale_y_log10() +
facet_wrap(~parameter, scale="free_y")
## remove really high estimates
par2 <- filter_param %>% filter(estimate < 1000)
ggplot(par2, aes(model,estimate)) +
geom_point() +
#geom_errorbar(aes(model, ymin=lowcon, ymax=uppcon)) +
#scale_y_log10() +
facet_wrap(~parameter, scale="free_y")
param_avg <- all_param %>% group_by(parameter) %>% summarise(med = median(estimate), avg = mean(estimate))
param_avg
#parameters- will need parameters for each function
parameters <- c(
alpha = 4.379716e-03, beta = 29,
death1 = .007, death2 = 0.000082,
gamma =  0.365 , omega = 10.5,
growth_a = median(param$growth_a), growth_b = median(param$growth_b),
death_b = median(param$death_b), a_feed_m = median(param$a_feed_m),
a_exc_m = median(param$a_exc_m), j_feed_m = median(param$j_feed_m),
j_exc_m = median(param$j_exc_m), amm_param_b = median(param$amm_param_b),
fec_a = median(param$fec_a), fec_b = median(param$fec_b)
)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*.0004*a_feed_m*dalgae + daph_j*.0004*.037*dalgae -  ## need to fix excretion- not right
dalgae*dammonium*alpha*omega/(omega+dammonium) +
# ((dammonium*alpha*omega/(omega+dammonium)) / 10) * (death1*dalgae + death2*(dalgae^2)) -
gamma/2 * (death1*dalgae + death2*(dalgae^2)) -
# lagvalue(t - 5, 1) -
(1-amm_param_b)*dammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <- beta * dalgae*dammonium*alpha*omega/(omega+dammonium) - death1*dalgae - death2*(dalgae^2)-
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters)
plot(out)
