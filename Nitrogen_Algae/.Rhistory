cite(vegan)
library(vegan)
cite("vegan")
?cite
citation("vegan")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
library(rstan)
## trying again to get diff eqs correct
devtools::install_github("parksw3/boms")
## install
devtools::install_github("parksw3/fitode")
## install
devtools::install_github("parksw3/fitode")
setwd("~/GitHub/Species-Traits/RDS_compiled")
source("../transfer_functions.R")
source("treatments.R")
library(deSolve)
param <- read.csv("parameters_no_cerio.csv")
state <- c(dammonium = 4.4,
daph_j = 0,
daph_a = 20,
dalgae = 15
)
setwd("~/GitHub/Species-Traits/Nitrogen_Algae")
ibrary(tidyverse)
library(fitode)
source("../transfer_functions.R")
dat <- read.csv("Algae_Nutrient.csv")
dat_nit_27 <- dat %>%
filter(treat == 27)
library(tidyverse)
dat_nit_27 <- dat %>%
filter(treat == 27)
cammonium = (1-9.4235e-01) # proportional ammonium lost to env-- calc in nutrient_air.R
chl_nh4_mod3 <- odemodel(
name = "algal_nit",
model = list(
pred_nh4 ~ -a*pred_chl*(pred_nh4/(k+pred_nh4))+r*death*pred_chl-cammonium,
pred_chl ~ a*pred_chl*(pred_nh4/(k+pred_nh4)) - death*pred_chl
),
observation = list(
nh4 ~ dlnorm(meanlog = log(pred_nh4), sdlog = 0.05),
chl ~ dlnorm(meanlog = log(pred_chl), sdlog = 0.01)
),
initial = list(pred_nh4 ~ pred_nh40 , pred_chl ~ pred_chl0),
par=c("a","k", "r","death", "pred_nh40", "pred_chl0")
)
start <- c(a = 0.03,
k = .03,
r = 1,
death = 0.02,
pred_nh40= 15,
pred_chl0 = 40
)
chl_fit_27_dd <- fitode(
chl_nh4_mod3,
data = dat_nit_27,
start=start,
tcol = "date1",
solver.opts=list(method="rk4", hini=0.1)
)
coef(fit)
coef(chl_fit_27)
coef(chl_fit_27_dd)
#parameters- will need parameters for each function
parameters_med <- c(
a = 0.551405776, k = 9.896719287,
r = 69.478832953, death = 0.001936656,
growth_a = median(param$growth_a), growth_b = median(param$growth_b),
death_b = median(param$death_b), a_feed_m = median(param$a_feed_m),
a_exc_m = median(param$a_exc_m), j_feed_m = median(param$j_feed_m),
j_exc_m = median(param$j_exc_m), amm_param_b = median(param$amm_param_b),
fec_a = median(param$fec_a), fec_b = median(param$fec_b)
)
d_equations <-function(t, state, parameters) {
with(as.list(c(state, parameters)),{
# rate of change
# ammonium is added from release by both juvenile and adult daphnia
ddammonium <- daph_a*a_exc_m*a_feed_m*dalgae + daph_j*a_exc_m*j_feed_m*dalgae -  ## need to fix excretion- not right
a*dalgae*(dammonium/(k+dammonium))+r*death*dalgae-cammonium
ddaph_j <- sat_fun(fec_a,fec_b,dalgae)*daph_a - daph_j*(35/70)
#daphnia adults are added from growth by juveniles and are lost from death
ddaph_a <- 1/(sat_fun(growth_a,growth_b,dalgae))*daph_j- daph_a*(1/death_b)
ddalgae <-a*dalgae*(dammonium/(k+dammonium)) - death*dalgae -
daph_a*a_feed_m*dalgae - daph_j*j_feed_m*dalgae
# return the rate of change
list(c(ddammonium, ddaph_j,ddaph_a,ddalgae))
}) # end with(as.list ...
}
out_med <- ode(y = state, times = seq(0,42,0.1), func = d_equations, parms = parameters_med)
plot(out_med)
